{"version":3,"sources":["webpack:///./src/components/accordion.js"],"names":["Wrapper","styled","div","Curve","TabsWrapper","TabBox","PanelWrapper","color","grey1","orange1","Button","button","Content","Icon","cn","args","filter","Boolean","join","Tab","children","useTabState","isActive","onClick","className","panel","hidden","height","visible","Panel","usePanelState","animate","transition","ease","duration","variants","Accordion","faq","partialVisibility","once","isVisible","items","map","item","question","answer","el","id","to","url","text","list","listitem"],"mappings":"4FAAA,gIAUMA,EAAUC,IAAOC,IAAV,yEAAGD,CAAH,yHAYPE,EAAQF,IAAOC,IAAV,uEAAGD,CAAH,2GAaLG,EAAcH,IAAOC,IAAV,6EAAGD,CAAH,oEAOXI,EAASJ,IAAOC,IAAV,wEAAGD,CAAH,yGASNK,EAAeL,IAAOC,IAAV,8EAAGD,CAAH,sbAmBLM,IAAMC,MAWJD,IAAME,SAsBfC,EAAST,IAAOU,OAAV,wEAAGV,CAAH,wPAwBNW,EAAUX,IAAOC,IAAV,yEAAGD,CAAH,yJAcPY,EAAOZ,IAAOC,IAAV,sEAAGD,CAAH,8JAcJa,EAAK,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAaA,EAAKC,OAAOC,SAASC,KAAK,MAE5CC,EAAM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACEC,cAAtBC,EADoB,EACpBA,SAAUC,EADU,EACVA,QAElB,OACE,kBAACb,EAAD,CAAQc,UAAWV,EAAG,gBAAiBQ,GAAY,UAAWC,QAASA,GACpEH,IAKDK,EAAQ,CACZC,OAAQ,CAAEC,OAAQ,GAClBC,QAAS,CAAED,OAAQ,SAGfE,EAAQ,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SACTE,EAAWQ,cAEjB,OACE,kBAAC,IAAO5B,IAAR,CAAYsB,UAAU,kBAAkBO,QAAST,EAAW,UAAY,SAAUU,WAAY,CAAEC,KAAM,UAAWC,SAAU,IAAOC,SAAUV,GACzIL,IAgDQgB,UA3CG,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACnB,OACE,kBAAC,IAAD,CAAkBC,mBAAiB,EAACC,MAAI,IACrC,gBAAGC,EAAH,EAAGA,UAAH,OACC,kBAACxC,EAAD,CAASwB,UAAWgB,EAAY,gBAAkB,WAChD,kBAACrC,EAAD,KACE,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAACC,EAAD,KACGiC,EAAII,MAAMC,KAAI,SAACC,GAAD,OACb,kBAACtC,EAAD,KACE,kBAACc,EAAD,KACE,kBAACN,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACD,EAAD,KACE,8BAAO+B,EAAKC,YAGhB,kBAACf,EAAD,KACE,kBAACvB,EAAD,KAC0B,iBAAhBqC,EAAKE,OAAsB,2BAAIF,EAAKE,QAAc,KAClC,iBAAhBF,EAAKE,OAAsB,2BAAIF,EAAKE,OAAOH,KAAI,SAACI,EAAIC,GAAL,OAAaA,EAAK,EAAI,kBAAC,OAAD,CAAMC,GAAIF,EAAGG,KAAb,IAAuBH,EAAGI,KAA1B,KAA4CJ,EAAGI,SAAc,KAEzIP,EAAKQ,MACJ,4BACGR,EAAKQ,KAAKT,KAAI,SAACU,GAAD,OACb,4BAAKA","file":"81-82095df66fcf7f2bb5f5.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport { Tabs, useTabState, usePanelState } from \"@bumaga/tabs\";\r\nimport { motion } from \"framer-motion\";\r\nimport { color } from \"./styles/colors\";\r\nimport ArrowSVG from \"../images/arrow-circle.inline.svg\";\r\nimport CurveSVG from \"../images/orange-curve.inline.svg\";\r\nimport VisibilitySensor from \"./VisibilitySensor\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  margin-top: 80px;\r\n\r\n  @media (min-width: 769px) {\r\n    width: auto;\r\n    padding: 25px 29px 0;\r\n  }\r\n`;\r\n\r\nconst Curve = styled.div`\r\n  height: 25px;\r\n  width: 25px;\r\n  position: absolute;\r\n  top: -16px;\r\n  left: -13px;\r\n\r\n  @media (min-width: 769px) {\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nconst TabsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 770px;\r\n`;\r\n\r\nconst TabBox = styled.div`\r\n  box-shadow: 0 24px 32px 0 rgba(236, 236, 236, 0.5);\r\n  margin-bottom: 8px;\r\n\r\n  .accordion-panel {\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst PanelWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #fff;\r\n\r\n  margin-bottom: 7px;\r\n  padding: 15px;\r\n  z-index: 1;\r\n\r\n  @media (min-width: 769px) {\r\n    padding: 24px 40px 40px 80px;\r\n  }\r\n\r\n  h3 {\r\n    margin-bottom: 48px;\r\n  }\r\n\r\n  p,\r\n  li {\r\n    color: ${color.grey1};\r\n    font-family: Avenir, sans-serif;\r\n    max-width: 650px;\r\n    text-align: left;\r\n  }\r\n\r\n  p {\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n\r\n    a {\r\n      color: ${color.orange1};\r\n      font-size: inherit;\r\n      line-height: inherit;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  li {\r\n    font-size: 14px;\r\n    line-height: 19px;\r\n  }\r\n\r\n  ul {\r\n    //list-style: none;\r\n    padding-left: 16px;\r\n\r\n    li {\r\n      padding-top: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 80px;\r\n  width: 100%;\r\n  line-height: 80px;\r\n  color: #4e4e4e;\r\n  background: #fff;\r\n  display: flex;\r\n  cursor: pointer;\r\n\r\n  position: relative;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  border: none;\r\n\r\n  &.active {\r\n    border-radius: 5px 5px 0 0;\r\n    font-weight: 600;\r\n\r\n    svg {\r\n      transform: rotate(0deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  padding-right: 40px;\r\n\r\n  span {\r\n    color: #4e4e4e;\r\n    font-family: Avenir;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 80px;\r\n  width: 80px;\r\n  opacity: 0.75;\r\n\r\n  svg {\r\n    transform: rotate(180deg);\r\n    transition: transform 0.3s ease;\r\n  }\r\n`;\r\n\r\nconst cn = (...args) => args.filter(Boolean).join(\" \");\r\n\r\nconst Tab = ({ children }) => {\r\n  const { isActive, onClick } = useTabState();\r\n\r\n  return (\r\n    <Button className={cn(\"accordion-tab\", isActive && \"active\")} onClick={onClick}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst panel = {\r\n  hidden: { height: 0 },\r\n  visible: { height: \"auto\" },\r\n};\r\n\r\nconst Panel = ({ children }) => {\r\n  const isActive = usePanelState();\r\n\r\n  return (\r\n    <motion.div className=\"accordion-panel\" animate={isActive ? \"visible\" : \"hidden\"} transition={{ ease: \"easeOut\", duration: 0.3 }} variants={panel}>\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst Accordion = ({ faq }) => {\r\n  return (\r\n    <VisibilitySensor partialVisibility once>\r\n      {({ isVisible }) => (\r\n        <Wrapper className={isVisible ? \"slideUp enter\" : \"slideUp\"}>\r\n          <Curve>\r\n            <CurveSVG />\r\n          </Curve>\r\n          <Tabs>\r\n            <TabsWrapper>\r\n              {faq.items.map((item) => (\r\n                <TabBox>\r\n                  <Tab>\r\n                    <Icon>\r\n                      <ArrowSVG />\r\n                    </Icon>\r\n                    <Content>\r\n                      <span>{item.question}</span>\r\n                    </Content>\r\n                  </Tab>\r\n                  <Panel>\r\n                    <PanelWrapper>\r\n                      {typeof item.answer === \"string\" ? <p>{item.answer}</p> : null}\r\n                      {typeof item.answer === \"object\" ? <p>{item.answer.map((el, id) => (id % 2 ? <Link to={el.url}>{` ${el.text} `}</Link> : el.text))}</p> : null}\r\n                      {/* <p>{item.answer}</p> */}\r\n                      {item.list && (\r\n                        <ul>\r\n                          {item.list.map((listitem) => (\r\n                            <li>{listitem}</li>\r\n                          ))}\r\n                        </ul>\r\n                      )}\r\n                    </PanelWrapper>\r\n                  </Panel>\r\n                </TabBox>\r\n              ))}\r\n            </TabsWrapper>\r\n          </Tabs>\r\n        </Wrapper>\r\n      )}\r\n    </VisibilitySensor>\r\n  );\r\n};\r\nexport default Accordion;\r\n"],"sourceRoot":""}