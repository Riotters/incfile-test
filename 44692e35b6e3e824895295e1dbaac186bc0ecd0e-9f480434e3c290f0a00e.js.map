{"version":3,"sources":["webpack:///./src/atomic/molecules/text-blocks/blue-box-with-absolute-text.js","webpack:///./src/images/purple-curve.inline.svg","webpack:///./src/components/partials/blocks/heading-center.js","webpack:///./src/components/color-box.js","webpack:///./src/atomic/molecules/text-blocks/counting-text-boxed.js","webpack:///./src/atomic/atoms/shapes/curve.js","webpack:///./src/images/oval-blue-5.inline.svg","webpack:///./src/atomic/molecules/image-blocks/info-card-color-bg-header.js","webpack:///./src/atomic/molecules/image-blocks/info-card-content.js","webpack:///./src/atomic/organisms/cards/info-card-with-image.js","webpack:///./src/atomic/partials/info-cards-section.js","webpack:///./src/images/icons/umbrella.inline.svg","webpack:///./src/components/arrow-link.js","webpack:///./src/images/icons/close.inline.svg","webpack:///./src/components/adventages.js"],"names":["Wrapper","styled","div","color","blue3","AbsoluteText","blue1","Text","Paragraph","black","BlueBoxWithAbsoluteText","absoluteText","text","big","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","d","fill","fillRule","props","width","height","headlineWidth","textWidth","TextCenterLayout","className","headline","linkText","linkUrl","partialVisibility","once","isVisible","href","theme","grey1","dotsColor","curveColor","Colorbox","Icon","children","curve","white","shadow","white1","Box","span","IconWrapper","CountingTextBoxed","number","circleColor","iconColor","defaultProps","Curve","style","id","x1","x2","y1","y2","offset","stopColor","stopOpacity","_ref2","transform","backgroundColor","ImageWrapper","InfoCardColorBgHeader","imageName","filename","ContentWrapper","InfoCardContent","title","content","size","fontSize","InfoCardWithImage","roundTopLeft","roundTopRight","roundBottomLeft","roundBottomRight","CardWrapper","babyblue3","SectionWrapper","InfoCardsSection","cards","map","item","stroke","strokeLinecap","strokeLinejoin","strokeWidth","a","Arrow","ArrowLink","Circle","circleBackgroundColor","circleBackgroundShadow","position","colorStroke","AdeventageLink","Link","Adventages","circlePosition","circleText","url","urlText","disadventage","viewBox","points","to","green1"],"mappings":"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","file":"44692e35b6e3e824895295e1dbaac186bc0ecd0e-9f480434e3c290f0a00e.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {color} from \"../../atoms/styles/colors\";\r\nimport {Paragraph} from \"../../atoms/typography/paragraph\";\r\n\r\nconst BlueBoxWithAbsoluteText = ({absoluteText, text}) => (\r\n    <Wrapper>\r\n        <AbsoluteText>{absoluteText}</AbsoluteText>\r\n        <Text big>\r\n            {text}\r\n        </Text>\r\n    </Wrapper>\r\n);\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: ${color.blue3};\r\n    padding: 40px;\r\n    position: relative;\r\n    border-radius: 30px;\r\n    margin-bottom: 44px;\r\n`;\r\n\r\nconst AbsoluteText = styled.div`\r\n    color: ${color.blue1};\r\n    position: absolute;\r\n    top: -25px;\r\n    left: 40px;\r\n    font-size: 48px;\r\n    line-height: 56px;\r\n    font-weight: bold;\r\n    font-family: \"MarkPro-Bold\", sans-serif;\r\n`;\r\n\r\nconst Text = styled(Paragraph)`\r\n    margin-bottom: 0 !important;\r\n    font-weight: bold;\r\n    font-family: Avenir-Heavy, sans-serif;\r\n    color: ${color.black};\r\n`;\r\n\r\nexport default BlueBoxWithAbsoluteText;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 1.389c0 .746.599 1.349 1.354 1.384a26.869 26.869 0 0112.317 3.66c6.754 3.954 11.098 10.402 12.544 17.451A1.4 1.4 0 0027.592 25c.89 0 1.556-.806 1.38-1.666-1.599-7.79-6.398-14.916-13.863-19.286A29.704 29.704 0 001.46.002 1.393 1.393 0 000 1.387v.002z\",\n  fill: \"#C9A3EE\",\n  fillRule: \"evenodd\"\n});\n\nfunction SvgPurpleCurveinline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 29,\n    height: 25\n  }, props), _ref);\n}\n\nexport default SvgPurpleCurveinline;","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ArrowLink from \"../../arrow-link\"\r\nimport VisibilitySensor from \"../../VisibilitySensor\"\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  h2 {\r\n    max-width: ${props => props.headlineWidth ? props.headlineWidth : '610'}px;\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  p {\r\n    max-width: ${props => props.textWidth ? props.textWidth : '750'}px;\r\n    text-align: center;\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  a {\r\n    margin-bottom: 24px;\r\n  }\r\n`\r\n\r\nconst TextCenterLayout = ({className, headline, headlineWidth, text, textWidth, linkText, linkUrl}) => {\r\n\r\n  return (\r\n    <Wrapper className={className} headlineWidth={headlineWidth} textWidth={textWidth}>\r\n        {headline && (\r\n            <VisibilitySensor partialVisibility once>\r\n                {({ isVisible }) => (\r\n                <h2 className={isVisible ? \"slideUp enter\" : \"slideUp\"}>\r\n                    {headline}\r\n                </h2>\r\n                )}\r\n            </VisibilitySensor>\r\n        )}\r\n        {text && (\r\n            <VisibilitySensor partialVisibility once>\r\n                {({ isVisible }) => (\r\n                <p className={isVisible ? \"slideUp enter\" : \"slideUp\"}>\r\n                    {text}\r\n                </p>\r\n                )}\r\n            </VisibilitySensor>\r\n        )}\r\n        {linkText && (\r\n            <VisibilitySensor partialVisibility once>\r\n                {({ isVisible }) => (\r\n                <ArrowLink href={linkUrl} className={isVisible ? \"slideUp enter\" : \"slideUp\"}>\r\n                    {linkText}\r\n                </ArrowLink>\r\n                )}\r\n            </VisibilitySensor>\r\n        )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TextCenterLayout\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Curve from \"../images/purple-curve.inline.svg\"\r\nimport { color } from \"./styles/colors\"\r\n\r\nconst Wrapper = styled.div`\r\n    padding: 16px 16px 0 0;\r\n    position: relative;\r\n\r\n    > div {\r\n        background-color: ${props => (props.color ? props.color : \"\")};\r\n        border-radius: 5px 50px 50px 5px;\r\n        padding: 40px;\r\n\r\n        @media (min-width: 576px) {\r\n            padding: ${props => (props.theme===\"icon\" ? \"40px 40px 40px 112px\" : \"40px\")};\r\n        }\r\n        \r\n        h4 {\r\n            padding-bottom: ${props => (props.theme===\"icon\" ? \"16px\" : \"24px\")};\r\n        }\r\n    \r\n        p {\r\n            color: ${color.grey1};\r\n        }\r\n\r\n        ul {\r\n            list-style: none;\r\n\r\n            li {\r\n                font-family: Avenir, sans-serif;\r\n                font-size: 16px;\r\n                line-height: 24px;\r\n                color: #63666E;\r\n                padding-left: 26px;\r\n                position: relative;\r\n\r\n                &::before {\r\n                    content: '';\r\n                    height: 4px;\r\n                    width: 4px;\r\n                    background-color: ${props => (props.dotsColor ? props.dotsColor : \"\")};\r\n                    border-radius: 50%;\r\n                    position: absolute;\r\n                    top: 9px;\r\n                    left: 6px;\r\n                }\r\n\r\n                &:not(:last-child) {\r\n                    margin-bottom: 12px;\r\n                }\r\n            }\r\n        }\r\n        \r\n        ul.display-list {\r\n            list-style: none;\r\n\r\n            li {\r\n                font-family: Avenir, sans-serif;\r\n                font-size: 16px;\r\n                line-height: 24px;\r\n                color: #63666E;\r\n                padding-left: 26px;\r\n                position: relative;\r\n\r\n                &::before {\r\n                    content: '\\\\2022';\r\n                    color: ${color.blue1};\r\n                    border-radius: 50%;\r\n                    position: absolute;\r\n                    top: 0px;\r\n                    left: 6px;\r\n                }\r\n\r\n                &:not(:last-child) {\r\n                    margin-bottom: 12px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    & > svg {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n\r\n        path {\r\n            fill: ${props => props.curveColor ? props.curveColor : \"\"}\r\n        }\r\n    }\r\n\r\n    & > div {\r\n        svg {\r\n            position: absolute;\r\n            left: 44px;\r\n            display: none;\r\n        \r\n            @media (min-width: 576px){\r\n                display: block;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Colorbox = ({ className, theme, Icon, color, dotsColor, children, curve, curveColor }) => {\r\n\r\n  return (\r\n    <Wrapper className={className} theme={theme} color={color} dotsColor={dotsColor} curveColor={curveColor}>\r\n        {curve && (\r\n            <Curve />\r\n        )}\r\n        <div>\r\n            {Icon && theme === \"icon\" ? (\r\n                <Icon />\r\n            ) : null}   \r\n            {children}\r\n        </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Colorbox\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { color } from \"../../atoms/styles/colors\"\r\nimport { shadow } from \"../../atoms/styles/shadows\"\r\nimport PropsTypes from \"prop-types\";\r\nimport IconCircle from \"../../../components/icons/circle\";\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n    padding: 24px;\r\n    background-color: ${color.white};\r\n    box-shadow: ${shadow.white1};\r\n    position: relative;\r\n    border-radius: 5px;\r\n    margin-bottom: 8px;\r\n  \r\n`\r\n\r\nconst Box = styled.span`\r\n    height: 32px;\r\n    width: 32px;\r\n    margin-right: 24px;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    &::before {\r\n        content: '';\r\n        display: block;\r\n        padding-top: 100%;\r\n    }\r\n`;\r\n\r\nconst CountingTextBoxed = ({ className, children, number, circleColor, iconColor}) => (\r\n    <Wrapper className={className}>\r\n        <Box>\r\n            <IconWrapper>\r\n                <IconCircle circleColor={circleColor} iconColor={iconColor}>\r\n                    {number}\r\n                </IconCircle>\r\n            </IconWrapper>\r\n        </Box>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default CountingTextBoxed;\r\n\r\nCountingTextBoxed.defaultProps = {\r\n    circleColor: color.blue1,\r\n    iconColor: color.white\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Icon from \"../../../images/purple-curve.inline.svg\"\r\n\r\nconst Wrapper = styled.div`\r\n    height: 25px;\r\n    width: 29px;\r\n\r\n    svg {\r\n        path {\r\n            fill: ${props => props.color ? props.color : \"\"}\r\n        }\r\n    }\r\n    \r\n`;\r\n\r\nconst Curve = ({ className, color, style}) => {\r\n\r\n    return (\r\n        <Wrapper className={className} color={color} style={style}>\r\n            <Icon />\r\n        </Wrapper>\r\n    )\r\n  }\r\n  \r\n  export default Curve\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"oval-blue-5_inline_svg__a\",\n  x1: \"100%\",\n  x2: \"100%\",\n  y1: \"95.674%\",\n  y2: \"0%\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"0%\",\n  stopColor: \"#FFF\",\n  stopOpacity: 0\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"100%\",\n  stopColor: \"#F2F6FF\"\n})));\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"url(#oval-blue-5_inline_svg__a)\",\n  fillRule: \"evenodd\",\n  d: \"M420 0v420H0C0 188.04 188.04 0 420 0z\",\n  transform: \"matrix(-1 0 0 1 420 0)\"\n});\n\nfunction SvgOvalBlue5Inline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 420,\n    height: 420\n  }, props), _ref, _ref2);\n}\n\nexport default SvgOvalBlue5Inline;","import React from \"react\";\r\nimport Image from \"../../atoms/image/image\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InfoCardColorBgHeader = ({backgroundColor, imageName}) => (\r\n    <Wrapper backgroundColor={backgroundColor}>\r\n        <ImageWrapper>\r\n            <Image filename={imageName}/>\r\n        </ImageWrapper>\r\n    </Wrapper>\r\n);\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: ${props => props.backgroundColor};\r\n    height: 190px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n    width: 128px;\r\n`;\r\n\r\nexport default InfoCardColorBgHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Heading} from \"../../atoms/typography/heading\";\r\nimport {Paragraph} from \"../../atoms/typography/paragraph\";\r\n\r\nconst InfoCardContent = ({title, content}) => (\r\n    <ContentWrapper>\r\n        <Heading size={5} style={{fontSize: \"24px\"}}>{title}</Heading>\r\n        <Paragraph>{content}</Paragraph>\r\n    </ContentWrapper>\r\n);\r\n\r\nconst ContentWrapper = styled.div`\r\n    padding: 44px 40px 0px 40px;\r\n`;\r\n\r\nexport default InfoCardContent;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InfoCardColorBgHeader from \"../../molecules/image-blocks/info-card-color-bg-header\";\r\nimport PropTypes from \"prop-types\";\r\nimport {color} from \"../../atoms/styles/colors\";\r\nimport InfoCardContent from \"../../molecules/image-blocks/info-card-content\";\r\n\r\nconst InfoCardWithImage = ({roundTopLeft, roundTopRight, roundBottomLeft, roundBottomRight, backgroundColor, imageName, title, content}) => (\r\n    <CardWrapper roundTopLeft={roundTopLeft} roundTopRight={roundTopRight} roundBottomLeft={roundBottomLeft} roundBottomRight={roundBottomRight}>\r\n        <InfoCardColorBgHeader backgroundColor={backgroundColor} imageName={imageName} />\r\n        <InfoCardContent title={title} content={content} />\r\n    </CardWrapper>\r\n);\r\n\r\nconst CardWrapper = styled.div`\r\n    box-shadow: 0 24px 32px rgba(236, 236, 236, 0.5);\r\n    margin: 0 15px 30px;\r\n    overflow: hidden;\r\n    background-color: white;\r\n    min-height: 708px;\r\n    \r\n    @media (min-width: 370px) { \r\n        margin: 0 auto 30px;\r\n        width: 370px;\r\n    }\r\n    \r\n    @media (min-width: 1024px) {\r\n        ${props => props.roundTopLeft && \r\n            \"border-top-left-radius: 40px;\"\r\n        }\r\n        \r\n        ${props => props.roundTopRight &&\r\n        \"border-top-right-radius: 40px;\"\r\n        }\r\n        \r\n        ${props => props.roundBottomLeft &&\r\n            \"border-bottom-left-radius: 40px;\"\r\n        }\r\n        \r\n        ${props => props.roundBottomRight &&\r\n            \"border-bottom-right-radius: 40px;\"\r\n        }\r\n    }\r\n`;\r\n\r\nInfoCardWithImage.propTypes = {\r\n    roundTopLeft: PropTypes.bool,\r\n    roundTopRight: PropTypes.bool,\r\n    roundBottomLeft: PropTypes.bool,\r\n    roundBottomRight: PropTypes.bool,\r\n    backgroundColor: PropTypes.string.isRequired,\r\n    imageName: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    content: PropTypes.string\r\n}\r\n\r\nInfoCardWithImage.defaultProps = {\r\n    roundTopLeft: false,\r\n    roundTopRight: false,\r\n    roundBottomLeft: false,\r\n    roundBottomRight: false,\r\n    backgroundColor: color.babyblue3,\r\n    imageName: \"workers-compensation-insurance\",\r\n    title: \"Sample Title\",\r\n    content: \"Sample Content\"\r\n}\r\n\r\nexport default InfoCardWithImage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport InfoCardWithImage from \"../organisms/cards/info-card-with-image\";\r\n\r\nconst InfoCardsSection = ({cards}) => (\r\n    <SectionWrapper>\r\n        {cards.map(item => (\r\n            <InfoCardWithImage\r\n                roundTopLeft={item.roundTopLeft}\r\n                roundBottomLeft={item.roundBottomLeft}\r\n                roundBottomRight={item.roundBottomRight}\r\n                roundTopRight={item.roundTopRight}\r\n                backgroundColor={item.backgroundColor}\r\n                title={item.title}\r\n                content={item.content}\r\n                imageName={item.imageName}\r\n            />\r\n        ))}\r\n    </SectionWrapper>\r\n);\r\n\r\nconst SectionWrapper = styled.div`\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n        \r\n    @media (min-width: 1170px) {\r\n        width: 1170px;\r\n    }\r\n`;\r\n\r\nInfoCardsSection.propTypes = {\r\n    cards: PropTypes.array.isRequired\r\n}\r\n\r\nexport default InfoCardsSection;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#FFF\",\n  fillRule: \"nonzero\",\n  d: \"M9.66 17.36h.88-.88z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#F6C4C6\",\n  fillRule: \"nonzero\",\n  d: \"M22.46 17.29l-11.92.07h-.88l-8.78.06a15.004 15.004 0 011.62-6.95 15.386 15.386 0 012-3 15.065 15.065 0 019-3.83c.26-.014.52-.014.78 0h1.12a15.3 15.3 0 0114.44 13.6l-7.38.05z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#1D1D1B\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: 1.4,\n  d: \"M31.28 17.5h-8.99l-11.92.06h-.88l-8.78.05a14.992 14.992 0 011.61-6.93 15.994 15.994 0 012-3 15.232 15.232 0 0110.55-5.4 9.37 9.37 0 011.06 0h.83c8.115.41 14.493 7.094 14.52 15.22z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#1D1D1B\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: 1.4,\n  d: \"M31.28 17.5h-8.99l-11.92.07h0a15.752 15.752 0 01-.37-3.21 15.288 15.288 0 014.1-10.49c.5-.549 1.045-1.054 1.63-1.51a7.255 7.255 0 011 0c8.096.392 14.48 7.034 14.55 15.14z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  stroke: \"#1D1D1B\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: 1.4,\n  d: \"M22.29 17.55l-12.8.07h0H.7C.687 9.614 6.848 2.952 14.83 2.34h1.9a15.22 15.22 0 015.88 12 15.32 15.32 0 01-.32 3.21zm-6.62.07l.07 11.47c.005.593.247 1.16.67 1.575.425.414.997.643 1.59.635h0a2.23 2.23 0 002.22-2.19v-.73M15.9 2.29V1.02\"\n}));\n\nfunction SvgUmbrellainline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32\n  }, props), _ref);\n}\n\nexport default SvgUmbrellainline;","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ArrowSVG from \"../images/arrow.inline.svg\"\r\n\r\nconst Wrapper = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  \r\n  span {\r\n    transition: color 0.3s ease;\r\n    font-weight: 600;\r\n  }\r\n\r\n  &:hover {\r\n    color: #fd8550;\r\n\r\n    svg {\r\n      path {\r\n        fill: #fd8550;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 10px;\r\n\r\n  svg {\r\n    path {\r\n      transition: fill 0.3s ease;\r\n      fill: #5088fd;\r\n    }\r\n  }\r\n`\r\n\r\nconst ArrowLink = ({ children, className }) => (\r\n  <Wrapper href=\"#\" className={className}>\r\n    <Arrow>\r\n      <ArrowSVG />\r\n    </Arrow>\r\n    <span>{children}</span>\r\n  </Wrapper>\r\n)\r\nexport default ArrowLink\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M284.286 256.002L506.143 34.144c7.811-7.811 7.811-20.475 0-28.285-7.811-7.81-20.475-7.811-28.285 0L256 227.717 34.143 5.859c-7.811-7.811-20.475-7.811-28.285 0-7.81 7.811-7.811 20.475 0 28.285l221.857 221.857L5.858 477.859c-7.811 7.811-7.811 20.475 0 28.285a19.938 19.938 0 0014.143 5.857 19.94 19.94 0 0014.143-5.857L256 284.287l221.857 221.857c3.905 3.905 9.024 5.857 14.143 5.857s10.237-1.952 14.143-5.857c7.811-7.811 7.811-20.475 0-28.285L284.286 256.002z\"\n});\n\nfunction SvgCloseinline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512.001 512.001\"\n  }, props), _ref);\n}\n\nexport default SvgCloseinline;","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {color} from \"./styles/colors\"\r\nimport {shadow} from \"./styles/shadows\"\r\nimport {Link} from \"gatsby\"\r\nimport ArrowSVG from \"../images/arrow.inline.svg\";\r\nimport IconCircle from \"./icons/circle\";\r\nimport Image from \"../atomic/atoms/image/image\";\r\nimport CloseIcon from \"../images/icons/close.inline.svg\"\r\n\r\nconst Wrapper = styled.div`\r\n    padding-top: 24px;\r\n    width 100%;\r\n    \r\n    @media (min-width: 470px) {\r\n        max-width: ${props => (props.width ? props.width : \"470px\")};\r\n        margin: 0 auto 30px;\r\n    }\r\n`;\r\n\r\nconst Box = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    max-width: ${props => props.width};\r\n    padding: 48px 40px 40px;\r\n    position: relative;\r\n    background-color: ${color.white};\r\n    box-shadow: ${shadow.white1};\r\n    border-radius: 20px;\r\n\r\n    h4 {\r\n        width: 100%;\r\n        line-height: 27px;\r\n    }\r\n\r\n    p {\r\n        margin-top: 16px;\r\n        width: 100%;\r\n        font-size: 16px;\r\n        line-height: 24px;\r\n    }\r\n`\r\n\r\nconst Circle = styled.span`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 48px;\r\n    width: 48px;\r\n    border-radius: 50%;\r\n    background-color: ${props => props.circleBackgroundColor};\r\n    box-shadow: ${props => props.circleBackgroundShadow};\r\n    position: absolute;\r\n    top: -24px;\r\n    left: 40px;\r\n    \r\n    ${props => props.position && props.position === 'center' &&\r\n    \"left: calc(50% - 24px);\"\r\n}\r\n    \r\n    span{\r\n        font-family: Avenir-Heavy, sans-serif;\r\n        color: white;\r\n        font-size: 16px;\r\n        line-height: 24px;\r\n    }\r\n    \r\n    svg.modify {\r\n        height: 20px;\r\n        width: 20px;\r\n        fill: none;\r\n        stroke: ${props => props.colorStroke};\r\n        stroke-width: 2;\r\n        stroke-linecap: round;\r\n        stroke-linejoin: round;\r\n        stroke-dasharray: 18;\r\n        stroke-dashoffset: 0;\r\n        transform: translate3d(0, 0, 0);\r\n        z-index: 1;\r\n    }\r\n    \r\n    svg.close {\r\n        height: 30px;\r\n        width: 30px;\r\n        fill: none;\r\n        stroke: ${props => props.colorStroke};\r\n        z-index: 1;\r\n    }\r\n`;\r\n\r\nconst AdeventageLink = styled(Link)`\r\n      font-family: Avenir-Heavy, sans-serif;\r\n      margin-top: 24px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      \r\n      > span {\r\n        margin-left: -32px;\r\n      }\r\n`;\r\n\r\nconst Adventages = ({className, headline, text, colorStroke, circleBackgroundColor, circleBackgroundShadow, circlePosition, circleText, url, urlText, style, width, imageName, disadventage}) => {\r\n    return (\r\n        <Wrapper className={className} headline={headline} text={text} style={style} width={width}>\r\n            <Box width={width}>\r\n                <Circle position={circlePosition} circleBackgroundColor={circleBackgroundColor}\r\n                        circleBackgroundShadow={circleBackgroundShadow} colorStroke={colorStroke}>\r\n                    {!circleText && !disadventage &&\r\n                    <svg className=\"modify\" viewBox=\"-1 0 16 12\">\r\n                        <polyline points=\"2 6 4.5 9 10.5 3\"></polyline>\r\n                    </svg>\r\n                    }\r\n\r\n                    {!circleText && disadventage &&\r\n                    <svg className=\"close\" viewBox=\"0 0 32 32\">\r\n                        <path fill=\"#FFF\" d=\"M11.78 10.263L16 14.484l4.22-4.221c.391-.39 1.024-.39 1.415 0l.102.102c.39.39.39 1.024 0 1.414L17.516 16l4.221 4.22c.39.391.39 1.024 0 1.415l-.102.102c-.39.39-1.024.39-1.414 0L16 17.516l-4.22 4.221c-.391.39-1.024.39-1.415 0l-.102-.102c-.39-.39-.39-1.024 0-1.414L14.484 16l-4.221-4.22c-.39-.391-.39-1.024 0-1.415l.102-.102c.39-.39 1.024-.39 1.414 0z\"/>\r\n                    </svg>\r\n                    }\r\n\r\n                    {circleText &&\r\n                    <span>{circleText}</span>\r\n                    }\r\n\r\n                </Circle>\r\n\r\n                {imageName &&\r\n                <ImageWrapper>\r\n                    <Image filename={imageName}/>\r\n                </ImageWrapper>\r\n                }\r\n                {headline &&\r\n                <h4>{headline}</h4>\r\n                }\r\n\r\n                {text &&\r\n                <p>{text}</p>\r\n                }\r\n\r\n                {url &&\r\n                <AdeventageLink to={url}>\r\n                    <IconCircle circleColor=\"transparent\" iconColor={color.blue1}>\r\n                        <ArrowSVG/>\r\n                    </IconCircle>\r\n                    {urlText}\r\n                </AdeventageLink>\r\n                }\r\n            </Box>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst ImageWrapper = styled.div`\r\n    width: 150px;\r\n    margin: 0 auto 30px;\r\n`;\r\n\r\nAdventages.defaultProps = {\r\n    colorStroke: color.white,\r\n    circleBackgroundColor: color.green1,\r\n    circleBackgroundShadow: shadow.green1,\r\n    width: \"470px\",\r\n    disadventage: false\r\n}\r\n\r\nexport default Adventages\r\n"],"sourceRoot":""}