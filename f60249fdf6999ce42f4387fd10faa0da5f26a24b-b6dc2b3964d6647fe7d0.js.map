{"version":3,"sources":["webpack:///./src/atomic/atoms/image/image_nobase64.js","webpack:///./src/components/VisibilitySensor.jsx","webpack:///./src/images/curves/top-left-bottom-right.inline.svg","webpack:///./node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/bytesToUuid.js","webpack:///./node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/v4.js","webpack:///./node_modules/react-tooltip/dist/index.es.js","webpack:///./src/components/states-map/map-data.js","webpack:///./src/components/states-map/map-labels.js","webpack:///./src/components/states-map/map-labels-corporations.js","webpack:///./src/components/states-map/states-map.js","webpack:///./src/atomic/molecules/buttons/text.js","webpack:///./src/images/oval.inline.svg"],"names":["Image","props","query","render","data","image","images","edges","find","n","node","relativePath","includes","filename","imageFluid","childImageSharp","fluid","alt","VisibilitySensor","state","active","this","children","once","theRest","isVisible","Component","defaultProps","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_ref","d","fill","fillRule","width","height","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","byteToHex","toString","substr","buf","offset","bth","join","options","Array","rnds","random","ii","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","_defineProperty","obj","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","CONSTANT","HIDE","REBUILD","SHOW","dispatchGlobalEvent","eventName","opts","event","window","CustomEvent","detail","document","createEvent","initEvent","dispatchEvent","checkStatus","dataEventOff","e","show","id","isCapture","currentTarget","currentItem","getAttribute","stopPropagation","hideTooltip","setAttribute","setUntargetItems","getTargetArray","showTooltip","targetArray","customListeners","set","listener","get","map","undefined","bodyListener","callback","_options$respectEffec","respectEffect","_options$customEvent","customEvent","tip","forId","isCustomEvent","isTargetBelongsToTooltip","getEffect","proxy","makeProxy","findCustomEvents","dataAttribute","events","split","getBody","getElementsByTagName","getPosition","place","desiredPlace","effect","_getDimensions","getDimensions","tipWidth","tipHeight","_getDimensions2","targetWidth","targetHeight","_getCurrentOffset","getCurrentOffset","mouseX","mouseY","defaultOffset","getDefaultPosition","_calculateOffset","calculateOffset","extraOffsetX","extraOffsetY","windowWidth","innerWidth","windowHeight","innerHeight","_getParent","getParent","parentTop","parentLeft","getTipOffsetLeft","offsetX","l","getTipOffsetTop","offsetY","t","outsideRight","r","getTipOffsetRight","outsideBottom","b","getTipOffsetBottom","outside","outsideLeft","outsideTop","inside","placesList","insideList","newPlace","isNewState","shouldUpdatePlace","newState","position","left","parseInt","top","_node$getBoundingClie","getBoundingClientRect","boundingClientRect","targetTop","targetLeft","_getDimensions3","clientX","clientY","right","bottom","disToMouse","JSON","parse","replace","currentParent","computedStyle","getComputedStyle","getPropertyValue","parentElement","getTipContent","getContent","multiline","regexp","test","createElement","className","parseAria","ariaObj","prop","nodeListToArray","nodeList","slice","index","css","style","innerHTML","head","appendChild","___$insertStyle","_class","_class2","_temp","defaultColors","dark","text","background","border","arrow","success","warning","error","info","light","generateTooltipStyle","uuid","customColors","type","hasBorder","colors","textColor","backgroundColor","borderColor","arrowColor","concat","generateStyle","getDefaultPopupColors","getPopupColors","hide","rebuild","globalRebuild","mount","unbindListener","bindListener","globalShow","hasTarget","globalHide","staticMethods","bindWindowEvents","resizeHide","removeEventListener","addEventListener","onWindowResize","unbindWindowEvents","windowListener","ele","customBindListener","_this","_this$state","eventOff","dataEvent","customListener","customUnbindListener","_this$state2","isBodyMode","bodyMode","bindBodyListener","possibleCustomEvents","possibleCustomEventsOff","body","customEvents","customEventsOff","unbindBodyListener","listeners","bodyModeListeners","_event","mouseover","mousemove","updateTooltip","mouseout","targetEventOff","_event2","_event3","_React$Component","ReactTooltip","instance","TypeError","_classCallCheck","extraClass","html","delayHide","delayShow","currentEvent","ariaProps","isEmptyTip","disable","originTooltip","isMultiline","delayShowLoop","delayHideLoop","delayReshow","intervalUpdateContent","subClass","superClass","create","constructor","_inherits","string","any","bool","insecure","number","delayUpdate","globalEventOff","afterShow","func","afterHide","overridePosition","scrollHide","wrapper","clickable","methodArray","_this2","method","_this$props","clearTimer","removeScrollListener","tooltipRef","matches","msMatchesSelector","mozMatchesSelector","selector","escaped","element","shadowRoot","querySelectorAll","_this3","_this$props2","unbindBasicListener","isCaptureMode","bindRemovalTracker","_this4","_this$props3","unbindRemovalTracker","content","_this$props4","isArray","placeholder","isGlobalCall","some","_this$props5","switchToSolid","FocusEvent","result","reshowDelay","updateState","setState","addScrollListener","setInterval","_getContent","updatePosition","setTimeout","_this5","getTooltipContent","delayTime","eventTarget","mouseOnToolTip","isInvisible","clearTimeout","_this6","isScroll","isMyElement","resetState","listenForTooltipExit","removeListenerForTooltipExit","hideTooltipOnScroll","_this7","clearInterval","_this8","Boolean","color","_this9","_this$state3","tooltipClass","hasCustomColors","Wrapper","supportedWrappers","indexOf","wrapperClassName","htmlContent","ref","dangerouslySetInnerHTML","__html","_ref2","nextProps","prevState","newAriaProps","MutationObserver","WebKitMutationObserver","MozMutationObserver","observer","mutations","m1","mutation","m2","removedNodes","observe","childList","subtree","removalTracker","disconnect","MapData","tag","points","MapLabels","MapLabelsCorporations","styled","div","StyledReactTooltip","TooltipContent","StyledArrowIcon","ArrowIcon","StatesMap","corporations","blue1","viewBox","version","xmlns","stroke","stroke-width","fill-rule","stroke-linecap","attrs","onClick","navigate","toLowerCase","React","dataTip","Link","maxWidth","bottomPadding","topMargin","bottomMargin","Arrow","ArrowLink","to","url","cx","cy","fx","fy","gradientTransform","stopColor","transform"],"mappings":"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","file":"f60249fdf6999ce42f4387fd10faa0da5f26a24b-b6dc2b3964d6647fe7d0.js","sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n//...GatsbyImageSharpFluid_withWebp_noBase64\r\n\r\nconst Image = props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        images: allFile {\r\n          edges {\r\n            node {\r\n              relativePath\r\n              name\r\n              childImageSharp {\r\n                fluid(maxWidth: 2340) {\r\n                  ...GatsbyImageSharpFluid_noBase64\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const image = data.images.edges.find(n => {\r\n        return n.node.relativePath.includes(props.filename)\r\n      })\r\n\r\n      if (!image) {\r\n        return null\r\n      }\r\n\r\n      const imageFluid = image.node.childImageSharp.fluid\r\n\r\n      return <Img alt={props.alt} fluid={imageFluid} />\r\n    }}\r\n  />\r\n)\r\nexport default Image\r\n","// VisibilitySensor.jsx\r\n\r\nimport React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport VSensor from \"react-visibility-sensor\"\r\n\r\nclass VisibilitySensor extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      active: true,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { active } = this.state\r\n    const { once, children, ...theRest } = this.props\r\n    return (\r\n      <VSensor\r\n        active={active}\r\n        {...theRest}\r\n      >\r\n        {({ isVisible }) => children({ isVisible })}\r\n      </VSensor>\r\n    )\r\n  }\r\n}\r\n\r\nVisibilitySensor.propTypes = {\r\n  once: PropTypes.bool,\r\n  children: PropTypes.func.isRequired,\r\n}\r\n\r\nVisibilitySensor.defaultProps = {\r\n  once: false,\r\n}\r\n\r\nexport default VisibilitySensor\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 1.389c0 .746.599 1.349 1.354 1.384a26.869 26.869 0 0112.317 3.66c6.754 3.954 11.098 10.402 12.544 17.451A1.4 1.4 0 0027.592 25c.89 0 1.556-.806 1.38-1.666-1.599-7.79-6.398-14.916-13.863-19.286A29.704 29.704 0 001.46.002 1.393 1.393 0 000 1.387v.002z\",\n  fill: \"#C9A3EE\",\n  fillRule: \"evenodd\"\n});\n\nfunction SvgTopLeftBottomRightinline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 29,\n    height: 25\n  }, props), _ref);\n}\n\nexport default SvgTopLeftBottomRightinline;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","function ___$insertStyle(css) {\n  if (!css) {\n    return;\n  }\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 } from 'uuid';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nvar CONSTANT = {\n  GLOBAL: {\n    HIDE: '__react_tooltip_hide_event',\n    REBUILD: '__react_tooltip_rebuild_event',\n    SHOW: '__react_tooltip_show_event'\n  }\n};\n/**\n * Static methods for react-tooltip\n */\n\nvar dispatchGlobalEvent = function dispatchGlobalEvent(eventName, opts) {\n  // Compatible with IE\n  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n  var event;\n\n  if (typeof window.CustomEvent === 'function') {\n    event = new window.CustomEvent(eventName, {\n      detail: opts\n    });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent(eventName, false, true, opts);\n  }\n\n  window.dispatchEvent(event);\n};\n\nfunction staticMethods(target) {\n  /**\n   * Hide all tooltip\n   * @trigger ReactTooltip.hide()\n   */\n  target.hide = function (target) {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, {\n      target: target\n    });\n  };\n  /**\n   * Rebuild all tooltip\n   * @trigger ReactTooltip.rebuild()\n   */\n\n\n  target.rebuild = function () {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);\n  };\n  /**\n   * Show specific tooltip\n   * @trigger ReactTooltip.show()\n   */\n\n\n  target.show = function (target) {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, {\n      target: target\n    });\n  };\n\n  target.prototype.globalRebuild = function () {\n    if (this.mount) {\n      this.unbindListener();\n      this.bindListener();\n    }\n  };\n\n  target.prototype.globalShow = function (event) {\n    if (this.mount) {\n      var hasTarget = event && event.detail && event.detail.target && true || false; // Create a fake event, specific show will limit the type to `solid`\n      // only `float` type cares e.clientX e.clientY\n\n      this.showTooltip({\n        currentTarget: hasTarget && event.detail.target\n      }, true);\n    }\n  };\n\n  target.prototype.globalHide = function (event) {\n    if (this.mount) {\n      var hasTarget = event && event.detail && event.detail.target && true || false;\n      this.hideTooltip({\n        currentTarget: hasTarget && event.detail.target\n      }, hasTarget);\n    }\n  };\n}\n/**\n * Events that should be bound to the window\n */\n\n\nfunction windowListener(target) {\n  target.prototype.bindWindowEvents = function (resizeHide) {\n    // ReactTooltip.hide\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false); // ReactTooltip.rebuild\n\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false); // ReactTooltip.show\n\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false); // Resize\n\n    if (resizeHide) {\n      window.removeEventListener('resize', this.onWindowResize);\n      window.addEventListener('resize', this.onWindowResize, false);\n    }\n  };\n\n  target.prototype.unbindWindowEvents = function () {\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.removeEventListener('resize', this.onWindowResize);\n  };\n  /**\n   * invoked by resize event of window\n   */\n\n\n  target.prototype.onWindowResize = function () {\n    if (!this.mount) return;\n    this.hideTooltip();\n  };\n}\n/**\n * Custom events to control showing and hiding of tooltip\n *\n * @attributes\n * - `event` {String}\n * - `eventOff` {String}\n */\n\n\nvar checkStatus = function checkStatus(dataEventOff, e) {\n  var show = this.state.show;\n  var id = this.props.id;\n  var isCapture = this.isCapture(e.currentTarget);\n  var currentItem = e.currentTarget.getAttribute('currentItem');\n  if (!isCapture) e.stopPropagation();\n\n  if (show && currentItem === 'true') {\n    if (!dataEventOff) this.hideTooltip(e);\n  } else {\n    e.currentTarget.setAttribute('currentItem', 'true');\n    setUntargetItems(e.currentTarget, this.getTargetArray(id));\n    this.showTooltip(e);\n  }\n};\n\nvar setUntargetItems = function setUntargetItems(currentTarget, targetArray) {\n  for (var i = 0; i < targetArray.length; i++) {\n    if (currentTarget !== targetArray[i]) {\n      targetArray[i].setAttribute('currentItem', 'false');\n    } else {\n      targetArray[i].setAttribute('currentItem', 'true');\n    }\n  }\n};\n\nvar customListeners = {\n  id: '9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf',\n  set: function set(target, event, listener) {\n    if (this.id in target) {\n      var map = target[this.id];\n      map[event] = listener;\n    } else {\n      // this is workaround for WeakMap, which is not supported in older browsers, such as IE\n      Object.defineProperty(target, this.id, {\n        configurable: true,\n        value: _defineProperty({}, event, listener)\n      });\n    }\n  },\n  get: function get(target, event) {\n    var map = target[this.id];\n\n    if (map !== undefined) {\n      return map[event];\n    }\n  }\n};\n\nfunction customEvent(target) {\n  target.prototype.isCustomEvent = function (ele) {\n    var event = this.state.event;\n    return event || !!ele.getAttribute('data-event');\n  };\n  /* Bind listener for custom event */\n\n\n  target.prototype.customBindListener = function (ele) {\n    var _this = this;\n\n    var _this$state = this.state,\n        event = _this$state.event,\n        eventOff = _this$state.eventOff;\n    var dataEvent = ele.getAttribute('data-event') || event;\n    var dataEventOff = ele.getAttribute('data-event-off') || eventOff;\n    dataEvent.split(' ').forEach(function (event) {\n      ele.removeEventListener(event, customListeners.get(ele, event));\n      var customListener = checkStatus.bind(_this, dataEventOff);\n      customListeners.set(ele, event, customListener);\n      ele.addEventListener(event, customListener, false);\n    });\n\n    if (dataEventOff) {\n      dataEventOff.split(' ').forEach(function (event) {\n        ele.removeEventListener(event, _this.hideTooltip);\n        ele.addEventListener(event, _this.hideTooltip, false);\n      });\n    }\n  };\n  /* Unbind listener for custom event */\n\n\n  target.prototype.customUnbindListener = function (ele) {\n    var _this$state2 = this.state,\n        event = _this$state2.event,\n        eventOff = _this$state2.eventOff;\n    var dataEvent = event || ele.getAttribute('data-event');\n    var dataEventOff = eventOff || ele.getAttribute('data-event-off');\n    ele.removeEventListener(dataEvent, customListeners.get(ele, event));\n    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);\n  };\n}\n/**\n * Util method to judge if it should follow capture model\n */\n\n\nfunction isCapture(target) {\n  target.prototype.isCapture = function (currentTarget) {\n    return currentTarget && currentTarget.getAttribute('data-iscapture') === 'true' || this.props.isCapture || false;\n  };\n}\n/**\n * Util method to get effect\n */\n\n\nfunction getEffect(target) {\n  target.prototype.getEffect = function (currentTarget) {\n    var dataEffect = currentTarget.getAttribute('data-effect');\n    return dataEffect || this.props.effect || 'float';\n  };\n}\n/**\n * Util method to get effect\n */\n\n\nvar makeProxy = function makeProxy(e) {\n  var proxy = {};\n\n  for (var key in e) {\n    if (typeof e[key] === 'function') {\n      proxy[key] = e[key].bind(e);\n    } else {\n      proxy[key] = e[key];\n    }\n  }\n\n  return proxy;\n};\n\nvar bodyListener = function bodyListener(callback, options, e) {\n  var _options$respectEffec = options.respectEffect,\n      respectEffect = _options$respectEffec === void 0 ? false : _options$respectEffec,\n      _options$customEvent = options.customEvent,\n      customEvent = _options$customEvent === void 0 ? false : _options$customEvent;\n  var id = this.props.id;\n  var tip = e.target.getAttribute('data-tip') || null;\n  var forId = e.target.getAttribute('data-for') || null;\n  var target = e.target;\n\n  if (this.isCustomEvent(target) && !customEvent) {\n    return;\n  }\n\n  var isTargetBelongsToTooltip = id == null && forId == null || forId === id;\n\n  if (tip != null && (!respectEffect || this.getEffect(target) === 'float') && isTargetBelongsToTooltip) {\n    var proxy = makeProxy(e);\n    proxy.currentTarget = target;\n    callback(proxy);\n  }\n};\n\nvar findCustomEvents = function findCustomEvents(targetArray, dataAttribute) {\n  var events = {};\n  targetArray.forEach(function (target) {\n    var event = target.getAttribute(dataAttribute);\n    if (event) event.split(' ').forEach(function (event) {\n      return events[event] = true;\n    });\n  });\n  return events;\n};\n\nvar getBody = function getBody() {\n  return document.getElementsByTagName('body')[0];\n};\n\nfunction bodyMode(target) {\n  target.prototype.isBodyMode = function () {\n    return !!this.props.bodyMode;\n  };\n\n  target.prototype.bindBodyListener = function (targetArray) {\n    var _this = this;\n\n    var _this$state = this.state,\n        event = _this$state.event,\n        eventOff = _this$state.eventOff,\n        possibleCustomEvents = _this$state.possibleCustomEvents,\n        possibleCustomEventsOff = _this$state.possibleCustomEventsOff;\n    var body = getBody();\n    var customEvents = findCustomEvents(targetArray, 'data-event');\n    var customEventsOff = findCustomEvents(targetArray, 'data-event-off');\n    if (event != null) customEvents[event] = true;\n    if (eventOff != null) customEventsOff[eventOff] = true;\n    possibleCustomEvents.split(' ').forEach(function (event) {\n      return customEvents[event] = true;\n    });\n    possibleCustomEventsOff.split(' ').forEach(function (event) {\n      return customEventsOff[event] = true;\n    });\n    this.unbindBodyListener(body);\n    var listeners = this.bodyModeListeners = {};\n\n    if (event == null) {\n      listeners.mouseover = bodyListener.bind(this, this.showTooltip, {});\n      listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {\n        respectEffect: true\n      });\n      listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {});\n    }\n\n    for (var _event in customEvents) {\n      listeners[_event] = bodyListener.bind(this, function (e) {\n        var targetEventOff = e.currentTarget.getAttribute('data-event-off') || eventOff;\n        checkStatus.call(_this, targetEventOff, e);\n      }, {\n        customEvent: true\n      });\n    }\n\n    for (var _event2 in customEventsOff) {\n      listeners[_event2] = bodyListener.bind(this, this.hideTooltip, {\n        customEvent: true\n      });\n    }\n\n    for (var _event3 in listeners) {\n      body.addEventListener(_event3, listeners[_event3]);\n    }\n  };\n\n  target.prototype.unbindBodyListener = function (body) {\n    body = body || getBody();\n    var listeners = this.bodyModeListeners;\n\n    for (var event in listeners) {\n      body.removeEventListener(event, listeners[event]);\n    }\n  };\n}\n/**\n * Tracking target removing from DOM.\n * It's necessary to hide tooltip when it's target disappears.\n * Otherwise, the tooltip would be shown forever until another target\n * is triggered.\n *\n * If MutationObserver is not available, this feature just doesn't work.\n */\n// https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\n\n\nvar getMutationObserverClass = function getMutationObserverClass() {\n  return window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n};\n\nfunction trackRemoval(target) {\n  target.prototype.bindRemovalTracker = function () {\n    var _this = this;\n\n    var MutationObserver = getMutationObserverClass();\n    if (MutationObserver == null) return;\n    var observer = new MutationObserver(function (mutations) {\n      for (var m1 = 0; m1 < mutations.length; m1++) {\n        var mutation = mutations[m1];\n\n        for (var m2 = 0; m2 < mutation.removedNodes.length; m2++) {\n          var element = mutation.removedNodes[m2];\n\n          if (element === _this.state.currentTarget) {\n            _this.hideTooltip();\n\n            return;\n          }\n        }\n      }\n    });\n    observer.observe(window.document, {\n      childList: true,\n      subtree: true\n    });\n    this.removalTracker = observer;\n  };\n\n  target.prototype.unbindRemovalTracker = function () {\n    if (this.removalTracker) {\n      this.removalTracker.disconnect();\n      this.removalTracker = null;\n    }\n  };\n}\n/**\n * Calculate the position of tooltip\n *\n * @params\n * - `e` {Event} the event of current mouse\n * - `target` {Element} the currentTarget of the event\n * - `node` {DOM} the react-tooltip object\n * - `place` {String} top / right / bottom / left\n * - `effect` {String} float / solid\n * - `offset` {Object} the offset to default position\n *\n * @return {Object}\n * - `isNewState` {Bool} required\n * - `newState` {Object}\n * - `position` {Object} {left: {Number}, top: {Number}}\n */\n\n\nfunction getPosition(e, target, node, place, desiredPlace, effect, offset) {\n  var _getDimensions = getDimensions(node),\n      tipWidth = _getDimensions.width,\n      tipHeight = _getDimensions.height;\n\n  var _getDimensions2 = getDimensions(target),\n      targetWidth = _getDimensions2.width,\n      targetHeight = _getDimensions2.height;\n\n  var _getCurrentOffset = getCurrentOffset(e, target, effect),\n      mouseX = _getCurrentOffset.mouseX,\n      mouseY = _getCurrentOffset.mouseY;\n\n  var defaultOffset = getDefaultPosition(effect, targetWidth, targetHeight, tipWidth, tipHeight);\n\n  var _calculateOffset = calculateOffset(offset),\n      extraOffsetX = _calculateOffset.extraOffsetX,\n      extraOffsetY = _calculateOffset.extraOffsetY;\n\n  var windowWidth = window.innerWidth;\n  var windowHeight = window.innerHeight;\n\n  var _getParent = getParent(node),\n      parentTop = _getParent.parentTop,\n      parentLeft = _getParent.parentLeft; // Get the edge offset of the tooltip\n\n\n  var getTipOffsetLeft = function getTipOffsetLeft(place) {\n    var offsetX = defaultOffset[place].l;\n    return mouseX + offsetX + extraOffsetX;\n  };\n\n  var getTipOffsetRight = function getTipOffsetRight(place) {\n    var offsetX = defaultOffset[place].r;\n    return mouseX + offsetX + extraOffsetX;\n  };\n\n  var getTipOffsetTop = function getTipOffsetTop(place) {\n    var offsetY = defaultOffset[place].t;\n    return mouseY + offsetY + extraOffsetY;\n  };\n\n  var getTipOffsetBottom = function getTipOffsetBottom(place) {\n    var offsetY = defaultOffset[place].b;\n    return mouseY + offsetY + extraOffsetY;\n  }; //\n  // Functions to test whether the tooltip's sides are inside\n  // the client window for a given orientation p\n  //\n  //  _____________\n  // |             | <-- Right side\n  // | p = 'left'  |\\\n  // |             |/  |\\\n  // |_____________|   |_\\  <-- Mouse\n  //      / \\           |\n  //       |\n  //       |\n  //  Bottom side\n  //\n\n\n  var outsideLeft = function outsideLeft(p) {\n    return getTipOffsetLeft(p) < 0;\n  };\n\n  var outsideRight = function outsideRight(p) {\n    return getTipOffsetRight(p) > windowWidth;\n  };\n\n  var outsideTop = function outsideTop(p) {\n    return getTipOffsetTop(p) < 0;\n  };\n\n  var outsideBottom = function outsideBottom(p) {\n    return getTipOffsetBottom(p) > windowHeight;\n  }; // Check whether the tooltip with orientation p is completely inside the client window\n\n\n  var outside = function outside(p) {\n    return outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);\n  };\n\n  var inside = function inside(p) {\n    return !outside(p);\n  };\n\n  var placesList = ['top', 'bottom', 'left', 'right'];\n  var insideList = [];\n\n  for (var i = 0; i < 4; i++) {\n    var p = placesList[i];\n\n    if (inside(p)) {\n      insideList.push(p);\n    }\n  }\n\n  var isNewState = false;\n  var newPlace;\n  var shouldUpdatePlace = desiredPlace !== place;\n\n  if (inside(desiredPlace) && shouldUpdatePlace) {\n    isNewState = true;\n    newPlace = desiredPlace;\n  } else if (insideList.length > 0 && outside(desiredPlace) && outside(place)) {\n    isNewState = true;\n    newPlace = insideList[0];\n  }\n\n  if (isNewState) {\n    return {\n      isNewState: true,\n      newState: {\n        place: newPlace\n      }\n    };\n  }\n\n  return {\n    isNewState: false,\n    position: {\n      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),\n      top: parseInt(getTipOffsetTop(place) - parentTop, 10)\n    }\n  };\n}\n\nvar getDimensions = function getDimensions(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      height = _node$getBoundingClie.height,\n      width = _node$getBoundingClie.width;\n\n  return {\n    height: parseInt(height, 10),\n    width: parseInt(width, 10)\n  };\n}; // Get current mouse offset\n\n\nvar getCurrentOffset = function getCurrentOffset(e, currentTarget, effect) {\n  var boundingClientRect = currentTarget.getBoundingClientRect();\n  var targetTop = boundingClientRect.top;\n  var targetLeft = boundingClientRect.left;\n\n  var _getDimensions3 = getDimensions(currentTarget),\n      targetWidth = _getDimensions3.width,\n      targetHeight = _getDimensions3.height;\n\n  if (effect === 'float') {\n    return {\n      mouseX: e.clientX,\n      mouseY: e.clientY\n    };\n  }\n\n  return {\n    mouseX: targetLeft + targetWidth / 2,\n    mouseY: targetTop + targetHeight / 2\n  };\n}; // List all possibility of tooltip final offset\n// This is useful in judging if it is necessary for tooltip to switch position when out of window\n\n\nvar getDefaultPosition = function getDefaultPosition(effect, targetWidth, targetHeight, tipWidth, tipHeight) {\n  var top;\n  var right;\n  var bottom;\n  var left;\n  var disToMouse = 3;\n  var triangleHeight = 2;\n  var cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip\n\n  if (effect === 'float') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(tipHeight + disToMouse + triangleHeight),\n      b: -disToMouse\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: disToMouse + cursorHeight,\n      b: tipHeight + disToMouse + triangleHeight + cursorHeight\n    };\n    left = {\n      l: -(tipWidth + disToMouse + triangleHeight),\n      r: -disToMouse,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: disToMouse,\n      r: tipWidth + disToMouse + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  } else if (effect === 'solid') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(targetHeight / 2 + tipHeight + triangleHeight),\n      b: -(targetHeight / 2)\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: targetHeight / 2,\n      b: targetHeight / 2 + tipHeight + triangleHeight\n    };\n    left = {\n      l: -(tipWidth + targetWidth / 2 + triangleHeight),\n      r: -(targetWidth / 2),\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: targetWidth / 2,\n      r: tipWidth + targetWidth / 2 + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  }\n\n  return {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right\n  };\n}; // Consider additional offset into position calculation\n\n\nvar calculateOffset = function calculateOffset(offset) {\n  var extraOffsetX = 0;\n  var extraOffsetY = 0;\n\n  if (Object.prototype.toString.apply(offset) === '[object String]') {\n    offset = JSON.parse(offset.toString().replace(/'/g, '\"'));\n  }\n\n  for (var key in offset) {\n    if (key === 'top') {\n      extraOffsetY -= parseInt(offset[key], 10);\n    } else if (key === 'bottom') {\n      extraOffsetY += parseInt(offset[key], 10);\n    } else if (key === 'left') {\n      extraOffsetX -= parseInt(offset[key], 10);\n    } else if (key === 'right') {\n      extraOffsetX += parseInt(offset[key], 10);\n    }\n  }\n\n  return {\n    extraOffsetX: extraOffsetX,\n    extraOffsetY: extraOffsetY\n  };\n}; // Get the offset of the parent elements\n\n\nvar getParent = function getParent(currentTarget) {\n  var currentParent = currentTarget;\n\n  while (currentParent) {\n    var computedStyle = window.getComputedStyle(currentParent); // transform and will-change: transform change the containing block\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_Block\n\n    if (computedStyle.getPropertyValue('transform') !== 'none' || computedStyle.getPropertyValue('will-change') === 'transform') break;\n    currentParent = currentParent.parentElement;\n  }\n\n  var parentTop = currentParent && currentParent.getBoundingClientRect().top || 0;\n  var parentLeft = currentParent && currentParent.getBoundingClientRect().left || 0;\n  return {\n    parentTop: parentTop,\n    parentLeft: parentLeft\n  };\n};\n/**\n * To get the tooltip content\n * it may comes from data-tip or this.props.children\n * it should support multiline\n *\n * @params\n * - `tip` {String} value of data-tip\n * - `children` {ReactElement} this.props.children\n * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')\n *\n * @return\n * - String or react component\n */\n\n\nfunction getTipContent(tip, children, getContent, multiline) {\n  if (children) return children;\n  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.\n\n  if (getContent === null) return null; // Tip not exist and children is null or undefined\n\n  var regexp = /<br\\s*\\/?>/;\n\n  if (!multiline || multiline === 'false' || !regexp.test(tip)) {\n    // No trim(), so that user can keep their input\n    return tip;\n  } // Multiline tooltip content\n\n\n  return tip.split(regexp).map(function (d, i) {\n    return React.createElement(\"span\", {\n      key: i,\n      className: \"multi-line\"\n    }, d);\n  });\n}\n/**\n * Support aria- and role in ReactTooltip\n *\n * @params props {Object}\n * @return {Object}\n */\n\n\nfunction parseAria(props) {\n  var ariaObj = {};\n  Object.keys(props).filter(function (prop) {\n    // aria-xxx and role is acceptable\n    return /(^aria-\\w+$|^role$)/.test(prop);\n  }).forEach(function (prop) {\n    ariaObj[prop] = props[prop];\n  });\n  return ariaObj;\n}\n/**\n * Convert nodelist to array\n * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24\n * NodeLists are functions in Safari\n */\n\n\nfunction nodeListToArray(nodeList) {\n  var length = nodeList.length;\n\n  if (nodeList.hasOwnProperty) {\n    return Array.prototype.slice.call(nodeList);\n  }\n\n  return new Array(length).fill().map(function (index) {\n    return nodeList[index];\n  });\n}\n\nfunction generateUUID() {\n  return 't' + v4();\n}\n\n___$insertStyle(\".__react_component_tooltip {\\n  border-radius: 3px;\\n  display: inline-block;\\n  font-size: 13px;\\n  left: -999em;\\n  opacity: 0;\\n  padding: 8px 21px;\\n  position: fixed;\\n  pointer-events: none;\\n  transition: opacity 0.3s ease-out;\\n  top: -999em;\\n  visibility: hidden;\\n  z-index: 999;\\n}\\n.__react_component_tooltip.allow_hover, .__react_component_tooltip.allow_click {\\n  pointer-events: auto;\\n}\\n.__react_component_tooltip::before, .__react_component_tooltip::after {\\n  content: \\\"\\\";\\n  width: 0;\\n  height: 0;\\n  position: absolute;\\n}\\n.__react_component_tooltip.show {\\n  opacity: 0.9;\\n  margin-top: 0;\\n  margin-left: 0;\\n  visibility: visible;\\n}\\n.__react_component_tooltip.place-top::before {\\n  border-left: 10px solid transparent;\\n  border-right: 10px solid transparent;\\n  bottom: -8px;\\n  left: 50%;\\n  margin-left: -10px;\\n}\\n.__react_component_tooltip.place-bottom::before {\\n  border-left: 10px solid transparent;\\n  border-right: 10px solid transparent;\\n  top: -8px;\\n  left: 50%;\\n  margin-left: -10px;\\n}\\n.__react_component_tooltip.place-left::before {\\n  border-top: 6px solid transparent;\\n  border-bottom: 6px solid transparent;\\n  right: -8px;\\n  top: 50%;\\n  margin-top: -5px;\\n}\\n.__react_component_tooltip.place-right::before {\\n  border-top: 6px solid transparent;\\n  border-bottom: 6px solid transparent;\\n  left: -8px;\\n  top: 50%;\\n  margin-top: -5px;\\n}\\n.__react_component_tooltip .multi-line {\\n  display: block;\\n  padding: 2px 0;\\n  text-align: center;\\n}\");\n/**\n * Default pop-up style values (text color, background color).\n */\n\n\nvar defaultColors = {\n  dark: {\n    text: '#fff',\n    background: '#222',\n    border: 'transparent',\n    arrow: '#222'\n  },\n  success: {\n    text: '#fff',\n    background: '#8DC572',\n    border: 'transparent',\n    arrow: '#8DC572'\n  },\n  warning: {\n    text: '#fff',\n    background: '#F0AD4E',\n    border: 'transparent',\n    arrow: '#F0AD4E'\n  },\n  error: {\n    text: '#fff',\n    background: '#BE6464',\n    border: 'transparent',\n    arrow: '#BE6464'\n  },\n  info: {\n    text: '#fff',\n    background: '#337AB7',\n    border: 'transparent',\n    arrow: '#337AB7'\n  },\n  light: {\n    text: '#222',\n    background: '#fff',\n    border: 'transparent',\n    arrow: '#fff'\n  }\n};\n\nfunction getDefaultPopupColors(type) {\n  return defaultColors[type] ? _objectSpread2({}, defaultColors[type]) : undefined;\n}\n/**\n * Generates the specific tooltip style for use on render.\n */\n\n\nfunction generateTooltipStyle(uuid, customColors, type, hasBorder) {\n  return generateStyle(uuid, getPopupColors(customColors, type, hasBorder));\n}\n/**\n * Generates the tooltip style rules based on the element-specified \"data-type\" property.\n */\n\n\nfunction generateStyle(uuid, colors) {\n  var textColor = colors.text;\n  var backgroundColor = colors.background;\n  var borderColor = colors.border;\n  var arrowColor = colors.arrow;\n  return \"\\n  \\t.\".concat(uuid, \" {\\n\\t    color: \").concat(textColor, \";\\n\\t    background: \").concat(backgroundColor, \";\\n\\t    border: 1px solid \").concat(borderColor, \";\\n  \\t}\\n\\n  \\t.\").concat(uuid, \".place-top {\\n        margin-top: -10px;\\n    }\\n    .\").concat(uuid, \".place-top::before {\\n        border-top: 8px solid \").concat(borderColor, \";\\n    }\\n    .\").concat(uuid, \".place-top::after {\\n        border-left: 8px solid transparent;\\n        border-right: 8px solid transparent;\\n        bottom: -6px;\\n        left: 50%;\\n        margin-left: -8px;\\n        border-top-color: \").concat(arrowColor, \";\\n        border-top-style: solid;\\n        border-top-width: 6px;\\n    }\\n\\n    .\").concat(uuid, \".place-bottom {\\n        margin-top: 10px;\\n    }\\n    .\").concat(uuid, \".place-bottom::before {\\n        border-bottom: 8px solid \").concat(borderColor, \";\\n    }\\n    .\").concat(uuid, \".place-bottom::after {\\n        border-left: 8px solid transparent;\\n        border-right: 8px solid transparent;\\n        top: -6px;\\n        left: 50%;\\n        margin-left: -8px;\\n        border-bottom-color: \").concat(arrowColor, \";\\n        border-bottom-style: solid;\\n        border-bottom-width: 6px;\\n    }\\n\\n    .\").concat(uuid, \".place-left {\\n        margin-left: -10px;\\n    }\\n    .\").concat(uuid, \".place-left::before {\\n        border-left: 8px solid \").concat(borderColor, \";\\n    }\\n    .\").concat(uuid, \".place-left::after {\\n        border-top: 5px solid transparent;\\n        border-bottom: 5px solid transparent;\\n        right: -6px;\\n        top: 50%;\\n        margin-top: -4px;\\n        border-left-color: \").concat(arrowColor, \";\\n        border-left-style: solid;\\n        border-left-width: 6px;\\n    }\\n\\n    .\").concat(uuid, \".place-right {\\n        margin-left: 10px;\\n    }\\n    .\").concat(uuid, \".place-right::before {\\n        border-right: 8px solid \").concat(borderColor, \";\\n    }\\n    .\").concat(uuid, \".place-right::after {\\n        border-top: 5px solid transparent;\\n        border-bottom: 5px solid transparent;\\n        left: -6px;\\n        top: 50%;\\n        margin-top: -4px;\\n        border-right-color: \").concat(arrowColor, \";\\n        border-right-style: solid;\\n        border-right-width: 6px;\\n    }\\n  \");\n}\n\nfunction getPopupColors(customColors, type, hasBorder) {\n  var textColor = customColors.text;\n  var backgroundColor = customColors.background;\n  var borderColor = customColors.border;\n  var arrowColor = customColors.arrow ? customColors.arrow : customColors.background;\n  var colors = getDefaultPopupColors(type);\n\n  if (textColor) {\n    colors.text = textColor;\n  }\n\n  if (backgroundColor) {\n    colors.background = backgroundColor;\n  }\n\n  if (hasBorder) {\n    if (borderColor) {\n      colors.border = borderColor;\n    } else {\n      colors.border = type === 'light' ? 'black' : 'white';\n    }\n  }\n\n  if (arrowColor) {\n    colors.arrow = arrowColor;\n  }\n\n  return colors;\n}\n\nvar _class, _class2, _temp;\n\nvar ReactTooltip = staticMethods(_class = windowListener(_class = customEvent(_class = isCapture(_class = getEffect(_class = bodyMode(_class = trackRemoval(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactTooltip, _React$Component);\n\n  _createClass(ReactTooltip, null, [{\n    key: \"propTypes\",\n    get: function get() {\n      return {\n        uuid: PropTypes.string,\n        children: PropTypes.any,\n        place: PropTypes.string,\n        type: PropTypes.string,\n        effect: PropTypes.string,\n        offset: PropTypes.object,\n        multiline: PropTypes.bool,\n        border: PropTypes.bool,\n        textColor: PropTypes.string,\n        backgroundColor: PropTypes.string,\n        borderColor: PropTypes.string,\n        arrowColor: PropTypes.string,\n        insecure: PropTypes.bool,\n        \"class\": PropTypes.string,\n        className: PropTypes.string,\n        id: PropTypes.string,\n        html: PropTypes.bool,\n        delayHide: PropTypes.number,\n        delayUpdate: PropTypes.number,\n        delayShow: PropTypes.number,\n        event: PropTypes.string,\n        eventOff: PropTypes.string,\n        isCapture: PropTypes.bool,\n        globalEventOff: PropTypes.string,\n        getContent: PropTypes.any,\n        afterShow: PropTypes.func,\n        afterHide: PropTypes.func,\n        overridePosition: PropTypes.func,\n        disable: PropTypes.bool,\n        scrollHide: PropTypes.bool,\n        resizeHide: PropTypes.bool,\n        wrapper: PropTypes.string,\n        bodyMode: PropTypes.bool,\n        possibleCustomEvents: PropTypes.string,\n        possibleCustomEventsOff: PropTypes.string,\n        clickable: PropTypes.bool\n      };\n    }\n  }]);\n\n  function ReactTooltip(props) {\n    var _this;\n\n    _classCallCheck(this, ReactTooltip);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactTooltip).call(this, props));\n    _this.state = {\n      uuid: props.uuid || generateUUID(),\n      place: props.place || 'top',\n      // Direction of tooltip\n      desiredPlace: props.place || 'top',\n      type: 'dark',\n      // Color theme of tooltip\n      effect: 'float',\n      // float or fixed\n      show: false,\n      border: false,\n      customColors: {},\n      offset: {},\n      extraClass: '',\n      html: false,\n      delayHide: 0,\n      delayShow: 0,\n      event: props.event || null,\n      eventOff: props.eventOff || null,\n      currentEvent: null,\n      // Current mouse event\n      currentTarget: null,\n      // Current target of mouse event\n      ariaProps: parseAria(props),\n      // aria- and role attributes\n      isEmptyTip: false,\n      disable: false,\n      possibleCustomEvents: props.possibleCustomEvents || '',\n      possibleCustomEventsOff: props.possibleCustomEventsOff || '',\n      originTooltip: null,\n      isMultiline: false\n    };\n\n    _this.bind(['showTooltip', 'updateTooltip', 'hideTooltip', 'hideTooltipOnScroll', 'getTooltipContent', 'globalRebuild', 'globalShow', 'globalHide', 'onWindowResize', 'mouseOnToolTip']);\n\n    _this.mount = true;\n    _this.delayShowLoop = null;\n    _this.delayHideLoop = null;\n    _this.delayReshow = null;\n    _this.intervalUpdateContent = null;\n    return _this;\n  }\n  /**\n   * For unify the bind and unbind listener\n   */\n\n\n  _createClass(ReactTooltip, [{\n    key: \"bind\",\n    value: function bind(methodArray) {\n      var _this2 = this;\n\n      methodArray.forEach(function (method) {\n        _this2[method] = _this2[method].bind(_this2);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          insecure = _this$props.insecure,\n          resizeHide = _this$props.resizeHide;\n      this.bindListener(); // Bind listener for tooltip\n\n      this.bindWindowEvents(resizeHide); // Bind global event for static method\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mount = false;\n      this.clearTimer();\n      this.unbindListener();\n      this.removeScrollListener(this.state.currentTarget);\n      this.unbindWindowEvents();\n    }\n    /**\n     * Return if the mouse is on the tooltip.\n     * @returns {boolean} true - mouse is on the tooltip\n     */\n\n  }, {\n    key: \"mouseOnToolTip\",\n    value: function mouseOnToolTip() {\n      var show = this.state.show;\n\n      if (show && this.tooltipRef) {\n        /* old IE or Firefox work around */\n        if (!this.tooltipRef.matches) {\n          /* old IE work around */\n          if (this.tooltipRef.msMatchesSelector) {\n            this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;\n          } else {\n            /* old Firefox work around */\n            this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;\n          }\n        }\n\n        return this.tooltipRef.matches(':hover');\n      }\n\n      return false;\n    }\n    /**\n     * Pick out corresponded target elements\n     */\n\n  }, {\n    key: \"getTargetArray\",\n    value: function getTargetArray(id) {\n      var targetArray = [];\n      var selector;\n\n      if (!id) {\n        selector = '[data-tip]:not([data-for])';\n      } else {\n        var escaped = id.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n        selector = \"[data-tip][data-for=\\\"\".concat(escaped, \"\\\"]\");\n      } // Scan document for shadow DOM elements\n\n\n      nodeListToArray(document.getElementsByTagName('*')).filter(function (element) {\n        return element.shadowRoot;\n      }).forEach(function (element) {\n        targetArray = targetArray.concat(nodeListToArray(element.shadowRoot.querySelectorAll(selector)));\n      });\n      return targetArray.concat(nodeListToArray(document.querySelectorAll(selector)));\n    }\n    /**\n     * Bind listener to the target elements\n     * These listeners used to trigger showing or hiding the tooltip\n     */\n\n  }, {\n    key: \"bindListener\",\n    value: function bindListener() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          globalEventOff = _this$props2.globalEventOff,\n          isCapture = _this$props2.isCapture;\n      var targetArray = this.getTargetArray(id);\n      targetArray.forEach(function (target) {\n        if (target.getAttribute('currentItem') === null) {\n          target.setAttribute('currentItem', 'false');\n        }\n\n        _this3.unbindBasicListener(target);\n\n        if (_this3.isCustomEvent(target)) {\n          _this3.customUnbindListener(target);\n        }\n      });\n\n      if (this.isBodyMode()) {\n        this.bindBodyListener(targetArray);\n      } else {\n        targetArray.forEach(function (target) {\n          var isCaptureMode = _this3.isCapture(target);\n\n          var effect = _this3.getEffect(target);\n\n          if (_this3.isCustomEvent(target)) {\n            _this3.customBindListener(target);\n\n            return;\n          }\n\n          target.addEventListener('mouseenter', _this3.showTooltip, isCaptureMode);\n\n          if (effect === 'float') {\n            target.addEventListener('mousemove', _this3.updateTooltip, isCaptureMode);\n          }\n\n          target.addEventListener('mouseleave', _this3.hideTooltip, isCaptureMode);\n        });\n      } // Global event to hide tooltip\n\n\n      if (globalEventOff) {\n        window.removeEventListener(globalEventOff, this.hideTooltip);\n        window.addEventListener(globalEventOff, this.hideTooltip, isCapture);\n      } // Track removal of targetArray elements from DOM\n\n\n      this.bindRemovalTracker();\n    }\n    /**\n     * Unbind listeners on target elements\n     */\n\n  }, {\n    key: \"unbindListener\",\n    value: function unbindListener() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          id = _this$props3.id,\n          globalEventOff = _this$props3.globalEventOff;\n\n      if (this.isBodyMode()) {\n        this.unbindBodyListener();\n      } else {\n        var targetArray = this.getTargetArray(id);\n        targetArray.forEach(function (target) {\n          _this4.unbindBasicListener(target);\n\n          if (_this4.isCustomEvent(target)) _this4.customUnbindListener(target);\n        });\n      }\n\n      if (globalEventOff) window.removeEventListener(globalEventOff, this.hideTooltip);\n      this.unbindRemovalTracker();\n    }\n    /**\n     * Invoke this before bind listener and unmount the component\n     * it is necessary to invoke this even when binding custom event\n     * so that the tooltip can switch between custom and default listener\n     */\n\n  }, {\n    key: \"unbindBasicListener\",\n    value: function unbindBasicListener(target) {\n      var isCaptureMode = this.isCapture(target);\n      target.removeEventListener('mouseenter', this.showTooltip, isCaptureMode);\n      target.removeEventListener('mousemove', this.updateTooltip, isCaptureMode);\n      target.removeEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n    }\n  }, {\n    key: \"getTooltipContent\",\n    value: function getTooltipContent() {\n      var _this$props4 = this.props,\n          getContent = _this$props4.getContent,\n          children = _this$props4.children; // Generate tooltip content\n\n      var content;\n\n      if (getContent) {\n        if (Array.isArray(getContent)) {\n          content = getContent[0] && getContent[0](this.state.originTooltip);\n        } else {\n          content = getContent(this.state.originTooltip);\n        }\n      }\n\n      return getTipContent(this.state.originTooltip, children, content, this.state.isMultiline);\n    }\n  }, {\n    key: \"isEmptyTip\",\n    value: function isEmptyTip(placeholder) {\n      return typeof placeholder === 'string' && placeholder === '' || placeholder === null;\n    }\n    /**\n     * When mouse enter, show the tooltip\n     */\n\n  }, {\n    key: \"showTooltip\",\n    value: function showTooltip(e, isGlobalCall) {\n      if (!this.tooltipRef) {\n        return;\n      }\n\n      if (isGlobalCall) {\n        // Don't trigger other elements belongs to other ReactTooltip\n        var targetArray = this.getTargetArray(this.props.id);\n        var isMyElement = targetArray.some(function (ele) {\n          return ele === e.currentTarget;\n        });\n        if (!isMyElement) return;\n      } // Get the tooltip content\n      // calculate in this phrase so that tip width height can be detected\n\n\n      var _this$props5 = this.props,\n          multiline = _this$props5.multiline,\n          getContent = _this$props5.getContent;\n      var originTooltip = e.currentTarget.getAttribute('data-tip');\n      var isMultiline = e.currentTarget.getAttribute('data-multiline') || multiline || false; // If it is focus event or called by ReactTooltip.show, switch to `solid` effect\n\n      var switchToSolid = e instanceof window.FocusEvent || isGlobalCall; // if it needs to skip adding hide listener to scroll\n\n      var scrollHide = true;\n\n      if (e.currentTarget.getAttribute('data-scroll-hide')) {\n        scrollHide = e.currentTarget.getAttribute('data-scroll-hide') === 'true';\n      } else if (this.props.scrollHide != null) {\n        scrollHide = this.props.scrollHide;\n      } // Make sure the correct place is set\n\n\n      var desiredPlace = e.currentTarget.getAttribute('data-place') || this.props.place || 'top';\n      var effect = switchToSolid && 'solid' || this.getEffect(e.currentTarget);\n      var offset = e.currentTarget.getAttribute('data-offset') || this.props.offset || {};\n      var result = getPosition(e, e.currentTarget, this.tooltipRef, desiredPlace, desiredPlace, effect, offset);\n\n      if (result.position && this.props.overridePosition) {\n        result.position = this.props.overridePosition(result.position, e, e.currentTarget, this.tooltipRef, desiredPlace, desiredPlace, effect, offset);\n      }\n\n      var place = result.isNewState ? result.newState.place : desiredPlace; // To prevent previously created timers from triggering\n\n      this.clearTimer();\n      var target = e.currentTarget;\n      var reshowDelay = this.state.show ? target.getAttribute('data-delay-update') || this.props.delayUpdate : 0;\n      var self = this;\n\n      var updateState = function updateState() {\n        self.setState({\n          originTooltip: originTooltip,\n          isMultiline: isMultiline,\n          desiredPlace: desiredPlace,\n          place: place,\n          type: target.getAttribute('data-type') || self.props.type || 'dark',\n          customColors: {\n            text: target.getAttribute('data-text-color') || self.props.textColor || null,\n            background: target.getAttribute('data-background-color') || self.props.backgroundColor || null,\n            border: target.getAttribute('data-border-color') || self.props.borderColor || null,\n            arrow: target.getAttribute('data-arrow-color') || self.props.arrowColor || null\n          },\n          effect: effect,\n          offset: offset,\n          html: (target.getAttribute('data-html') ? target.getAttribute('data-html') === 'true' : self.props.html) || false,\n          delayShow: target.getAttribute('data-delay-show') || self.props.delayShow || 0,\n          delayHide: target.getAttribute('data-delay-hide') || self.props.delayHide || 0,\n          delayUpdate: target.getAttribute('data-delay-update') || self.props.delayUpdate || 0,\n          border: (target.getAttribute('data-border') ? target.getAttribute('data-border') === 'true' : self.props.border) || false,\n          extraClass: target.getAttribute('data-class') || self.props[\"class\"] || self.props.className || '',\n          disable: (target.getAttribute('data-tip-disable') ? target.getAttribute('data-tip-disable') === 'true' : self.props.disable) || false,\n          currentTarget: target\n        }, function () {\n          if (scrollHide) {\n            self.addScrollListener(self.state.currentTarget);\n          }\n\n          self.updateTooltip(e);\n\n          if (getContent && Array.isArray(getContent)) {\n            self.intervalUpdateContent = setInterval(function () {\n              if (self.mount) {\n                var _getContent = self.props.getContent;\n                var placeholder = getTipContent(originTooltip, '', _getContent[0](), isMultiline);\n                var isEmptyTip = self.isEmptyTip(placeholder);\n                self.setState({\n                  isEmptyTip: isEmptyTip\n                });\n                self.updatePosition();\n              }\n            }, getContent[1]);\n          }\n        });\n      }; // If there is no delay call immediately, don't allow events to get in first.\n\n\n      if (reshowDelay) {\n        this.delayReshow = setTimeout(updateState, reshowDelay);\n      } else {\n        updateState();\n      }\n    }\n    /**\n     * When mouse hover, update tool tip\n     */\n\n  }, {\n    key: \"updateTooltip\",\n    value: function updateTooltip(e) {\n      var _this5 = this;\n\n      var _this$state = this.state,\n          delayShow = _this$state.delayShow,\n          disable = _this$state.disable;\n      var afterShow = this.props.afterShow;\n      var placeholder = this.getTooltipContent();\n      var delayTime = parseInt(delayShow, 10);\n      var eventTarget = e.currentTarget || e.target; // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n\n      if (this.mouseOnToolTip()) {\n        return;\n      } // if the tooltip is empty, disable the tooltip\n\n\n      if (this.isEmptyTip(placeholder) || disable) {\n        return;\n      }\n\n      var updateState = function updateState() {\n        if (Array.isArray(placeholder) && placeholder.length > 0 || placeholder) {\n          var isInvisible = !_this5.state.show;\n\n          _this5.setState({\n            currentEvent: e,\n            currentTarget: eventTarget,\n            show: true\n          }, function () {\n            _this5.updatePosition();\n\n            if (isInvisible && afterShow) {\n              afterShow(e);\n            }\n          });\n        }\n      };\n\n      clearTimeout(this.delayShowLoop);\n\n      if (delayShow) {\n        this.delayShowLoop = setTimeout(updateState, delayTime);\n      } else {\n        updateState();\n      }\n    }\n    /*\n     * If we're mousing over the tooltip remove it when we leave.\n     */\n\n  }, {\n    key: \"listenForTooltipExit\",\n    value: function listenForTooltipExit() {\n      var show = this.state.show;\n\n      if (show && this.tooltipRef) {\n        this.tooltipRef.addEventListener('mouseleave', this.hideTooltip);\n      }\n    }\n  }, {\n    key: \"removeListenerForTooltipExit\",\n    value: function removeListenerForTooltipExit() {\n      var show = this.state.show;\n\n      if (show && this.tooltipRef) {\n        this.tooltipRef.removeEventListener('mouseleave', this.hideTooltip);\n      }\n    }\n    /**\n     * When mouse leave, hide tooltip\n     */\n\n  }, {\n    key: \"hideTooltip\",\n    value: function hideTooltip(e, hasTarget) {\n      var _this6 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        isScroll: false\n      };\n      var disable = this.state.disable;\n      var isScroll = options.isScroll;\n      var delayHide = isScroll ? 0 : this.state.delayHide;\n      var afterHide = this.props.afterHide;\n      var placeholder = this.getTooltipContent();\n      if (!this.mount) return;\n      if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip\n\n      if (hasTarget) {\n        // Don't trigger other elements belongs to other ReactTooltip\n        var targetArray = this.getTargetArray(this.props.id);\n        var isMyElement = targetArray.some(function (ele) {\n          return ele === e.currentTarget;\n        });\n        if (!isMyElement || !this.state.show) return;\n      }\n\n      var resetState = function resetState() {\n        var isVisible = _this6.state.show; // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n\n        if (_this6.mouseOnToolTip()) {\n          _this6.listenForTooltipExit();\n\n          return;\n        }\n\n        _this6.removeListenerForTooltipExit();\n\n        _this6.setState({\n          show: false\n        }, function () {\n          _this6.removeScrollListener(_this6.state.currentTarget);\n\n          if (isVisible && afterHide) {\n            afterHide(e);\n          }\n        });\n      };\n\n      this.clearTimer();\n\n      if (delayHide) {\n        this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));\n      } else {\n        resetState();\n      }\n    }\n    /**\n     * When scroll, hide tooltip\n     */\n\n  }, {\n    key: \"hideTooltipOnScroll\",\n    value: function hideTooltipOnScroll(event, hasTarget) {\n      this.hideTooltip(event, hasTarget, {\n        isScroll: true\n      });\n    }\n    /**\n     * Add scroll event listener when tooltip show\n     * automatically hide the tooltip when scrolling\n     */\n\n  }, {\n    key: \"addScrollListener\",\n    value: function addScrollListener(currentTarget) {\n      var isCaptureMode = this.isCapture(currentTarget);\n      window.addEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);\n    }\n  }, {\n    key: \"removeScrollListener\",\n    value: function removeScrollListener(currentTarget) {\n      var isCaptureMode = this.isCapture(currentTarget);\n      window.removeEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);\n    } // Calculation the position\n\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var _this7 = this;\n\n      var _this$state2 = this.state,\n          currentEvent = _this$state2.currentEvent,\n          currentTarget = _this$state2.currentTarget,\n          place = _this$state2.place,\n          desiredPlace = _this$state2.desiredPlace,\n          effect = _this$state2.effect,\n          offset = _this$state2.offset;\n      var node = this.tooltipRef;\n      var result = getPosition(currentEvent, currentTarget, node, place, desiredPlace, effect, offset);\n\n      if (result.position && this.props.overridePosition) {\n        result.position = this.props.overridePosition(result.position, currentEvent, currentTarget, node, place, desiredPlace, effect, offset);\n      }\n\n      if (result.isNewState) {\n        // Switch to reverse placement\n        return this.setState(result.newState, function () {\n          _this7.updatePosition();\n        });\n      } // Set tooltip position\n\n\n      node.style.left = result.position.left + 'px';\n      node.style.top = result.position.top + 'px';\n    }\n    /**\n     * CLear all kinds of timeout of interval\n     */\n\n  }, {\n    key: \"clearTimer\",\n    value: function clearTimer() {\n      clearTimeout(this.delayShowLoop);\n      clearTimeout(this.delayHideLoop);\n      clearTimeout(this.delayReshow);\n      clearInterval(this.intervalUpdateContent);\n    }\n  }, {\n    key: \"hasCustomColors\",\n    value: function hasCustomColors() {\n      var _this8 = this;\n\n      return Boolean(Object.keys(this.state.customColors).find(function (color) {\n        return color !== 'border' && _this8.state.customColors[color];\n      }) || this.state.border && this.state.customColors['border']);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      var _this$state3 = this.state,\n          extraClass = _this$state3.extraClass,\n          html = _this$state3.html,\n          ariaProps = _this$state3.ariaProps,\n          disable = _this$state3.disable;\n      var content = this.getTooltipContent();\n      var isEmptyTip = this.isEmptyTip(content);\n      var style = generateTooltipStyle(this.state.uuid, this.state.customColors, this.state.type, this.state.border);\n      var tooltipClass = '__react_component_tooltip' + \" \".concat(this.state.uuid) + (this.state.show && !disable && !isEmptyTip ? ' show' : '') + (this.state.border ? ' border' : '') + \" place-\".concat(this.state.place) + // top, bottom, left, right\n      \" type-\".concat(this.hasCustomColors() ? 'custom' : this.state.type) + ( // dark, success, warning, error, info, light, custom\n      this.props.delayUpdate ? ' allow_hover' : '') + (this.props.clickable ? ' allow_click' : '');\n      var Wrapper = this.props.wrapper;\n\n      if (ReactTooltip.supportedWrappers.indexOf(Wrapper) < 0) {\n        Wrapper = ReactTooltip.defaultProps.wrapper;\n      }\n\n      var wrapperClassName = [tooltipClass, extraClass].filter(Boolean).join(' ');\n\n      if (html) {\n        var htmlContent = \"\".concat(content, \"\\n<style>\").concat(style, \"</style>\");\n        return React.createElement(Wrapper, _extends({\n          className: \"\".concat(wrapperClassName),\n          id: this.props.id,\n          ref: function ref(_ref) {\n            return _this9.tooltipRef = _ref;\n          }\n        }, ariaProps, {\n          \"data-id\": \"tooltip\",\n          dangerouslySetInnerHTML: {\n            __html: htmlContent\n          }\n        }));\n      } else {\n        return React.createElement(Wrapper, _extends({\n          className: \"\".concat(wrapperClassName),\n          id: this.props.id\n        }, ariaProps, {\n          ref: function ref(_ref2) {\n            return _this9.tooltipRef = _ref2;\n          },\n          \"data-id\": \"tooltip\"\n        }), React.createElement(\"style\", {\n          dangerouslySetInnerHTML: {\n            __html: style\n          }\n        }), content);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var ariaProps = prevState.ariaProps;\n      var newAriaProps = parseAria(nextProps);\n      var isChanged = Object.keys(newAriaProps).some(function (props) {\n        return newAriaProps[props] !== ariaProps[props];\n      });\n\n      if (!isChanged) {\n        return null;\n      }\n\n      return _objectSpread2({}, prevState, {\n        ariaProps: newAriaProps\n      });\n    }\n  }]);\n\n  return ReactTooltip;\n}(React.Component), _defineProperty(_class2, \"defaultProps\", {\n  insecure: true,\n  resizeHide: true,\n  wrapper: 'div',\n  clickable: false\n}), _defineProperty(_class2, \"supportedWrappers\", ['div', 'span']), _defineProperty(_class2, \"displayName\", 'ReactTooltip'), _temp)) || _class) || _class) || _class) || _class) || _class) || _class) || _class;\n\nexport default ReactTooltip;","export const MapData = [\r\n  {\r\n    tag: \"path\",\r\n    id: \"US-KY\",\r\n    points:\r\n      \"M740.576686,274.497738 L741.070912,275.069964 L741.756775,278.430489 L741.736603,279.117159 L741.34324,280.594542 L741.484447,281.322829 L742.160225,282.394451 L744.409455,284.766586 L744.742301,285.76538 L745.629889,286.660133 L746.477133,288.064686 L748.94826,290.977835 L752.458269,293.152292 L755,293.464415 L749.149985,300.071019 L746.37627,302.5576 L743.683246,304.628016 L743.481521,304.940139 L743.078072,306.823281 L741.524792,308.664807 L740.64729,310.495929 L738.176163,312.285434 L736.542193,314.470296 L732.033646,317.029704 L729.451571,318.05971 L727.777256,319.40184 L727.646135,319.474668 L727.515014,319.547497 L727.383893,319.620326 L727.252772,319.693154 L727.121651,319.765983 L726.99053,319.838812 L726.859409,319.911641 L726.728288,319.984469 L720.474823,320.619119 L714.221358,321.232961 L707.967893,321.815591 L701.714429,322.377413 L695.460964,322.918426 L689.197413,323.428227 L682.933862,323.91722 L676.670311,324.375 L670.699261,325.134499 L664.728211,325.862786 L658.747074,326.570265 L652.765938,327.256936 L652.17085,326.591074 L650.577225,326.580669 L648.136357,326.549457 L648.045581,326.549457 L648.963428,328.848764 L649.155066,330.908776 L649.104635,330.939988 L646.28049,331.189686 L643.163844,331.460193 L640.047197,331.7307 L636.930551,331.990802 L633.813905,332.240501 L630.697259,332.490199 L627.580613,332.729493 L624,333 L624.806899,330.908776 L625.603711,330.305338 L625.966816,330.170084 L626.904835,330.471803 L627.34863,330.56544 L628.256391,329.774729 L628.942254,327.631484 L629.265014,325.394602 L629.224669,323.064083 L628.518633,321.25377 L628.246304,320.130127 L628.690099,318.683957 L630.056347,315.638042 L633.704667,314.79219 L638.11888,316.020239 L640.39193,316.483894 L641.736215,316.28353 L640.733061,315.92687 L639.875731,314.064536 L639.512627,312.659982 L639.653834,311.702805 L641.439098,310.464717 L644.878503,308.92491 L646.219972,307.187425 L645.463505,305.252262 L645.513936,303.42114 L646.36118,301.683655 L646.875577,301.225875 L647.208423,300.924156 L648.065753,301.132238 L648.701186,300.93456 L649.104635,300.341526 L649.215584,299.467581 L649.054204,298.395959 L649.276101,298.115048 L649.588774,298.021411 L650.506621,298.5 L651.505159,298.552021 L652.453265,298.125452 L653.098783,298.375151 L653.441715,299.290712 L653.845165,299.54041 L654.309132,299.124246 L654.490684,298.229493 L654.389821,296.856152 L654.58146,296.627262 L654.793271,296.793727 L655.095858,297.199487 L655.872498,297.293124 L656.921466,296.804131 L658.454573,296.991405 L661.480443,298.281514 L662.80174,299.301116 L663.608639,298.843335 L664.334848,297.251508 L665.545196,295.930187 L667.229597,294.868969 L669.004774,295.066647 L670.880813,296.512817 L672.222282,296.70009 L673.019095,295.628468 L673.382199,294.504825 L673.301509,293.329162 L673.573837,292.53845 L674.199184,292.143094 L674.390822,291.560464 L674.148753,290.790561 L674.592547,290.291164 L675.712119,290.05187 L675.853326,289.708534 L675.691946,289.41722 L675.691946,289.261158 L676.024792,289.229946 L676.559362,289.521261 L677.184709,290.239144 L677.578072,291.300362 L678.748075,292.236731 L680.694718,293.058655 L682.157222,293.069059 L683.145673,292.267943 L683.932399,290.384801 L684.517401,287.430036 L685.505852,285.682147 L686.907838,285.141134 L687.835771,283.96547 L688.299738,282.144753 L689.237758,280.61535 L690.649831,279.366858 L691.073452,277.77503 L690.498537,275.829463 L691.063366,274.674608 L692.76794,274.30006 L693.847167,274.404101 L694.522944,274.851478 L694.986911,275.038752 L695.279412,275.080368 L695.864413,274.851478 L696.540191,274.383293 L699.747613,272.677021 L701.361411,271.314083 L701.421928,270.169632 L701.028565,269.493366 L700.181321,269.295688 L699.959424,268.848311 L700.362873,268.161641 L700.282184,267.339717 L699.727441,266.392943 L700.009855,265.352533 L700.251925,265.102835 L701.129427,264.218486 L702.138051,264 L703.035725,264.686671 L704.205728,264.738691 L705.637974,264.156062 L707.03996,264.249698 L708.401601,265.019602 L709.793502,266.590621 L711.205574,268.952352 L713.384201,270.221653 L716.319295,270.388118 L718.538266,271.085193 L720.041115,272.323281 L721.180859,272.625 L722.360949,271.678227 L723.662073,271.095597 L725.074145,271.366104 L727.040961,272.302473 L729.683554,271.647014 L732.981752,269.410133 L735.069603,269.181242 L735.957191,270.981152 L737.742455,272.729041 L740.425393,274.435314 L740.576686,274.497738 Z M623,333.895161 L622.05303,334 L622,333.790323 L622.030303,333.290323 L622.090909,333.064516 L622.280303,333.008065 L622.5,333 L622.840909,333.443548 L623,333.895161 Z\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-AL\",\r\n    points:\r\n      \"697.38 357.84 698.19 360.61 699 363.38 699.81 366.15 700.62 368.92 701.43 371.69 702.24 374.46 703.06 377.23 703.88 380 704.7 382.77 705.52 385.54 706.34 388.31 707.17 391.08 708 393.85 708.83 396.62 709.66 399.39 710.49 402.16 711.11 403.39 711.73 405.43 715.13 411.28 716.22 413.78 716.12 414.88 716.56 415.75 717.54 416.39 717.49 417.28 716.42 418.42 715.78 419.73 715.47 421.94 715.47 421.95 714.79 425.86 715.05 428.17 716.52 431.18 716.92 432.54 716.94 438.78 717.9 442.68 719.36 445.12 713.18 445.87 706.98 446.59 700.78 447.29 694.57 447.97 688.36 448.63 682.15 449.26 675.94 449.87 669.73 450.46 669.61 452.08 669.88 453.6 670.69 454.99 674.213943 456.585574 674.06 458.15 673.77 460.33 674 461.84 673.78 462.66 673.16 463.41 673.05 464.19 672.61 464.45 670.71 466.96 663.33 468.39 663.69 467.83 664.47 463.35 664.27 460.85 663.64 459.43 662.3 458.03 661.92 458.36 661.26 461.01 660.82 464.45 660.55 465.57 658.35 465.84 656.38 465.77 655.42 465.91 654.78 461.33 654.23 457.15 653.68 452.97 653.13 448.8 652.58 444.63 652.03 440.46 651.48 436.29 650.93 432.12 651.05 427.96 651.17 423.81 651.29 419.66 651.41 415.51 651.52 411.36 651.63 407.21 651.74 403.06 651.85 398.91 651.96 394.77 652.06 390.63 652.16 386.49 652.26 382.35 652.36 378.21 652.45 374.07 652.54 369.93 652.63 365.79 652.65 364.74 652.64 364.38 652.66 363.84 650.92 362.52 650.58 362.26 650.33 362.01 650.56 361.97 653.49 361.75 656.42 361.52 659.35 361.29 662.28 361.05 665.21 360.81 668.14 360.56 671.07 360.31 674 360.05 676.93 359.79 679.86 359.52 682.79 359.25 685.72 358.97 688.64 358.69 691.56 358.4 694.48 358.11\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-AR\",\r\n    points:\r\n      \"621.39 342.47 621.34 342.88 621.77 343.74 621.81 344.24 621.56 344.57 620.95 344.79 620.51 345.04 620.44 345.42 620.43 345.6 620.49 346.02 620.6 346.39 620.34 346.91 618.35 348.27 617.57 349.92 618 351.84 617.4 353.85 615.73 355.95 615.12 358.22 615.55 360.66 614.78 362.7 612.8 364.34 612.16 365.32 612.17 365.39 612.22 366.08 612.46 366.62 611.83 367.69 610.14 368.85 609.26 369.94 609.19 370.95 608.8 371.46 608.05 371.73 607.68 373.25 607.52 376.77 606.69 378.82 605.2 379.41 604.43 380.24 604.38 381.32 603.55 382.62 601.92 384.12 601.43 385.5 602.08 386.73 602 387.25 601.5 387.7 599.68 388.4 599.38 388.72 599.21 389.06 599.62 389.69 599.89 390.65 599.71 392.31 599.3 393.02 598.9 393.7 597.4 394.93 597.02 395.85 597.74 396.44 597.73 397.13 596.99 397.91 597.26 398.71 597.47 399.24 598.21 399.7 598.54 401.06 598.12 402.85 598.29 404.29 599.22 405.44 599.44 405.94 598.79 409.94 598.87 410.49 595.19 410.7 591.81 410.87 588.44 411.04 585.06 411.2 581.69 411.35 578.31 411.5 574.93 411.64 571.56 411.78 568.18 411.9 564.8 412.03 561.43 412.14 558.05 412.25 554.67 412.35 551.3 412.44 546.92 412.53 543.54 412.61 543.45 409.59 543.35 406.56 543.26 403.54 544.17 400.51 543.19 400.02 541.46 399.8 540.59 399.99 539.53 399.87 538.84 400.38 538.37 400.48 537.99 400.38 537.75 399.94 536.97 399.64 535.98 398.57 535.99 396.15 536 393.73 536.01 391.3 536.02 388.88 536.03 386.46 536.04 384.04 536.06 381.61 536.07 379.19 536.08 376.77 536.09 374.35 536.1 371.93 536.11 369.51 536.12 367.09 536.13 364.67 536.14 362.25 536.15 359.83 535.69 356.74 535.23 353.65 534.77 350.56 534.32 347.47 533.86 344.38 533.41 341.29 532.96 338.2 532.51 335.11 537.5 335.03 542.5 334.93 547.5 334.82 552.5 334.69 557.5 334.54 562.5 334.38 567.49 334.21 572.49 334.02 577.48 333.81 582.48 333.59 587.47 333.35 592.47 333.1 597.46 332.83 602.45 332.55 607.44 332.25 612.43 331.94 613.34 333.62 614.19 334.7 614.38 335.52 614.28 336.37 613.07 338.25 611.92 339.16 611.32 340.1 610.47 341.01 609.21 343.46 612.17 343.23 615.13 342.99 618.09 342.74\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-AZ\",\r\n    points:\r\n      \"275.89 307.52 274.76 315.32 273.63 323.12 272.5 330.92 271.37 338.73 270.24 346.54 269.11 354.35 267.98 362.16 266.85 369.98 265.72 377.8 264.58 385.62 263.45 393.45 262.32 401.29 261.18 409.12 260.05 416.96 258.91 424.81 257.77 432.68 253.45 432.06 246.73 431.08 240.01 430.06 233.3 429.02 226.59 427.96 219.88 426.87 211.46 422.07 203.08 417.24 194.73 412.37 186.44 407.46 178.18 402.51 169.97 397.52 161.8 392.5 153.67 387.43 154.82 386.38 156.68 383.34 156.79 383.15 156.79 383.15 159.4 383.46 160.79 382.88 161.82 381.52 162.29 380.01 162.21 378.37 161.35 376.98 159.72 375.84 159.13 373.49 159.59 369.91 160.31 368.08 161.29 367.99 162.36 367.32 163.51 366.06 164.46 364.62 165.22 362.99 165.75 360.85 166.03 358.2 168.34 355.32 170.36 353.67 173.87 351.85 174.7 351.26 174.83 350.67 174.85 350.6 174.4 349.64 172.05 347.4 171.16 345.95 171.28 344.81 171.25 344.78 171.12 343.64 169.17 338.58 168.72 335.92 169.11 334.1 169.14 333.96 171.09 326.29 170.62 323.39 170.7 321.83 171.39 320.04 171.54 318.86 171.27 317.76 171.53 315.91 171.94 313.64 171.44 312.02 171.42 311.34 172.2 309.88 173.19 309.25 174.65 308.97 176.24 309.1 177.96 309.63 179.13 310.6 179.77 312 180.51 312.8 181.37 313.01 182.71 312.23 184.16 310.29 184.52 310.21 186.44 300.83 188.17 292.29 193.63 293.39 199.09 294.46 204.55 295.51 210.02 296.55 215.49 297.57 220.97 298.57 226.44 299.55 231.92 300.51 237.41 301.45 242.9 302.37 248.39 303.28 253.88 304.16 259.38 305.03 264.88 305.88 270.38 306.71\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-CA\",\r\n    points:\r\n      \"114.75 160.7 113.66 164.73 112.57 168.76 111.48 172.79 110.39 176.82 109.3 180.85 108.21 184.88 107.12 188.91 106.03 192.93 104.94 196.96 103.85 200.98 102.76 205 101.67 209.02 100.58 213.04 99.49 217.06 98.4 221.08 97.7608343 225.620775 100.29 229.66 103.29 234.22 106.31 238.78 109.36 243.33 112.43 247.87 115.52 252.41 118.63 256.94 121.76 261.47 124.17 265.22 126.59 268.97 129.03 272.72 131.48 276.46 133.94 280.2 136.42 283.94 138.91 287.67 141.41 291.4 144.87 296.72 148.35 302.03 151.86 307.33 155.39 312.63 158.95 317.92 162.54 323.2 166.16 328.48 169.06 334.11 168.67 335.93 169.12 338.59 171.07 343.65 171.2 344.79 171.23 344.82 171.11 345.96 172 347.41 174.36 349.66 174.8 350.61 174.79 350.68 174.66 351.28 173.83 351.87 170.33 353.69 168.31 355.34 166 358.21 165.72 360.87 165.2 363.01 164.44 364.63 163.49 366.07 162.34 367.33 161.27 368 160.29 368.09 159.57 369.92 159.11 373.5 159.7 375.86 161.34 377 162.2 378.39 162.28 380.03 161.81 381.53 160.78 382.9 159.39 383.48 156.78 383.17 156.67 383.36 154.51 383.15 149.13 382.5 143.74 381.83 138.36 381.14 132.98 380.44 127.6 379.72 122.22 378.98 116.84 378.22 111.46 377.45 111.45 377.3 111.89 374.89 111.24 373.85 110.02 374.11 110.26 370.9 110.88 369.51 111.09 368.06 110.9 364.32 109.21 359.43 104.65 352.75 102.12 350.26 100.34 347.46 99.02 346.48 97.21 345.85 96.42 346.72 94.49 345.51 95.43 343.12 94.26 339.17 92.69 338.37 88.44 337.53 83.33 334.19 81.97 332.64 81.93 330.48 79.78 328.05 76.8 325.43 74.78 325.32 72.35 324.39 69.13 322.2 67.1 321.48 62.96 320.74 61.52 320.07 60.55 318.13 59.26 316.94 60.11 315.12 60.4 313.34 61 312.06 61.15 308.93 62.43 306.35 62.25 305.24 61.62 304.25 59.29 302.39 59.2 300.86 60.18 299.04 59.85 297.57 58.03 295.77 56.78 292.49 54.65 290.28 54.31 287.5 53.18 285.52 53.03 284.01 50.97 278.17 48.39 273.32 48.46 270.98 49.19 267.96 51.16 266.56 52.4 265.19 52.75 263.7 52.84 262.56 52.13 260.32 47.6 257.78 45 251.92 45.82 248.32 45.36 244.25 46.04 241.9 44.6 235.71 40.77 221.83 38.53 219.12 37.2 215.45 34.15 209.1 35.2 204.69 35.26 198.71 36.94 195.83 37.54 193.6 37.78 190.02 37.51 187.95 35.43 181.84 33 177.38 33.29 174.69 33.87 172.07 35.36 170.05 42.1 159.18 44.79 154.71 45.25 153.1 45.62 149.43 45.56 147.14 44.74 145.26 45.99 143.31 46.6 141.26 46.45 140.83 50.76 142.21 54.93 143.53 59.11 144.84 63.29 146.14 67.48 147.42 71.67 148.69 75.86 149.95 80.06 151.2 84.26 152.43 88.46 153.65 92.67 154.86 96.88 156.06 101.09 157.25 105.31 158.42 109.53 159.58\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-CO\",\r\n    points:\r\n      \"404.79 254.09 404.52 258.25 404.26 262.41 403.99 266.57 403.73 270.73 403.47 274.89 403.21 279.05 402.94 283.21 402.68 287.37 402.42 291.53 402.15 295.69 401.89 299.84 401.63 304 401.36 308.16 401.1 312.32 400.84 316.48 400.58 320.64 396.18 320.34 391.79 320.04 387.4 319.71 383 319.38 376.29 318.85 369.58 318.29 362.86 317.7 356.16 317.09 349.45 316.44 342.75 315.77 336.04 315.07 329.35 314.34 322.65 313.59 315.96 312.8 309.27 311.99 302.59 311.15 295.91 310.29 289.23 309.39 282.56 308.47 275.89 307.52 276.68 302.02 277.48 296.52 278.27 291.02 279.07 285.52 279.86 280.02 280.66 274.52 281.45 269.02 282.25 263.53 283.04 258.03 283.84 252.53 284.63 247.03 285.43 241.53 286.22 236.03 287.02 230.53 287.81 225.03 288.61 219.52 293.85 220.27 299.09 221 304.33 221.71 309.58 222.41 314.83 223.08 320.08 223.74 325.33 224.38 330.59 225 335.85 225.6 341.11 226.19 346.37 226.76 351.63 227.3 356.9 227.83 362.17 228.35 367.43 228.84 372.7 229.32 376.89 229.68 381.09 230.03 385.28 230.38 389.47 230.71 393.66 231.03 397.86 231.34 402.05 231.63 406.25 231.92 406.07 234.69 405.88 237.46 405.7 240.24 405.52 243.01 405.33 245.78 405.15 248.55 404.97 251.32\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-CT\",\r\n    points:\r\n      \"904.77 159.6 905.09 160.75 905.54 162.36 905.87 163.53 906.33 165.14 906.84 166.97 907.32 168.66 907.73 170.14 907.92 171.03 908.2 172.39 907.93 173.02 908.06 174.3 906.61 174.57 904.37 175.52 901.46 177.09 899.63 177.11 898.08 178.36 892.17 180.14 890.8 180.05 889.57 181.95 887.22 183.49 881.53 188.47 880.91 189.31 879.73 188.16 878.79 187.26 879.91 186.09 880.76 185.19 881.55 184.35 882.07 183.81 881.36 183.1 880.66 182.4 880.27 180.32 879.89 178.23 879.5 176.15 879.11 174.07 878.72 171.99 878.34 169.91 877.95 167.83 877.56 165.74 878.92 165.46 880.29 165.17 881.66 164.89 883.03 164.6 884.39 164.31 885.76 164.01 887.13 163.72 888.49 163.43 888.66 163.98 889.33 163.73 889.3 163.22 891.22 162.75 893.15 162.27 895.08 161.79 897 161.31 898.92 160.83 900.85 160.34 902.77 159.86 904.69 159.37\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-DE\",\r\n    points:\r\n      \"857.45 221.86 856.9 222.78 856.58 224.3 855.53 226.29 855.89 227.38 856.31 228.11 856.57 229.78 857.85 231.18 860.26 233.4 861.54 237.4 863.55 239.82 866.42 242.51 868.26 243.03 868.62 244.2 870.55 248.76 870.76 249.8 868.94 250.24 865.17 251.11 861.4 251.98 859.68 252.37 859.64 252.38 859.6 252.39 859.56 252.4 859.52 252.4 859.48 252.41 859.44 252.42 859.4 252.43 859.37 252.44 858.42 249.04 857.48 245.65 856.53 242.25 855.59 238.86 854.65 235.46 853.71 232.06 852.77 228.67 851.83 225.27 852.7 223.24 853.12 222.59 853.76 222.16 855.82 221.6\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-FL\",\r\n    points:\r\n      \"786.28 440.68 787.5 442.54 790.2 450.53 791.6 453.23 794.55 460.66 798.59 467.67 804.07 476.04 812.5 485.89 811.8 486.77 824.4 514.77 826.89 517.18 827.98 519.04 829.49 523.06 830.61 528.37 830.94 538.39 831.8 545.12 831.56 544.95 831.3 544.27 830.96 544.23 830.28 547.5 829.1 550.55 829.3 554.94 828.88 557.23 826.87 559.92 825.37 560.12 822 562.45 819.35 562.44 816.45 563.92 814.41 564.15 812.91 562.31 812.94 561.37 813.25 560.38 814 560.04 813.5 559.02 810.38 554.54 807.43 551.6 806.67 549.44 802.32 548.75 799 547.17 796.48 543.82 794.35 537.51 792.93 536.99 792.3 536.57 791.85 535.23 791.16 535.62 790.45 535.45 786.74 528.63 786.62 529.44 785.34 529.43 784.32 529.08 782.81 527.82 780.64 525.31 775.92 518.2 775.06 517.22 773.71 516.27 774.22 515.84 775.2 515.48 776.98 511.7 778.46 509.35 778.84 507.83 778.64 507.23 777.71 506.46 776.79 507.4 776.31 507.24 774.87 505.61 773.68 505.27 772.96 505.77 774 507.12 774.82 507.56 774.85 509.75 774.65 510.49 774.05 511.21 772.92 511.04 772.45 511.65 771.72 511.18 770.94 510.33 770 508.88 770.6 499.87 771.52 494.06 770.78 487.7 770.77 486.74 770.37 485.08 767.52 481.76 756.06 474.31 746.74 464.84 739.43 461.79 734.4 463.33 733.61 464.24 733.36 465.33 733.84 466.47 733.43 467.02 732.04 467.14 730.21 467.65 725.69 471.04 723.96 471.15 722.49 472.06 721.38 472.74 718.36 473.4 715.84 474.33 714.68 474.13 711.45 468.15 682.11 462.35 672.42 465.06 671.9 464.77 672.89 463.45 672.74 462.78 671.98 463.22 672.09 462.44 672.71 461.69 672.93 460.87 672.7 459.36 672.99 457.18 672.67 456.53 669.62 454.02 668.81 452.63 668.54 451.11 668.66 449.49 674.87 448.9 681.08 448.29 687.29 447.66 693.5 447 699.71 446.32 705.91 445.62 712.11 444.9 718.29 444.15 719.29 445.81 721.26 449.26 721.42 450.1 723.24 450.01 726.33 449.84 729.42 449.66 732.51 449.47 735.6 449.28 738.69 449.08 741.78 448.88 744.87 448.67 747.96 448.46 751.05 448.24 754.14 448.02 757.23 447.79 760.32 447.55 763.41 447.31 766.5 447.06 769.59 446.81 772.68 446.55 772.81 447.28 773.49 448.35 773.82 449.64 774.15 450.23 774.82 450.53 775.8 450.48 776.66 449.59 777.02 447.87 776.89 446.03 776.2 444.02 775.99 442.27 776.31 441.17 776.84 440.83 777.25 440.2 777.64 440.02 778.74 440.15 782.93 440.99\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-GA\",\r\n    points:\r\n      \"794.54 411.03 793.89 413.06 791.79 414.61 791.08 414.68 790.56 415.12 791.03 415.9 791.7 416.41 791.77 416.98 791.29 417.84 790.12 418.25 787.4 427.54 787.54 427.99 788.53 428.25 789.48 429.23 788.36 431.5 787.43 431.48 786.8 431.12 786.71 432.78 786.99 433.62 786.93 435.43 786.71 437.63 786.47 438.56 786.81 440.16 787.3 441.68 784.03 442 779.84 441.16 778.74 441.03 778.35 441.21 777.94 441.84 777.41 442.18 777.09 443.28 777.3 445.03 777.99 447.04 778.12 448.88 777.76 450.6 776.9 451.49 775.92 451.54 775.25 451.24 774.92 450.65 774.59 449.36 773.91 448.29 773.78 447.56 770.69 447.82 767.6 448.07 764.51 448.32 761.42 448.56 758.33 448.8 755.24 449.03 752.15 449.25 749.06 449.47 745.97 449.68 742.88 449.89 739.79 450.09 736.7 450.29 733.61 450.48 730.52 450.67 727.43 450.85 724.34 451.02 721.52 451.11 721.36 450.27 719.39 446.82 718.39 445.16 716.93 442.72 715.97 438.82 715.95 432.58 715.55 431.22 714.08 428.21 713.82 425.9 714.5 421.99 714.5 421.98 714.81 419.77 715.45 418.46 716.52 417.32 716.57 416.43 715.59 415.79 715.15 414.92 715.25 413.82 714.16 411.32 710.76 405.47 710.14 403.43 709.52 402.2 708.69 399.43 707.86 396.66 707.03 393.89 706.2 391.12 705.37 388.35 704.55 385.58 703.73 382.81 702.91 380.04 702.09 377.27 701.27 374.5 700.46 371.73 699.65 368.96 698.84 366.19 698.03 363.42 697.22 360.65 696.41 357.88 702.33 357.26 708.25 356.62 714.16 355.96 720.07 355.28 726.56 354.49 732.04 353.68 737.52 352.85 743 352 742.89 352.04 742.21 353.66 739.95 356.84 739.54 359.09 743.32 361 743.33 361.02 745.67 362.66 747.19 363.22 748.66 363.24 749.65 363.75 750.41 365.23 755.74 372.3 760.7 375.61 762.75 377.29 763.93 379.04 768.15 381.56 769.69 383.03 769.95 384.28 770.54 385.11 771.45 385.51 772.42 386.52 773.45 388.14 775.19 389.41 777.64 390.33 779.75 393 781.53 397.41 783.02 399.9 784.82 400.74 787.68 404.28 788.79 406.49 789.09 408.54 790.48 409.95\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-IA\",\r\n    points:\r\n      \"595.82 199.02 596.91 200.48 598.72 201.75 599.78 202.97 600.1 204.14 601.23 205.35 603.19 206.58 604.35 207.71 604.72 208.72 604.77 210.33 604.51 212.53 603.93 214.14 603.02 215.16 602.39 216.55 602.02 218.3 600.63 219.98 598.22 221.59 595.48 222.76 592.42 223.47 590.66 224.82 590.2 226.83 590.55 228.47 591.72 229.74 592.43 231.11 592.67 232.59 592.03 235.1 590.5 238.63 588.71 240.96 586.67 242.08 585.81 243.62 586.14 245.59 586.02 246.72 585.17 247.15 583.62 246.05 583.32 245.25 582.07 244.47 581.86 243.95 580.91 243.52 580 241.95 575.73 242.17 571.46 242.39 567.19 242.59 562.92 242.78 558.65 242.96 554.38 243.13 550.11 243.29 545.84 243.43 541.56 243.56 537.29 243.68 533.02 243.79 528.74 243.89 524.47 243.97 520.19 244.04 515.92 244.1 511.69 244.14 510.65 242.49 510.09 240.96 510.44 240.24 510.51 237.75 510.29 233.51 509.88 231.12 509.27 230.58 509.2 229.84 509.66 228.9 509.52 228.26 508.78 227.93 508.55 227.12 508.83 225.83 508.65 225.04 508.01 224.76 507.75 224.31 507.86 223.72 507.51 223.33 506.72 223.15 506.41 221.7 506.56 218.96 506.26 217.02 505.52 215.88 505.15 214.81 505.14 213.81 504.36 212.23 502.81 210.08 501.81 207.24 501.37 203.73 500.27 201.76 499.78 201.64 499.37 199.8 498.92 198.98 498.85 198.35 497.49 196.76 497.41 196.15 497.59 195.38 498.48 193.89 499.3 191.43 499.5 189.78 500.15 188.54 500.17 187.85 500.07 186.95 499.71 186.16 498.65 185.57 498.52 185.33 498.42 184.42 498.87 183.85 499 183.2 498.89 182.41 498.26 181.04 497.98 179.64 500.34 179.57 505.62 179.59 510.9 179.59 516.18 179.56 521.46 179.52 526.74 179.46 532.02 179.38 537.3 179.29 542.58 179.17 547.86 179.03 553.14 178.88 558.42 178.71 563.7 178.51 568.97 178.3 574.25 178.07 579.52 177.83 584.88 177.54 585.06 178.92 585.43 179.91 586.13 180.68 587.16 181.25 587.39 182.42 586.82 184.2 586.71 186.38 587.07 188.95 587.69 191.25 588.59 193.29 590.47 194.7 593.33 195.51 595.08 196.9 595.7 198.86\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-WA\",\r\n    points:\r\n      \"184.1 88.3 180.33 87.41 176.29 86.45 172.26 85.48 168.23 84.5 164.2 83.51 160.18 82.51 156.16 81.49 152.14 80.46 151.88 80.4 151.32 80.69 149.19 80.98 145.32 80.22 137.12 80.27 133.32 81 130.14 80.99 124.42 80.23 119.13 79.93 117.06 79.23 116.44 78.05 114.19 76.83 110.3 75.56 106.81 75.21 103.2 76.18 102.17 76.08 101.36 75.9 96.18 73.56 94.86 73.11 94.02 71.77 94.21 70.05 94.24 64.71 93.66 61.33 92.46 59.9 91.41 59.14 89.76 59.22 89.39 58.79 88.71 58.5 87.47 56.94 86.91 55.59 84.13 54.8 83.78 53.93 80.49 53.65 79.77 52.64 77.95 52.56 79 50.69 79.73 48.15 82.47 32.1 82.21 27.38 83 21.62 82.66 18.54 81.17 15.21 81.05 13.51 81.74 9.53 82.99 6.75 83.22 4.58 84.29 5.06 86.69 7.6 89.92 10.02 90.73 11.29 92.28 12.53 101.76 16.66 102.43 16.76 103.9 16.5 104.42 16.75 105.41 18.69 106.08 19.09 107.04 19.3 107.82 19.23 109.32 18.57 109.36 19 109.05 19.94 109.06 21.42 108.83 28.43 108.53 28.81 108.27 30.55 108.01 30.65 107.54 30.29 107.35 30.35 108.11 32.55 108.1 34.08 107.78 35.35 106.7 37.65 106.2 37.93 107.1 38.18 107.68 37.9 108.36 38.09 109.12 37.94 110.47 36.95 110.66 36.45 111.16 33.47 112.42 27.82 112.78 27.08 114.19 25.67 114.58 24.98 116.19 23.63 116.11 22.87 113.3 19.95 113.16 19.22 113.24 18.31 113.56 17.71 114.52 17.31 115.51 17.35 115.59 16.79 114.96 14.71 114.43 13.69 113.96 13.13 113.2 12.79 113 12.37 113.03 11.93 113.36 11.44 113.83 11.4 116.6 8.19 116.74 6.04 114.94 4.75 114.8 3.32 114.77 0 116.23 0.44 122.31 2.26 128.4 4.06 134.5 5.82 140.6 7.56 146.71 9.27 152.83 10.95 158.96 12.6 165.1 14.22 171.24 15.81 177.39 17.37 183.55 18.91 189.7 20.42 194.589139 22.276867 197.947113 20.0875357 196.58 25.78 195.76 29.31 194.94 32.84 194.12 36.36 193.3 39.88 192.48 43.4 191.66 46.92 190.84 50.44 184.57 83.12 184.53 84.69 183.94 85.46 183.86 87.02\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-IL\",\r\n    points:\r\n      \"642.5 195.9 642.8 199.36 643.31 202.21 643.93 203.44 644.58 204.33 645.27 204.87 646.16 206.67 647.26 209.73 648.2 211.72 648.87 212.51 649.4 218.43 650 225.07 650.59 231.71 651.19 238.35 651.79 244.99 652.38 251.62 652.98 258.26 653.54 264.53 653.54 264.63 652.81 265.38 652.37 266.6 652.63 267.85 652.51 268.78 652 269.37 652.39 270.72 653.69 272.82 654.55 274.93 654.97 277.06 654.91 278.62 654.1 280.1 653.47 283.21 652.81 284.49 651.89 284.98 651.15 286.18 650.56 288.1 649.84 289.06 649 289.08 648.4 289.48 648.06 290.25 648.18 291.01 648.76 291.77 648.66 292.53 647.88 293.29 647.92 293.62 648.2 293.8 648.13 294.14 647.63 294.51 647.4 295.57 647.58 297.26 647.37 298.13 646.81 298.22 646.78 298.69 647.88 300.53 647.37 300.98 646.52 302.64 646.47 304.41 647.22 306.27 645.89 307.94 642.48 309.42 640.7 310.61 640.57 311.53 640.93 312.89 641.78 314.68 642.01 315.94 641.62 316.69 639.06 316.42 634.33 315.11 631.26 315.41 629.83 317.31 629.39 318.7 629.66 319.79 628.3 318.54 627.42 318 627.26 318.06 627.09 318.23 627.05 318.65 627.11 318.95 627.27 319.28 627.21 319.51 627.02 319.54 626.08 319.08 624.87 317.68 623.39 315.33 622.97 313.4 623.59 311.91 623.48 310.39 622.64 308.85 622.17 307.32 622.06 305.8 620.14 303.65 616.42 300.86 613.72 299.16 612.02 298.56 610 297.16 607.65 294.98 606.37 293.27 606.15 292.05 606.95 288.7 609.38 281.36 609.65 280.5 609.72 280.18 609.57 279.88 609.28 279.6 608.01 278.84 605.64 278.27 603.47 278 601.81 278.96 600.21 277.32 598.68 273.08 595.28 268.71 590.02 264.19 586.96 261.09 586.07 259.41 585.24 256.87 584.47 253.46 584.36 250.61 585.17 247.15 586.02 246.72 586.14 245.59 585.81 243.62 586.67 242.08 588.71 240.96 590.5 238.63 592.03 235.1 592.67 232.59 592.43 231.11 591.72 229.74 590.55 228.47 590.2 226.83 590.66 224.82 592.42 223.47 595.48 222.76 598.22 221.59 600.63 219.98 602.02 218.3 602.39 216.55 603.02 215.16 603.93 214.14 604.51 212.53 604.77 210.33 604.72 208.72 604.35 207.71 603.19 206.58 601.23 205.35 600.1 204.14 599.78 202.97 598.72 201.75 596.91 200.48 595.82 199.02 603.38 198.62 610.79 198.18 618.19 197.71 625.6 197.2 633 196.65 640.4 196.07\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-IN\",\r\n    points:\r\n      \"694.11 208.18 694.94 215.38 695.78 222.57 696.61 229.76 697.44 236.94 698.27 244.13 699.1 251.32 699.93 258.5 700.81 265.82 700.56 266.06 700.28 267.06 700.83 267.97 700.91 268.75 700.51 269.41 700.73 269.84 701.58 270.04 701.97 270.69 701.91 271.79 700.31 273.1 697.13 274.74 696.46 275.19 695.88 275.41 695.59 275.37 695.59 275.37 695.13 275.19 694.46 274.76 693.39 274.66 691.71 275.02 691.15 276.13 691.71 278 691.3 279.54 689.9 280.73 688.97 282.21 688.5 283.95 687.58 285.08 686.19 285.6 685.21 287.28 684.63 290.12 683.85 291.93 682.87 292.7 681.42 292.69 679.49 291.9 678.33 291 677.93 289.98 677.32 289.29 676.79 289.01 676.46 289.04 676.46 289.2 676.62 289.48 676.48 289.81 675.37 290.04 674.93 290.52 675.16 291.26 674.97 291.82 674.35 292.21 674.08 292.96 674.16 294.1 673.8 295.18 673.01 296.21 671.69 296.02 669.82 294.63 668.06 294.45 666.38 295.47 665.19 296.74 664.46 298.26 663.67 298.7 662.36 297.72 659.36 296.48 657.84 296.29 656.8 296.76 656.03 296.67 655.74 296.27 655.52 296.12 655.33 296.34 655.43 297.67 655.25 298.53 654.79 298.92 654.4 298.68 654.05 297.8 653.41 297.57 652.47 297.97 651.48 297.92 650.57 297.46 650.27 297.55 650.05 297.82 650.21 298.85 650.1 299.69 649.7 300.26 649.07 300.44 648.21 300.24 647.88 300.53 646.78 298.69 646.81 298.22 647.37 298.13 647.58 297.26 647.4 295.57 647.63 294.51 648.13 294.14 648.2 293.8 647.92 293.62 647.88 293.29 648.66 292.53 648.76 291.77 648.18 291.01 648.06 290.25 648.4 289.48 649 289.08 649.84 289.06 650.56 288.1 651.15 286.18 651.89 284.98 652.81 284.49 653.47 283.21 654.1 280.1 654.91 278.62 654.97 277.06 654.55 274.93 653.69 272.82 652.39 270.72 652 269.37 652.51 268.78 652.63 267.85 652.37 266.6 652.81 265.38 653.54 264.63 653.54 264.53 652.98 258.26 652.38 251.62 651.79 244.99 651.19 238.35 650.59 231.71 650 225.07 649.4 218.43 648.87 212.51 648.99 212.66 649.67 213.16 650.2 213.44 650.57 213.45 650.82 213.92 651.79 214.13 653.51 214.09 655.06 213.74 656.44 213.09 659.73 210.72 663.83 210.31 668.85 209.78 673.88 209.24 678.9 208.68 683.92 208.1 688.93 207.51 693.95 206.9\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-KS\",\r\n    points:\r\n      \"532.34 324 528.22 324.06 524.1 324.1 519.98 324.14 515.86 324.17 511.74 324.18 507.62 324.19 503.5 324.18 499.38 324.17 495.26 324.14 491.14 324.1 487.02 324.05 482.9 324 478.78 323.93 474.67 323.85 470.55 323.76 466.43 323.66 462.31 323.55 458.19 323.43 454.07 323.3 449.95 323.16 445.84 323.01 441.72 322.84 437.6 322.67 433.49 322.49 429.37 322.29 425.26 322.09 421.14 321.87 417.03 321.65 412.91 321.41 408.8 321.17 404.69 320.91 400.58 320.64 400.84 316.48 401.1 312.32 401.36 308.16 401.63 304 401.89 299.84 402.15 295.69 402.42 291.53 402.68 287.37 402.94 283.21 403.21 279.05 403.47 274.89 403.73 270.73 403.99 266.57 404.26 262.41 404.52 258.25 404.79 254.09 408.36 254.33 411.94 254.55 415.51 254.77 419.09 254.98 422.67 255.18 426.25 255.37 429.83 255.55 433.41 255.73 436.98 255.9 440.56 256.06 444.14 256.21 447.73 256.35 451.31 256.48 454.89 256.61 458.47 256.73 462.05 256.84 465.63 256.94 469.21 257.03 472.79 257.11 476.38 257.19 479.96 257.26 483.54 257.32 487.13 257.37 490.71 257.41 494.29 257.45 497.88 257.48 501.46 257.49 505.04 257.5 508.63 257.51 512.21 257.5 515.79 257.49 518.87 257.46 522.84 260.3 523.88 260.32 525.1 259.86 526.03 260.5 526.68 262.27 526.6 263.17 525.79 263.22 524.79 264.29 523.6 266.4 523.92 268.36 525.76 270.18 526.99 272.01 527.62 273.87 528.84 275.3 531.55 276.81 531.53 277.66 531.58 280.56 531.63 283.46 531.68 286.35 531.73 289.25 531.78 292.14 531.83 295.04 531.88 297.93 531.93 300.83 531.98 303.73 532.04 306.62 532.09 309.52 532.14 312.41 532.19 315.31 532.24 318.21 532.29 321.1\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-LA\",\r\n    points:\r\n      \"636.7684 471.125129 635.422288 471.815526 627.716592 470.004485 625.713323 468.273491 624.028034 467.983324 621.971768 467.883266 619.926102 470.294652 618.452798 473.466475 621.208618 474.997355 623.529866 475.66774 627.229024 474.757217 629.189896 473.136285 630.885785 473.076251 631.72313 474.757217 631.002377 475.66774 632.602873 477.308683 634.966518 477.73893 635.825062 477.428752 636.217236 475.437608 637.54215 474.086832 639.492422 474.226912 639.280436 475.037378 639.609014 475.767798 640.59475 476.978493 640.637147 478.809546 640.849133 479.239793 638.824666 480.190339 637.287766 480.570558 636.121842 481.711213 636.821397 482.281541 635.591877 482.901898 634.712135 482.741806 634.298762 482.971938 634.213967 483.622312 633.599208 484.26268 634.690936 486.013686 636.747202 487.06429 638.241704 488.455089 643.975929 490.015986 645.322041 489.8659 646.816543 491.736975 647.940069 492.33732 649 492.607476 648.989401 493.968258 647.229916 495.088902 646.827142 496.299597 646.413769 497 645.512828 496.219551 644.611887 495.669235 642.174047 496.089477 641.368499 495.359057 640.085983 493.437953 638.347697 492.307303 637.160575 491.977113 636.206637 491.256699 635.09371 491.016561 634.17157 491.156642 632.571075 490.80644 632.390887 489.745831 631.892719 488.975388 630.599604 488.114894 624.610996 486.704083 624.621595 487.444508 625.066766 487.974813 625.935909 488.294997 626.99584 488.945371 627.133631 491.06659 626.762655 491.997125 626.667261 493.287867 626.37048 494.618631 625.723923 495.689247 624.165825 496.489707 623.413274 495.949396 622.077761 493.207821 620.403071 492.417366 617.827439 492.457389 616.120951 493.187809 614.382665 496.009431 612.877563 496.539735 607.524913 495.409086 601.398514 493.568028 600.264388 488.565152 596.395641 487.804715 595.282714 486.7341 592.887271 483.67234 589.728678 483.712363 588.212977 481.8613 585.679742 482.771823 584.418425 483.712363 583.337296 485.13318 583.814264 485.833583 585.011986 486.924209 584.513819 487.494537 580.867657 488.445083 572.282219 487.854744 569.748985 487.094307 566.336008 485.413341 561.651114 484.102588 559.414661 483.93249 557.241803 484.282691 550.882219 484.592869 549.419515 485.013111 548.179396 485.663485 547.342051 484.993099 546.939277 483.782404 547.670629 483.572283 548.476176 482.831857 549.18633 481.391029 549.249926 480.530535 548.71996 479.980219 550.044874 477.708913 550.362853 476.898447 550.044874 473.086256 549.398316 471.715469 549.451313 470.915009 550.044874 468.813801 549.896483 466.902703 550.967013 464.581369 551.761961 463.360667 552.631105 460.879241 552.800693 459.288327 553.16107 458.087637 552.85369 456.816906 553.479049 455.876366 553.01268 454.585624 552.832491 452.874641 552.016345 452.234273 550.543041 449.742841 550.55364 448.632202 549.016741 446.300863 548.963744 445.490397 547.522239 444.289707 547.225458 443.509258 547.024071 440.237378 546.621298 439.286832 545.370579 437.435768 542.508767 434.764232 542.445171 431.932605 542.381575 429.100978 542.317979 426.26935 542.254383 423.437723 542.190788 420.606095 542.127192 417.774468 542.063596 414.942841 542 412.111213 545.582566 412.031167 549.165131 411.941116 552.747697 411.851064 556.330263 411.751006 559.912828 411.640943 563.495394 411.53088 567.077959 411.410811 570.660525 411.280736 574.243091 411.150661 577.825656 411.010581 581.408222 410.860495 584.990788 410.710408 588.573353 410.550316 592.155919 410.380219 595.727885 410.210121 599.62843 410 599.808618 411.090627 600.804953 411.690972 600.921545 412.861645 600.168995 414.602645 600.24319 415.783324 601.15473 416.40368 601.15473 417.114089 600.23259 417.904543 600.137197 418.715009 600.857949 419.545486 601.218326 420.536055 601.218326 421.676711 602.193462 423.117539 603.634968 423.998045 604.610104 425.078666 604.726696 425.689017 604.82209 426.259344 604.663101 427.099827 603.592571 428.380564 602.765825 429.311098 602.257058 429.6613 602.002675 430.281656 602.002675 431.592409 600.804953 433.33341 598.292917 435.4046 596.692422 437.956067 595.992868 440.987809 595.19792 442.928925 594.296979 443.789419 593.904804 445.370328 594.021397 447.691662 593.480832 449.002415 592.28311 449.302588 592.092323 450.643358 592.919069 453.024727 592.675285 454.045313 591.869737 454.875791 591.82734 455.496147 596.713621 455.286026 601.6211 455.045888 606.528579 454.795745 611.436057 454.535595 616.343536 454.255434 621.251015 453.965267 626.158494 453.665095 631.065973 453.354917 630.6526 455.966417 629.465478 459.53847 629.476077 460.448994 629.931847 461.559632 629.974245 462.2 630.578405 463.110523 631.829123 463.981024 632.973848 465.341806 634.086776 467.833237 634.415354 468.993905 635.305696 470.584819 635.729668 470.86498 636.302031 471.015066\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-MA\",\r\n    points:\r\n      \"915.41 136.63 915.36 137.84 916.13 138.81 916.75 139.86 918.43 140.7 918.13 142.97 916.98 143.71 916.69 145.09 916.14 146.74 914.91 149.42 915.89 149.86 918.95 149.8 920.44 150.21 923.51 153.7 923.19 154.23 923.23 155.02 925.24 155.56 926.62 158.3 928.31 158.88 930.59 158.88 932.9 157.26 930.26 151.88 929.39 151.3 929.19 150.89 929.73 150.51 930.45 150.39 931.38 150.55 934.2 152.44 935.74 155.55 936.48 157.59 936.45 158.37 935.8 158.4 934.68 158.88 929.46 161.57 928.5 162.88 925.97 164.72 925.65 164.26 925.55 163.14 924.75 161.01 924.17 161.07 920.79 165.88 919.15 166.58 918.01 168.02 917.53 167.53 916.53 164.93 916.79 162.44 916.33 162.61 915.67 163.66 914.86 162.86 914.13 162.51 913.41 162.17 913.21 161.36 912.9 160.14 912.17 160.09 911.68 158.62 911.36 157.67 910.16 158.02 909.18 158.31 907.6 158.77 905.96 159.25 904.76 159.6 904.68 159.37 902.76 159.86 900.84 160.35 898.92 160.83 897 161.31 895.08 161.79 893.15 162.27 891.23 162.74 889.3 163.21 889.34 163.73 888.67 163.98 888.5 163.42 887.13 163.71 885.76 164 884.39 164.29 883.02 164.58 881.65 164.87 880.28 165.16 878.91 165.45 877.54 165.73 876.98 165.31 877.03 163.37 877.08 161.43 877.13 159.49 877.18 157.55 877.23 155.61 877.27 153.67 877.31 151.73 877.35 149.79 878.93 149.45 880.51 149.11 882.09 148.77 883.67 148.42 885.25 148.07 886.83 147.72 888.41 147.37 889.99 147.02 892.27 146.5 894.55 145.97 896.83 145.44 899.1 144.9 901.37 144.36 903.64 143.82 905.91 143.27 908.18 142.72 909.4 141.75 910.56 139.61 911.45 138.97 912.78 137.52 913.52 137.08\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-MD\",\r\n    points:\r\n      \"851.83 225.27 854.65 235.47 855.59 238.87 856.53 242.27 857.47 245.67 858.41 249.07 859.36 252.46 859.4 252.45 859.44 252.44 859.48 252.43 859.52 252.42 859.56 252.41 859.6 252.4 859.64 252.39 859.68 252.38 861.4 251.99 865.17 251.12 868.94 250.24 870.02 250.67 869.66 251.19 869.47 251.73 869.78 253.62 869.68 254.63 868.63 255.17 868.07 257.88 867.33 259.51 867.15 260.47 865.6 261.06 863.1 261.99 862.65 263.12 861.25 262.99 859.28 263.48 859.35 262.07 856.98 259.5 857.5 258.36 853.05 256.99 851.22 256.4 849.95 254.97 849.16 253.82 849.18 251.42 850.21 250.77 851.709977 251.372742 852.62 250.17 846.39 243.99 846.41 242.7 846.85 238.45 847.65 235.46 848.72 234 851.04642 232.718826 848.89 229.4 847.98 229.78 847.77 230.6 845.154645 233.965708 844.29 241.68 843.6 242.82 842.18 242.28 841.98 242.38 842.96 243.62 843.65 244.74 843.44 245.85 843.78 247.09 843.93 248.25 843.88 249.3 845.48 253.74 846.48 254.82 847.46 255.85 848.502604 256.603537 847.36 257.21 848.31 259.11 849.39 260.5 850.22 261.59 850.33 262.79 849.11 262.19 847.98 261.33 845.34 260.66 842.17 260.56 834.92 259.05 833.56 259.09 833.01 257.23 833.15 256.15 834.12 253.47 835.25 251.97 835.53 250.28 834.81 247.9 833.01 247.04 831.74 246.73 829.47 245.29 826.15 244.63 825.58 244.07 825.49 243.35 825.69 242.27 824.55 241.49 822.08 241 820.94 240.4 820.7 240.27 820.4 239.29 819.98 238.72 819.43 238.55 819.25 238.14 819.43 237.49 818.99 236.92 817.93 236.43 817.49 235.9 817.67 235.32 817.15 235.17 815.94 235.46 814.64 235.21 813.25 234.43 811.81 234.54 809.58 236.04 808.26 236.56 807.77 237.25 807.67 238.3 807.17 238.91 805.83 239.18 805.61 239.19 804.02 239.16 802.82 238.75 802.57 238.53 802.59 237.98 802.34 237.78 802 237.8 801.75 238.16 801.61 239.15 799.44 242.2 798.07 241.93 797.59 242.04 794.56 246.32 793.54 247.1 791.66 249.13 791.19 246.33 790.72 243.52 790.25 240.71 789.78 237.9 793.68 237.18 797.57 236.45 801.46 235.71 805.35 234.96 809.24 234.2 813.13 233.43 817.01 232.65 820.89 231.86 824.77 231.06 828.65 230.25 832.53 229.43 836.4 228.6 840.27 227.76 844.14 226.91 848.01 226.05\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-ME\",\r\n    points:\r\n      \"914.07 33.96 914.28 34.39 915.19 34.99 916.32 35.24 917.11 35.2 917.97 34.93 919.98 33.13 922.51 31.58 923.82 30.46 923.9 29.76 924.52 29.33 925.68 29.17 928.19 30.06 931.29 31.61 933.74 32.83 934.81 35.96 935.92 39.28 937.09 42.78 937.92 45.28 939.07 48.71 939.99 51.43 941.19 54.98 941.83 56.88 942.27 57.35 942.35 58.15 942.4 58.55 942.51 58.84 942.74 59.18 942.89 59.71 942.8 60.26 942.85 60.85 943.1 61.76 943.54 62.23 944.08 62.41 944.45 62.29 945.03 62.46 945.83 62.84 946.92 63.04 947.94 62.9 948.57 62.56 949.48 62.62 950.02 63.33 950.11 64.13 949.77 64.63 949.37 65.06 949.47 65.66 949.91 66.18 950.43 66.59 951.12 67.39 951.22 68.24 951.09 69.03 951.16 69.78 951.65 70.28 952.7 70.82 953.45 71.43 954.37 71.6 954.64 71.18 954.81 70.68 955.03 70.28 955.63 70.28 956.34 70.3 957.12 70.34 957.25 71.02 958.03 71.97 959.05 73.96 958.86 75.08 959.38 76.31 960.9 76.21 961.37 76.48 961.59 76.92 959.56 81.17 956.79 81.57 955.65 82.89 954.24 83.62 954.05 85.28 953.33 85.85 952.18 86.12 951.08 86.02 950.4 86.46 941.31 93.93 941.92 95.52 941.95 96.57 941.26 96.5 940.39 95.84 938.48 95.69 937.14 96.17 937.14 95.18 936.65 93.64 935.64 93.24 934.23 94.87 934.87 96.68 934.37 100.94 934.78 102.56 934.11 104.16 933.07 105.67 919.71 114.76 918.89 117.19 919.48 117.38 920.22 117.86 918.68 121.7 916.98 125.24 916.39 130.38 915.78 131.14 915.36 132.17 913.53 130.52 912.82 128.97 910.86 127.46 909.93 126.3 909.33 124.88 908.96 123.27 908.17 120.92 907.38 118.57 906.59 116.22 905.8 113.87 905.01 111.52 904.22 109.17 903.43 106.82 902.64 104.47 901.85 102.12 901.06 99.77 900.27 97.42 899.48 95.07 898.69 92.72 897.9 90.37 897.11 88.02 896.4 85.92 896.68 85.49 897.43 84.62 898.06 84.54 898.83 85.31 899.43 85.8 899.88 85.48 900.06 84.5 899.71 83.31 900.06 82.31 900.72 81.98 901.37 81.82 901.57 81.32 901.37 80.75 900.87 79.88 900.63 78.73 901.66 76.28 903.23 74.36 903.72 73.49 903.52 72.06 904.23 70.31 904.55 69.33 904.48 68.58 903.94 67.79 903.48 66.11 903.28 64 903.11 61.69 903.56 59.43 904.61 56.8 904.22 53.87 903.8 50.77 904.96 47.29 906.26 43.34 907 41.09 908.31 37.01 909.23 34.1 909.73 32.74 910.2 31.16 911.73 31.12 913.25 31.08 913.63 33.05\",\r\n  },\r\n  {\r\n    tag: \"path\",\r\n    id: \"US-MI\",\r\n    points:\r\n      \"M687.65,100.86 L688.16,101.09 L688.54,101.55 L689.52,102.82 L690.04,103.7 L690.46,105.05 L690.69,105.49 L690.77,106.3 L690.3,106.92 L690.21,107.37 L690.59,107.76 L692.43,107.64 L693.32,107.96 L693.7,108.4 L693.56,108.96 L693.75,109.51 L694.28,110.05 L695.86,110.76 L696.28,111.14 L696.24,111.61 L695.84,111.96 L695.09,112.2 L689.37,112.08 L687.7,112.15 L687.5,112.49 L687.35,112.56 L687.07,112.51 L686.59,112.55 L686.32,112.38 L686.05,111.84 L685.51,111.54 L684.72,111.48 L684.11,111.99 L683.54,113.77 L683.7,114.07 L683.71,115.17 L683.95,115.44 L683.97,115.69 L683.78,115.92 L683.32,115.95 L682.59,115.78 L679.64,113.55 L677.49,112.52 L674.91,111.88 L672.9,111.65 L671.46,111.84 L670.35,112.63 L669.57,114.02 L668.21,114.92 L666.27,115.32 L665.24,115.78 L665.13,116.31 L664.42,116.4 L663.12,116.05 L661.81,116.05 L660.5,116.41 L659.58,117.02 L658.72,118.71 L658.6,119.51 L657.92,120.26 L656.04,121.53 L655.98,121.93 L655.06,123.24 L654.8,123.94 L654.87,124.59 L654.51,124.59 L653.73,123.93 L653.6,122.95 L654.13,121.65 L654.65,120.99 L655.16,120.98 L655.42,120.4 L655.42,119.26 L655.18,118.71 L654.21,119.04 L653.74,119.55 L653.09,119.71 L652.27,119.53 L651.63,120.22 L651.17,121.77 L650.54,122.82 L649.74,123.37 L649.12,122.92 L648.68,121.47 L648.56,120.3 L648.76,118.86 L648.56,118.6 L648.25,119.08 L647.83,120.31 L647.37,122.94 L646.99,123.82 L646.41,124.23 L645.58,125.87 L644.5,128.75 L643.24,131.56 L641.79,134.3 L640.9,135.78 L640.58,136.01 L640.47,136.49 L640.51,137.58 L639.73,137.35 L639.01,136.53 L638.54,135.67 L638.42,134.75 L639.13,132.38 L639.18,132 L639.06,131.8 L638.53,131.59 L637.43,132.1 L636.29,132.28 L635.91,132.16 L635.73,131.78 L635.69,131.17 L635.86,130.42 L636.43,129.01 L636.32,127.73 L636.57,126.97 L636.14,125.64 L636.16,124.99 L635.61,124.32 L634.23,123.5 L631.1,122.52 L631.28,121.1 L631.11,120.51 L630.29,119.68 L627.04,118.9 L624.85,118.61 L622.72,118.77 L621.17,118.51 L619.45,118.52 L618.3,117.98 L617.16,117.44 L616.02,116.89 L614.88,116.34 L612.9,115.95 L610.92,115.55 L608.94,115.15 L606.96,114.75 L604.98,114.35 L603.01,113.94 L601.04,113.53 L599.07,113.12 L598.58,112.21 L598.09,111.3 L597.6,110.39 L597.11,109.48 L596.2,109.14 L595.72,108.96 L595.34,108.49 L594.56,108.75 L594.2,107.96 L594.27,107.78 L595.28,107.5 L598.1,106.15 L600.48,104.57 L602.41,102.76 L604.89,101.56 L607.91,100.97 L610.05,100.22 L611.3,99.31 L612.94,97.6 L613.89,97.06 L615.12,96.82 L616.01,96.14 L616.55,95.01 L617.64,93.69 L619.27,92.18 L626.030967,86.5562147 L626.300967,86.7962147 L626.430967,87.2762147 L626.420967,87.9962147 L626.900967,88.5362147 L627.870967,88.8962147 L628.340967,89.4462147 L625.93705,93.7217927 L622.81,95.76 L623.44,96.22 L623.69,97.32 L623.56,99.06 L623.62,100.17 L623.87,100.66 L624.1,100.93 L624.41,100.63 L624.78,99.99 L624.9,99.61 L624.97,99.22 L627.38,97.27 L627.87,97.14 L628.75,97.51 L632.67,97.79 L634.24,98.1 L635.94,98.95 L636.52,99.28 L638.79,102.3 L639.8,103.47 L640.39,103.76 L640.75,104.22 L641.12,105.32 L641.46,105.63 L644.37,105.59 L645.66,105.26 L646.41,104.72 L647.32,104.93 L648.4,105.88 L649.39,106.08 L650.29,105.52 L651.18,105.45 L652.06,105.85 L652.48,106.17 L652.73,106.13 L654.21,104.36 L656.04,102.74 L658.51,100.93 L659.96,100.08 L660.4,100.2 L662.77,99.42 L664.95,99.13 L667.88,99.11 L670.52,98.44 L672.87,97.13 L674.98,96.3 L676.86,95.95 L677.61,96.15 L677.23,96.9 L677.13,98.12 L677.3,99.81 L677.27,100.89 L677.04,101.37 L677.06,101.8 L677.33,102.18 L679.21,102.22 L680.25,102.65 L681.37,102.54 L682.56,101.89 L683.54,101.96 L684.32,102.75 L685.31,102.78 L686.17,102.03 L686.76,101.36 L687.3,101.03 L687.65,100.86 Z M683.4,117.5 L684.57,117.77 L686.73,118.89 L688.73,119.45 L690.55,119.45 L691.92,119.76 L692.84,120.39 L693.54,121.14 L694.03,122.01 L694.96,122.41 L696.33,122.35 L697.44,122.6 L698.3,123.16 L702.83,124.29 L704.75,124.94 L705.86,125.68 L706.22,126.21 L706.21,126.78 L706.39,127.36 L707.29,128.42 L707.58,128.48 L707.83,129.02 L708.04,130.03 L708.35,130.68 L708.77,130.97 L708.57,131.14 L707.16,130.74 L706.43,131.02 L706.19,131.83 L706.24,132.56 L706.57,133.2 L708.56,135 L709.27,136.8 L709.67,139.04 L709.58,139.95 L709.67,141.91 L709.95,144.92 L710.06,145.95 L709.63,147.03 L708.29,148.68 L708.23,148.41 L707.85,148.39 L707.48,148.66 L707.09,149.97 L706.92,152.28 L706.51,153.58 L705.85,153.87 L705.48,154.25 L705.4,154.72 L704.7,155.13 L703.38,155.47 L702.55,156.28 L702.13,158.3 L702.28,159.22 L702.12,160.41 L702.27,161.39 L702.74,162.16 L703.94,162.83 L705.86,163.4 L706.96,163.38 L707.66,162.94 L708.25,161.49 L708.93,160.86 L709.82,160.51 L710.08,159.85 L711.22,156.97 L711.14,156.37 L710.56,156.22 L710.62,156.04 L711.31,155.83 L711.88,155.38 L712.32,154.69 L713.17,154.1 L715.3,153.09 L716.38,152.12 L717.12,151.88 L718.28,152.15 L719.87,152.92 L721.22,154.18 L722.34,155.93 L724.13,160.62 L726.59,168.26 L728.13,172.51 L728.75,173.37 L729.06,173.8 L728.83,180.1 L728.28,182.77 L726.87,184.48 L725.46,186.14 L723.79,188.82 L721.74,190.32 L720.7,191.18 L720.52,191.66 L720.23,191.56 L719.81,192.94 L719.52,194.81 L719.5,196.23 L719.8,196.96 L719.4,197.51 L718.69,198.54 L718.58,198.89 L718.71,199.42 L718.57,199.71 L718.16,199.76 L717.89,200.06 L717.27,201.12 L716.31,203.81 L716.16,204.3 L716.01,204.46 L710.54,205.42 L705.06,206.36 L699.58,207.28 L694.1,208.18 L693.93,206.89 L688.92,207.5 L683.9,208.09 L678.88,208.67 L673.86,209.23 L668.84,209.77 L663.82,210.3 L659.72,210.72 L660.72,209.99 L662.34,208.37 L663.19,206.99 L663.96,205.2 L664.65,203.01 L666.18,199.68 L666.88,197.69 L667.49,195.2 L667.87,192.62 L668.03,189.94 L667.94,187.19 L667.61,184.37 L666.86,181.57 L665.7,178.8 L665.08,177.38 L664.86,177.01 L662.93,173.51 L660.67,168.58 L660.65,168.14 L661.94,164.92 L661.94,164.51 L661.51,162.06 L661.04,160.86 L660.05,159.28 L660.03,158.86 L661.47,156.56 L662.3,154.84 L663,152.78 L663.34,150.43 L663.33,147.78 L663.13,146.04 L662.75,145.2 L662.71,144.52 L663,144.01 L664.7,143.21 L665.18,142.11 L665.11,140.28 L665.37,139.34 L665.97,139.29 L666.48,138.86 L666.9,138.04 L667.55,137.75 L668.42,137.98 L669.46,136.73 L670.66,133.98 L672.17,133.06 L672.11,133.92 L672.41,134.82 L672.35,135.73 L672.12,136.99 L672.39,137.34 L671.97,139.37 L672.05,140.35 L672.53,141.05 L673.77,141.62 L674.62,139.98 L675.2,137.46 L675.64,135.53 L675.64,134.51 L675.14,131.92 L675.06,130.85 L675.22,130.08 L676,129.14 L677.41,128.03 L678.85,127.36 L680.32,127.12 L681.32,126.74 L681.85,126.23 L681.6,125.9 L680.57,125.76 L679.75,125.27 L679.12,124.44 L678.82,123.43 L678.85,122.25 L679.34,121.04 L680.3,119.79 L680.54,118.93 L680.07,118.45 L680.51,118.21 L681.86,118.2 L682.77,117.94 L683.24,117.43 L683.4,117.5 Z\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-MN\",\r\n    points:\r\n      \"546.97 64.29 548.76 63.96 550.3 63.99 551.85 64.06 552.69 64.21 555.11 65.12 556.7 65.88 559 67.3 560.27 67.92 560.93 69.46 561.71 71.45 562.71 71.41 563.41 70.2 565.31 69.91 567.85 70.63 570.16 72.88 573.44 74.83 575.44 75.78 577.42 75.68 579.88 74.51 582.44 72.36 584.34 71.91 585.49 72.04 586.23 73.57 587.06 74.12 589.12 73.82 593.46 73.86 596.87 73.21 597.71 74.06 598.5 75.43 599.93 75.78 601.8 75.2 604.81 75.3 604.41 75.56 603.97 75.54 603.42 75.92 602.75 76.69 601.17 77.83 598.67 79.35 595.76 80.77 589.83 83.36 586.18 85.88 584.58 87.36 578.4 94.65 574.61 98.54 568.4 104.02 567.82 104.71 567.8 105.32 567.52 105.32 566.51 106.62 566.09 107.45 565.05 107.72 565.18 110.95 565.31 114.18 565.44 117.41 565.57 120.64 565.07 120.99 564.45 121.77 563.56 121.99 559.45 124.81 558.79 125.6 558.09 127.4 556.78 129.45 556.47 130.53 556.58 131.96 558.74 133.04 559.57 134.12 560 135.46 559.99 136.64 559 138.98 558.84 139.91 559.05 142.72 558.54 143.62 559.06 145.88 559.12 146.67 558.87 149.18 558.66 149.92 559.13 151.2 559.18 151.34 561.26 153.07 563 154 564.54 154.26 565.76 154.98 566.67 156.16 567.87 156.91 569.35 157.23 570.89 158.18 573.29 160.56 574.53 162.62 576.6 164.04 579.92 165.5 582.12 166.81 583.19 167.97 584.02 171.03 584.9 177.58 579.55 177.86 574.28 178.11 569 178.34 563.72 178.55 558.44 178.74 553.16 178.91 547.88 179.06 542.6 179.2 537.32 179.32 532.04 179.42 526.76 179.5 521.48 179.56 516.2 179.6 510.92 179.62 505.64 179.62 500.36 179.6 500.38 174.59 500.4 169.58 500.43 164.57 500.45 159.55 500.47 154.53 500.5 149.51 500.53 144.49 500.55 139.47 499.36 137.8 496.75 136.43 496.1 135.62 494.9 133.6 494.43 132.73 494.35 132.06 494.94 131.32 497.33 129.18 498.09 128.19 498.47 127.22 499.03 124.99 498.82 123.27 498.99 120.6 498.52 118.59 498.42 117.59 498.13 116.35 496.39 113.07 495.99 110.43 495.56 109.13 495.45 105.79 495.51 104.85 495.88 103.04 495.15 101.81 495.05 100.8 494.78 92.83 494.56 91.69 494.66 87.99 493.37 84.08 492.75 82.75 492.45 81.14 492.48 80.37 491.43 77.7 490.75 74.76 490.85 72.22 490.65 70.3 490.75 68.81 490.58 66.56 490.82 65.29 490.86 63.31 489.49 56.24 491.31 56.26 497.66 56.32 504.01 56.35 510.35 56.35 516.7 56.32 520.21 56.32 520.22 51.54 520.23 47.77 523.43 48.19 524.39 48.87 524.7 49.19 524.62 50.23 524.92 53.38 525.54 56 526.93 59.14 526.93 59.15 527.06 60.38 527.52 61.15 528.34 61.86 531.44 62.68 536.83 63.59 539.9 64.69 540.65 65.99 542.1 66.48 544.24 66.17 545.73 65.58\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-MO\",\r\n    points:\r\n      \"585.17 247.15 584.36 250.61 584.47 253.46 585.24 256.87 586.07 259.41 586.96 261.09 590.02 264.19 595.28 268.71 598.68 273.08 600.21 277.32 601.81 278.96 603.47 278 605.64 278.27 608.01 278.84 609.28 279.6 609.57 279.88 609.72 280.18 609.65 280.5 609.38 281.36 606.95 288.7 606.15 292.05 606.37 293.27 607.65 294.98 610 297.16 612.02 298.56 613.72 299.16 616.42 300.86 620.14 303.65 622.06 305.8 622.17 307.32 622.64 308.85 623.48 310.39 623.59 311.91 622.97 313.4 623.39 315.33 624.87 317.68 626.08 319.08 627.02 319.54 627.21 319.51 627.27 319.28 627.11 318.95 627.05 318.65 627.09 318.23 627.26 318.06 627.42 318 628.3 318.54 629.66 319.79 630.36 321.53 630.41 323.77 630.09 325.92 629.4 327.98 628.5 328.74 628.07 328.65 627.14 328.36 626.78 328.49 625.99 329.07 625.18 331.09 625.16 331.14 624.82 331.36 624.56 331.17 624.52 331.07 624.31 330.51 623.86 329.96 623.57 329.97 623.32 330.04 623.24 330.32 623.2 330.94 623.27 331.2 623.68 332.83 623.5 334.04 622.66 334.57 622.57 335.24 623.13 335.97 623.16 336.31 622.98 336.61 622.38 336.74 621.93 336.94 621.6 337.57 622.41 338.69 622.37 340.1 621.48 341.82 621.39 342.47 618.09 342.74 615.13 342.99 612.17 343.23 609.21 343.46 610.47 341.01 611.32 340.1 611.92 339.16 613.07 338.25 614.28 336.37 614.38 335.52 614.19 334.7 613.34 333.62 612.43 331.94 607.44 332.25 602.45 332.55 597.46 332.83 592.47 333.1 587.47 333.35 582.48 333.59 577.48 333.81 572.49 334.02 567.49 334.21 562.5 334.38 557.5 334.54 552.5 334.69 547.5 334.82 542.5 334.93 537.5 335.03 532.51 335.11 532.46 332.33 532.42 329.56 532.38 326.78 532.34 324 532.29 321.1 532.24 318.21 532.19 315.31 532.14 312.41 532.09 309.52 532.04 306.62 531.98 303.73 531.93 300.83 531.88 297.93 531.83 295.04 531.78 292.14 531.73 289.25 531.68 286.35 531.63 283.46 531.58 280.56 531.53 277.66 531.55 276.81 528.84 275.3 527.62 273.87 526.99 272.01 525.76 270.18 523.92 268.36 523.6 266.4 524.79 264.29 525.79 263.22 526.6 263.17 526.68 262.27 526.03 260.5 525.1 259.86 523.88 260.32 522.84 260.3 518.87 257.46 518.6 257.26 517.36 255.37 516.85 253.1 515.86 251.63 514.39 250.95 513.46 249.46 513.06 247.15 512.12 244.83 511.69 244.14 515.92 244.1 520.19 244.04 524.47 243.97 528.74 243.89 533.02 243.79 537.29 243.68 541.56 243.56 545.84 243.43 550.11 243.29 554.38 243.13 558.65 242.96 562.92 242.78 567.19 242.59 571.46 242.39 575.73 242.17 580 241.95 580.91 243.52 581.86 243.95 582.07 244.47 583.32 245.25 583.62 246.05\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-MS\",\r\n    points:\r\n      \"650.91 362.55 652.65 363.87 652.63 364.41 652.64 364.77 652.62 365.82 652.53 369.96 652.44 374.1 652.35 378.24 652.25 382.38 652.15 386.52 652.05 390.66 651.95 394.8 651.84 398.94 651.73 403.09 651.62 407.24 651.51 411.39 651.4 415.54 651.28 419.69 651.16 423.84 651.04 427.99 650.92 432.15 651.47 436.32 652.02 440.49 652.57 444.66 653.12 448.83 653.67 453 654.22 457.18 654.77 461.36 655.41 465.94 649.77 466.75 647.2 465.8 646.15 465.66 645.53 465.74 642.73 467.01 639.5 468.06 638.71 467.86 637.6 467.9 635.41 470.81 633.95 471.6 633.47 471.45 632.93 471.3 632.53 471.02 631.69 469.43 631.38 468.27 630.33 465.78 629.25 464.42 628.07 463.55 627.5 462.64 627.46 462 627.03 460.89 627.02 459.98 628.14 456.41 628.53 453.8 623.9 454.11 619.27 454.41 614.64 454.7 610.01 454.98 605.38 455.24 600.75 455.49 596.12 455.73 591.51 455.94 591.55 455.32 592.31 454.49 592.54 453.47 591.76 451.09 591.94 449.75 593.07 449.45 593.58 448.14 593.47 445.82 593.84 444.24 594.69 443.38 595.44 441.44 596.1 438.41 597.61 435.86 599.98 433.79 601.11 432.05 601.11 430.74 601.35 430.12 601.83 429.77 602.61 428.84 603.62 427.56 603.77 426.72 603.68 426.15 603.57 425.54 602.65 424.46 601.29 423.58 600.37 422.14 600.37 421 600.03 420.01 599.35 419.18 599.44 418.37 600.31 417.58 600.31 416.87 599.45 416.25 599.38 415.07 600.09 413.33 599.98 412.16 599.04 411.56 598.87 410.47 598.79 409.92 599.44 405.92 599.22 405.42 598.29 404.27 598.12 402.83 598.54 401.04 598.22 399.68 597.47 399.22 597.26 398.69 597 397.89 597.74 397.11 597.75 396.42 597.03 395.83 597.42 394.91 598.92 393.67 599.32 392.99 599.74 392.28 599.92 390.62 599.65 389.66 599.24 389.03 599.4 388.69 599.7 388.37 601.52 387.67 602.02 387.22 602.1 386.7 601.45 385.46 601.94 384.09 603.57 382.58 604.41 381.28 604.45 380.2 605.22 379.37 606.71 378.79 607.54 376.74 607.7 373.22 608.06 371.7 608.82 371.43 609.2 370.92 609.27 369.91 610.15 368.82 611.84 367.65 612.47 366.58 612.23 366.04 612.18 365.35 616.84 365.06 621.7 364.74 626.55 364.41 631.4 364.06 636.25 363.7 641.1 363.32 645.95 362.93\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-MT\",\r\n    points:\r\n      \"382.59 119.48 382.16 124.67 381.72 129.85 381.29 135.04 380.86 140.22 380.85 140.29 380.84 140.36 380.83 140.43 380.82 140.5 380.7 140.49 380.57 140.47 380.45 140.46 380.32 140.45 376.86 140.14 373.39 139.82 369.93 139.49 366.47 139.15 363.01 138.81 359.55 138.46 356.09 138.09 352.63 137.73 349.17 137.35 345.72 136.96 342.26 136.57 338.8 136.16 335.35 135.75 331.9 135.33 328.44 134.9 324.99 134.47 321.54 134.02 318.1 133.57 314.65 133.11 311.2 132.64 307.76 132.16 304.31 131.67 300.87 131.18 297.43 130.68 293.99 130.16 290.55 129.64 287.11 129.12 283.67 128.58 280.24 128.04 276.8 127.48 273.37 126.92 269.94 126.35 269.48 129.12 269.01 131.89 268.54 134.66 268.08 137.43 267.14 136.67 266.56 135.88 266.12 135.02 265.41 132.7 264.94 131.81 264.49 131.25 263.95 131.12 263.22 131.28 262.63 131.69 262.3 132.54 261.62 133.49 261.51 134.37 261.66 134.85 261.54 135.07 261.18 135.21 258.73 134.45 256.48 134.51 255.05 133.91 252.15 133.57 249.73 132.84 248.86 132.83 248.23 133.19 247.33 134.24 247.11 134.42 246.82 134.41 242.92 133.03 241.86 132.82 240.6 133.37 240.13 133.85 239.92 134.55 239.63 134.7 239.28 134.6 238.48 133.97 237.69 133.02 237.33 132.37 237.47 131.06 236.99 129.46 237.11 128.12 236.84 126.93 236.31 125.68 235.72 124.82 235.03 124.43 233.65 124.33 233.39 124.16 232.21 122.42 231.89 121.69 231.87 121.08 232.63 119.77 232.64 118.97 232.45 117.94 232.1 117.04 231.4 116.19 230.93 114.54 229.94 112.16 229.88 110.45 229.62 108.99 229.73 107.61 229.38 106.68 229.63 105.64 229.6 105.33 229.47 105.17 228.66 104.4 227.79 103.13 227.3 102.79 227.08 102.73 226.89 102.97 226.71 103.44 224.66 104.84 223.05 105.36 222.18 106.02 221.46 106.29 221.12 106.26 220.69 105.91 219.42 104.41 218.29 103.62 218.21 103.34 218.49 102.35 219.3 101.31 219.15 99.08 219.47 98.39 220.04 97.96 221.54 97.46 221.75 97.12 221.86 95.06 221.27 94.15 221.15 93.69 221.71 92.1 221.6 90.97 222.38 90.19 222.74 88.63 223.54 87.13 224.53 84.82 224.64 83.77 225.5 82.78 225.93 81.71 226.12 80.92 226.12 80.42 225.94 80.19 225.49 80.1 223.31 80.11 222.66 79.91 222.12 79.57 221.85 79.12 221.94 78.2 221.6 77.51 221.37 77.36 220.35 77.52 220.16 77.46 220.08 77.27 219.86 76.43 218.65 74.61 218.28 72.74 217.12 70.93 216.16 68.58 214.16 64.77 213.66 63.98 211.86 62.42 210.6 60.46 209.23 58.95 209.11 58.71 209.12 58.59 209.24 58.51 209.77 58.31 210.01 57.73 209.66 56.39 210.22 55.27 210.18 53.53 210.07 52.94 209.26 51.15 208.83 49.52 207.96 47.9 206.86 45.34 208.08 39.9 209.31 34.45 210.53 29 211.75 23.56 214.43 24.16 220.63 25.52 226.83 26.85 233.04 28.16 239.26 29.43 240.66 29.72 245.48 30.68 251.71 31.89 257.94 33.08 264.18 34.24 270.42 35.36 276.67 36.46 282.93 37.53 289.19 38.57 295.45 39.58 300.18 40.33 301.72 40.56 307.99 41.52 314.27 42.44 320.56 43.33 326.84 44.19 333.13 45.03 339.43 45.83 345.73 46.61 352.03 47.35 358.33 48.07 364.64 48.75 370.95 49.41 377.27 50.04 383.58 50.63 388.3 51.06 387.95 55.34 387.59 59.63 387.23 63.92 386.87 68.21 386.51 72.5 386.15 76.78 385.8 81.06 385.44 85.34 385.08 89.61 384.72 93.88 384.37 98.15 384.01 102.42 383.66 106.69 383.3 110.95 382.95 115.22\",\r\n  },\r\n  {\r\n    tag: \"path\",\r\n    id: \"US-NC\",\r\n    points:\r\n      \"M864.2,294.73 L864.12,296.52 L864.59,297.43 L865.75,298.22 L867.34,300.49 L866.17,302.1 L869.31,317.38 L850.12,321.13 L842.98,350.88 L832.67,361.29 L829.96,362.75 L826.82,360.61 L823.88,358.58 L820.95,356.55 L818.02,354.51 L815.1,352.47 L812.19,350.42 L809.28,348.37 L806.38,346.31 L803.81,346.68 L801.24,347.05 L798.67,347.42 L796.1,347.78 L793.53,348.14 L790.96,348.5 L788.39,348.85 L785.82,349.2 L785.43,347.49 L785.16,346.28 L783.21,344.46 L782.07,343.39 L780.23,344.78 L780.04,344.28 L779.96,343.34 L779.73,343.05 L779.14,342.92 L776.26,343.27 L773.38,343.61 L770.5,343.94 L767.62,344.27 L764.74,344.59 L761.86,344.91 L758.98,345.23 L756.1,345.54 L755.41,345.44 L754.23,346.36 L751,347.96 L749.47,349.18 L748.85,349.21 L746.1,350.57 L743.34,351.92 L743.01,351.97 L737.53,352.82 L732.05,353.65 L726.57,354.46 L721.08,355.25 L721.16,350.46 L721.49,349.32 L721.98,349.01 L723.86,348.75 L724.99,348.05 L725.67,345.08 L727.76,342.54 L728.76,341.83 L730.31,341.18 L734.05,340.12 L737.83,337.39 L740.48,334.93 L742.73,334.03 L743.35,333.17 L743.73,332.12 L743.87,330.74 L744.08,330.43 L745.43,330.33 L746.28,329.03 L747.18,328.22 L748.11,327.7 L748.71,327.6 L748.99,327.91 L749.3,328.87 L749.56,329.16 L749.98,329.13 L750.52,328.82 L751.19,328.07 L752.86,325.8 L754.05,324.84 L755.99,324.1 L757.61,324.91 L758.43,324.42 L760.35,319.99 L761.25,319.1 L761.97,318.69 L763.28,318.42 L763.12,317.31 L763.31,315.57 L763.19,314.42 L763.73,312.61 L764.09,312.9 L770.5,311.93 L776.91,310.93 L783.32,309.91 L789.72,308.86 L796.12,307.79 L802.52,306.69 L808.91,305.56 L815.3,304.41 L821.68,303.23 L828.06,302.03 L834.43,300.8 L840.8,299.55 L847.16,298.27 L853.52,296.97 L859.87,295.64 L864.2,294.73 Z M865.55,294.44 L866.1,294.31 L869.42,300.89 L874.65,307.68 L875.38,308.89 L874.3,307.93 L870.55,303.5 L868.29,300.2 L865.55,294.44 Z M878.1,321.49 L875.85,322.63 L875.6,322.49 L878.05,320.63 L877.91,316.07 L877.57,314.04 L876.35,310.59 L876.19,309.85 L876.9,310.89 L878.05,314.1 L878.48,316.64 L878.53,320.47 L878.1,321.49 Z\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-ND\",\r\n    points:\r\n      \"499 124.98 495.36 124.95 491.72 124.91 488.08 124.87 484.43 124.81 480.79 124.75 477.15 124.67 473.51 124.59 469.86 124.5 466.22 124.39 462.58 124.28 458.94 124.16 455.3 124.03 451.66 123.89 448.02 123.75 444.38 123.59 440.74 123.42 437.1 123.24 433.46 123.06 429.83 122.86 426.19 122.66 422.55 122.44 418.92 122.22 415.28 121.99 411.65 121.75 408.01 121.5 404.38 121.23 400.75 120.97 397.11 120.69 393.48 120.4 389.85 120.1 386.22 119.79 382.59 119.48 382.95 115.22 383.3 110.95 383.66 106.69 384.01 102.42 384.37 98.15 384.72 93.88 385.08 89.61 385.44 85.34 385.8 81.06 386.15 76.78 386.51 72.5 386.87 68.21 387.23 63.92 387.59 59.63 387.95 55.34 388.3 51.06 389.9 51.2 396.23 51.74 402.55 52.25 408.88 52.73 415.21 53.17 421.54 53.59 427.88 53.98 434.21 54.34 440.55 54.67 446.88 54.97 453.22 55.24 459.57 55.48 465.91 55.69 472.25 55.88 478.59 56.03 484.94 56.15 489.46 56.22 490.83 63.29 490.79 65.27 490.55 66.55 490.72 68.79 490.61 70.29 490.82 72.21 490.72 74.75 491.4 77.69 492.45 80.36 492.41 81.12 492.71 82.73 493.33 84.06 494.63 87.98 494.53 91.68 494.75 92.82 495.02 100.79 495.12 101.8 495.85 103.03 495.48 104.84 495.43 105.78 495.54 109.12 495.97 110.43 496.37 113.07 498.11 116.35 498.39 117.59 498.49 118.59 498.96 120.59 498.79 123.26\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-NH\",\r\n    points:\r\n      \"915.38 132.16 915.46 135.14 915.41 136.63 913.53 137.06 912.79 137.49 911.46 138.95 910.56 139.59 909.41 141.73 908.19 142.7 905.92 143.25 903.64 143.8 901.37 144.34 899.09 144.88 896.82 145.41 894.54 145.95 892.27 146.47 889.99 147 889.52 146.3 888.27 145.16 887.91 144.64 887.79 143.98 887.81 142.13 888.03 141.49 888.13 140.39 887.62 136.23 887.5 133.78 886.72 129.44 886.74 128.11 886.92 127.24 887.03 125.07 887.76 123.12 887.97 120.91 888.42 118.91 888.28 117.84 888.36 115.43 887.77 111.33 888.06 110.58 889.99 109.47 890.53 108.88 892.28 106.64 892.79 105.77 893.04 104.95 893.07 103.76 893.23 103.39 893.11 102.76 891.63 100.38 891.34 99.44 892.22 96.04 891.39 94.42 891.52 93.93 891.87 89.35 892.73 87.03 894.82 87.14 895.83 86.8 896.4 85.91 897.11 88.02 897.9 90.37 898.69 92.73 899.48 95.08 900.27 97.43 901.05 99.78 901.84 102.13 902.63 104.48 903.43 106.84 904.21 109.19 905.01 111.53 905.8 113.88 906.59 116.23 907.38 118.58 908.17 120.92 908.96 123.27 909.33 124.88 909.94 126.3 910.87 127.46 912.84 128.97 913.55 130.51\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-NJ\",\r\n    points:\r\n      \"876.34 190.44 876.48 192.19 875.71 196 875.22 196.96 874.59 197.86 874.06 198.31 873.63 198.99 873.19 200.01 872.99 201.88 873.75 203.35 877.05 203.15 877.78 202.46 878.49 203.47 879.12 204.96 879.3 206.7 879.19 208.54 879.31 210.76 878.7 213.13 878.54 214.04 878.69 218.85 877.94 221.61 877.11 223.6 875.76 223.63 876.37 224.9 876.19 225.68 876.24 227.21 875.71 228.36 874.97 228.44 874.1 229.35 873.81 229.96 874.01 230.94 873.52 231.96 872.08 237.01 869.72 236.53 869.61 234.31 868.07 233.7 866.69 233.51 865.26 233.91 863.28 232.63 860.94 231.9 857.32 229.3 857.2 228.38 856.78 226.88 857.1 224.29 857.55 222.42 858.5 221.29 861.62 219.64 862.14 218.12 862.37 216.89 863.04 215.96 864.62 214.17 867.13 211.86 861.84 207.37 860.81 207.28 859.14 204.87 857.76 204.42 857.36 204.08 856.83 202.06 856.67 200.87 856.69 200.14 857.59 199.32 857.91 198.01 857.78 197.4 856.55 195.69 856.41 195.1 857.64 193.61 859.06 190.91 859.64 188.18 859.94 187.36 860.38 186.71 861.5 185.71 863.35 186.31 865.2 186.91 867.05 187.51 868.91 188.11 870.77 188.7 872.63 189.29 874.49 189.88\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-NM\",\r\n    points:\r\n      \"382.16 330.46 381.41 330.41 380.9 336.64 380.39 342.88 379.88 349.11 379.37 355.34 378.86 361.58 378.34 367.82 377.83 374.06 377.32 380.3 376.8 386.54 376.29 392.79 375.78 399.04 375.26 405.29 374.75 411.54 374.23 417.8 373.72 424.06 373.2 430.32 368.93 429.99 364.66 429.64 360.39 429.28 356.13 428.92 351.86 428.54 347.59 428.15 343.33 427.75 339.07 427.34 334.8 426.92 330.54 426.49 326.28 426.05 322.02 425.6 317.76 425.13 313.51 424.66 309.25 424.18 305 423.68 304.88 423.68 306.34 427.93 306.34 427.93 308.5 429.34 308.36 429.28 304.19 428.77 300.02 428.25 295.85 427.71 291.69 427.17 287.52 426.62 283.36 426.05 279.19 425.48 275.04 424.9 274.69 427.39 274.34 429.88 273.99 432.38 273.64 434.87 266.9 433.96 260.18 433.03 257.77 432.68 258.91 424.81 260.05 416.96 261.18 409.12 262.32 401.29 263.45 393.45 264.58 385.62 265.72 377.8 266.85 369.98 267.98 362.16 269.11 354.35 270.24 346.54 271.37 338.73 272.5 330.92 273.63 323.12 274.76 315.32 275.89 307.52 282.56 308.47 289.23 309.39 295.91 310.29 302.59 311.15 309.27 311.99 315.96 312.8 322.65 313.59 329.35 314.34 336.04 315.07 342.75 315.77 349.45 316.44 356.16 317.09 362.86 317.7 369.58 318.29 376.29 318.85 383 319.38 382.79 322.15 382.58 324.92 382.37 327.69\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-NV\",\r\n    points:\r\n      \"188.17 292.29 186.44 300.83 184.52 310.21 184.16 310.29 182.71 312.23 181.37 313.01 180.51 312.8 179.77 312 179.13 310.6 177.96 309.63 176.24 309.1 174.65 308.97 173.19 309.25 172.2 309.88 171.42 311.34 171.44 312.02 171.94 313.64 171.53 315.91 171.27 317.76 171.54 318.86 171.39 320.04 170.7 321.83 170.62 323.39 171.09 326.29 169.14 333.96 169.11 334.1 165.21 328.47 161.59 323.19 158 317.91 154.44 312.62 150.91 307.32 147.39 302.02 143.91 296.71 140.46 291.4 137.95 287.67 135.46 283.94 132.98 280.2 130.52 276.46 128.06 272.72 125.63 268.98 123.2 265.23 120.79 261.48 117.66 256.95 114.56 252.42 111.47 247.88 108.4 243.34 105.36 238.79 102.33 234.24 99.33 229.68 96.35 225.11 97.44 221.09 98.52 217.07 99.61 213.04 100.7 209.02 101.78 205 102.87 200.97 103.96 196.95 105.04 192.92 106.13 188.9 107.22 184.87 108.31 180.84 109.4 176.82 110.49 172.79 111.57 168.76 112.66 164.73 113.75 160.7 119.74 162.31 125.73 163.89 131.72 165.44 137.72 166.97 143.73 168.48 149.75 169.96 155.77 171.42 162.095507 172.421986 168.69354 173.771366 174.070408 175.163483 179.85 175.98 185.88 177.31 191.91 178.61 197.95 179.89 206.171228 180.395809 211.590835 181.230888 209.36 186.78 208.68 190.19 207.99 193.59 207.31 197 206.63 200.41 205.94 203.81 205.26 207.22 204.57 210.62 203.89 214.03 203.21 217.43 202.52 220.84 201.84 224.24 201.16 227.64 200.47 231.05 199.79 234.45 199.11 237.85 198.42 241.26 197.74 244.66 197.06 248.06 196.37 251.46 195.69 254.87 195.01 258.27 194.32 261.67 193.64 265.07 192.96 268.47 192.27 271.88 191.59 275.28 190.91 278.68 190.23 282.08 189.54 285.49 188.86 288.89\",\r\n  },\r\n  {\r\n    tag: \"path\",\r\n    id: \"US-NY\",\r\n    points:\r\n      \"M877.37,149.78 L877.33,151.72 L877.29,153.66 L877.25,155.6 L877.2,157.54 L877.15,159.48 L877.1,161.42 L877.05,163.36 L877,165.3 L877.56,165.72 L877.95,167.8 L878.34,169.88 L878.73,171.96 L879.12,174.04 L879.51,176.12 L879.9,178.2 L880.29,180.28 L880.68,182.36 L881.38,183.07 L882.08,183.78 L881.57,184.32 L880.77,185.16 L879.92,186.06 L878.81,187.23 L879.75,188.14 L880.93,189.29 L880.4,190.02 L879.11,192.35 L878.18,193.66 L877.29,194.23 L876.55,193.89 L877.537117,191.697657 L876.331344,184.393987 L873.99,185.11 L876.33,190.34 L876.34,190.43 L874.53,189.84 L872.67,189.25 L870.81,188.66 L868.95,188.07 L867.09,187.47 L865.24,186.87 L863.39,186.27 L861.54,185.67 L861,184.94 L860.26,184.45 L857.09,184.05 L856.17,183.5 L855.27,182.68 L854.52,181.59 L853.98,180.38 L853.73,179.37 L853.68,178.2 L852.84,177.61 L852.66,176.91 L852.12,176.54 L850.03,176.14 L849.19,175.09 L847.68,174.26 L845.45,174.77 L843.22,175.28 L840.99,175.78 L838.76,176.28 L836.53,176.78 L834.29,177.28 L832.05,177.77 L829.81,178.26 L827.57,178.74 L825.33,179.22 L823.09,179.7 L820.85,180.18 L818.61,180.65 L816.37,181.12 L814.13,181.58 L811.89,182.04 L809.65,182.5 L807.41,182.95 L805.16,183.4 L802.92,183.85 L800.67,184.29 L798.42,184.73 L796.17,185.17 L793.92,185.6 L791.67,186.03 L789.42,186.46 L787.17,186.88 L784.92,187.3 L782.67,187.72 L780.42,188.13 L778.17,188.54 L775.92,188.95 L775.39,186 L774.86,183.05 L774.84,182.93 L775.7,182.22 L778.45,179.66 L779.74,177.93 L781.16,176.43 L782.7,175.15 L783.83,173.67 L784.56,171.98 L785.46,170.66 L786.54,169.7 L787.04,168.81 L786.98,167.99 L786.55,166.94 L785.75,165.67 L785.47,164.6 L785.71,163.74 L785.7,163.19 L785.43,162.96 L782.75,162.66 L782.15,158.87 L782.1,158.77 L782.22,158.7 L787.72,155.92 L791.31,154.63 L795.79,153.59 L801.33,153.33 L803.57,153.65 L805.09,154.34 L806.67,154.28 L808.31,153.48 L810.67,152.83 L813.76,152.34 L815.44,152.22 L815.71,152.47 L815.9,152.34 L816.01,151.82 L816.72,151.12 L818.84,149.84 L819.18,149.94 L819.56,149.44 L819.98,148.34 L820.92,147.02 L822.36,145.49 L823.76,144.55 L825.12,144.2 L825.97,143.71 L826.32,143.08 L826.36,142.58 L826.09,142.22 L826.07,141.76 L826.1,141.52 L825.99,141.35 L825.74,141.01 L823.61,136.94 L825.56,135.19 L824.73,133.85 L824.42,133.7 L824.59,132.15 L824.35,131.97 L823.95,131.97 L828.15,123.85 L828.63,122.99 L828.72,122.3 L828.43,121.78 L828.22,121.68 L828.28,121.52 L832.99,114.13 L835.79,110.56 L838.26,108.36 L840.24,107.12 L841.72,106.88 L842.52,106.58 L843.23,106.41 L846.82,105.54 L853.23,103.96 L859.64,102.35 L863.42,101.39 L863.9,102.8 L864.01,104.58 L864.75,106.36 L865.37,110.31 L867.1,113.05 L867.38,115.1 L867.98,117.23 L867.94,117.8 L867.49,119.23 L867.35,120.56 L867.4,121.85 L867.62,122.64 L869.17,125.99 L869.69,127.51 L869.91,128.42 L870.06,131.47 L870.23,132.31 L870.46,132.5 L870.67,132.45 L871.1,131.38 L871.36,131.17 L871.8,131.3 L873.08,132.43 L873.66,134.89 L874.08,136.68 L874.55,138.67 L875.25,141.66 L875.76,143.85 L876.23,145.84 L876.59,147.37 L876.66,148.54 L877.37,149.78 Z M903.590376,182.645394 L906.08122,181.713628 L907.330537,182.926835 L903.34,186.26 L900.19,188.67 L898.42,189.94 L897.07,190.59 L890.69,195.08 L890.14,195.28 L889.47,195.18 L883.98,198.03 L877.59,200.05 L877,198.88 L877.24,197.8 L877.65,196.73 L878.69,194.95 L880.47,193.55 L882.49,191.38 L883.01,190.94 L884.42,190.58 L885.14,190.24 L885.61,189.79 L886.16,189.59 L887.81,189.62 L889.29,189.11 L890.36,188.22 L891.57,187.7 L894.88,186.7 L901.44,181.44 L902.88,180.42 L903.590376,182.645394 Z\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-OH\",\r\n    points:\r\n      \"768.65 220.87 766.84 222.16 766.63 223.11 767.42 224.13 767.99 225.53 768.33 227.31 767.88 231.41 766.63 237.85 766.11 241.85 766.34 243.42 765.17 245.71 762.61 248.74 760.76 250.6 759.64 251.32 758.62 251.44 757.72 250.96 756.89 251.52 756.11 253.12 755.3 254.02 754.44 254.2 753.85 255.25 753.52 257.17 753.1 258.31 752.6 258.68 752.71 259.6 753.42 261.1 753.47 261.67 753.21 261.73 752.96 261.68 752.42 262.12 751.89 263.1 751.65 263.16 751.45 263.04 751.08 261.92 750.41 261.19 749.46 260.85 748.4 262.1 747.24 264.93 746.81 266.72 747.26 267.85 747.65 269.53 747.37 270.29 746.55 270.68 746.03 271.7 745.8 273.36 744.76 274.55 742.91 275.25 740.81 274.82 740.66 274.79 738 273.15 736.23 271.46 735.34 269.74 733.27 269.95 730 272.1 727.39 272.73 725.44 271.83 724.03 271.57 722.74 272.13 721.57 273.04 720.44 272.75 718.94 271.56 716.74 270.89 713.83 270.74 711.67 269.52 710.27 267.25 708.89 265.74 707.54 265 706.15 264.91 704.73 265.47 703.57 265.42 702.68 264.76 701.67 264.98 700.81 265.82 699.93 258.5 699.1 251.32 698.27 244.13 697.44 236.94 696.61 229.76 695.78 222.57 694.94 215.38 694.11 208.18 699.59 207.28 705.07 206.36 710.55 205.42 716.02 204.45 716.17 204.3 716.14 204.37 716.42 204.73 717.95 204.76 719.03 205.07 719.92 205.65 732.62 209.54 733.38 209.62 734.12 209.36 734.83 208.74 736.46 207.83 739 206.63 741.52 205.91 744 205.68 745.52 205.21 746.81 204.16 749.51 200.95 752.76 198.19 758.21 194.51 763.57 191.43 763.88 193.27 764.28 195.57 764.68 197.87 765.07 200.17 765.47 202.46 765.86 204.76 766.26 207.06 766.65 209.36 767.05 211.66 767.44 213.96 767.84 216.26 768.23 218.55\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-OK\",\r\n    points:\r\n      \"533.44885 334.659532 533.907646 337.820158 534.366442 340.980784 534.825238 344.141411 535.294229 347.302037 535.753026 350.462663 536.222017 353.62329 536.691009 356.783916 537.16 359.944542 537.149805 362.419855 537.139609 364.895167 537.129414 367.37048 537.119218 369.845792 537.109023 372.321105 537.098827 374.796417 537.088632 377.27173 537.078436 379.747043 537.068241 382.222355 537.04785 384.707896 537.037654 387.183209 537.027459 389.658521 537.017263 392.133834 537.007068 394.619375 536.996873 397.094687 536.986677 399.57 532.68419 398.475544 531.60347 397.759544 529.62555 396.951488 527.841343 395.253546 524.334102 393.166919 523.008691 392.665719 522.590677 392.727091 521.876995 393.780633 520.031615 394.619375 519.022264 394.660289 517.18708 394.363661 516.840434 394.097718 516.575352 393.463547 515.841278 393.033947 515.300918 393.37149 512.650097 394.261375 512.252474 394.885318 510.75374 394.916003 509.265202 394.465946 505.51327 395.857031 504.218445 396.941259 502.872644 397.319716 502.169156 398.373258 501.761338 398.21983 500.354363 396.910573 498.906607 396.511659 496.938882 395.202403 496.877709 394.056804 496.663604 393.913604 496.306763 393.780633 495.868358 393.882918 495.001743 394.854632 494.502165 395.100117 494.002587 395.059203 492.096035 394.384118 491.300788 393.207833 490.903165 392.839605 490.46476 392.768005 489.638927 393.105547 489.15974 394.394347 488.792703 394.731889 487.987262 394.946689 488.028043 395.591089 487.29397 397.36063 486.906542 397.708401 486.406964 397.636801 485.897191 397.196973 485.519958 396.562802 485.367026 396.020688 485.67289 394.609146 485.509763 394.138632 485.132531 393.985204 484.184352 394.639832 483.358519 394.598918 482.298191 395.243317 481.635485 395.43766 481.033953 395.263774 480.075579 394.169318 478.383131 393.453319 477.751012 392.174748 477.455344 391.80652 477.098503 391.704234 476.731466 391.73492 476.119738 392.133834 474.131622 393.760176 473.23442 394.271604 472.459565 394.363661 471.735687 394.179547 471.276891 393.749947 471.215718 392.052005 470.797704 391.530349 469.013497 390.435892 468.656656 389.423264 468.513919 388.03218 466.332089 388.195837 463.650681 387.991265 462.406834 389.177779 461.774715 389.392579 461.020251 389.126636 458.899593 387.408237 456.595418 387.67418 455.300594 387.449151 452.129803 386.119438 449.621718 385.925095 448.581781 385.669381 448.041421 385.372753 447.857902 383.480468 446.919919 381.854127 446.60386 381.40407 444.952194 380.227785 444.676917 380.176642 444.483203 380.422128 444.054993 381.659784 443.54522 381.700698 441.597886 381.271099 439.783092 381.567727 438.804328 380.913099 435.511192 377.864987 434.16539 377.05693 433.074475 376.77053 433.186625 374.049732 433.308971 371.318706 433.421121 368.597908 433.533271 365.877109 433.655617 363.156311 433.767767 360.435513 433.879917 357.714715 434.002262 354.993917 434.114413 352.273119 434.226563 349.552321 434.348908 346.831523 434.461059 344.110725 434.583404 341.389927 434.695554 338.679357 434.807704 335.958559 434.93005 333.237761 431.504373 333.084333 428.078696 332.920676 424.653019 332.74679 421.227342 332.572904 417.801665 332.38879 414.375988 332.194448 410.950311 332.000105 407.524634 331.795534 404.109153 331.580734 400.683476 331.365934 397.257799 331.140905 393.842317 330.905648 390.41664 330.660163 387.001159 330.414677 383.575482 330.158963 380.16 329.903249 380.374105 327.069937 380.58821 324.236625 380.802314 321.403312 381.016419 318.57 385.502425 318.907543 389.978235 319.245085 394.454045 319.551942 398.940051 319.858799 403.130388 320.13497 407.320725 320.400913 411.511062 320.646399 415.711594 320.891884 419.901931 321.116912 424.102464 321.341941 428.292801 321.546512 432.493333 321.751083 436.68367 321.935198 440.884203 322.109083 445.084735 322.282969 449.275072 322.436397 453.475605 322.579597 457.676137 322.712569 461.87667 322.835311 466.077202 322.947825 470.277735 323.050111 474.478267 323.142168 478.668604 323.223997 482.869137 323.295597 487.069669 323.346739 491.270202 323.397882 495.470734 323.438797 499.671267 323.469482 503.871799 323.479711 508.072332 323.489939 512.272864 323.479711 516.473397 323.469482 520.673929 323.438797 524.874462 323.397882 529.074994 323.356968 533.275527 323.295597 533.316309 326.139138 533.357091 328.982678 533.397873 331.815991\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-OR\",\r\n    points:\r\n      \"89.77 58.21 91.42 58.13 92.46 58.89 93.66 60.31 94.24 63.7 94.21 69.03 94.02 70.76 94.86 72.1 96.19 72.55 101.37 74.89 102.18 75.07 103.21 75.17 106.82 74.2 110.31 74.55 114.2 75.82 116.45 77.04 117.07 78.22 119.14 78.92 124.43 79.23 130.15 79.99 133.33 80 137.13 79.27 145.32 79.22 149.19 79.98 151.33 79.69 151.89 79.4 152.15 79.46 156.17 80.49 160.19 81.51 164.21 82.51 168.24 83.5 172.27 84.48 176.3 85.45 180.34 86.41 184.1 87.3 184.3 88.35 185.45 90.59 187.34 92.72 188.41 94.75 188.68 96.67 186.65 100.44 182.3 106.04 179.79 109.68 179.14 111.35 177 113.97 173.38 117.52 171.36 120.3 170.95 122.33 171.57 123.7 173.23 124.43 174.26 125.37 174.66 126.51 174.47 127.43 173.67 128.13 173.29 128.95 173.34 129.92 172.75 131.46 171 134.51 170.97 134.62 169.73 139.95 168.59 144.8 167.46 149.64 166.32 154.49 165.19 159.33 164.06 164.17 162.93 169.01 161.79 173.85 155.77 172.42 149.75 170.96 143.73 169.48 137.72 167.97 131.72 166.44 125.73 164.89 119.74 163.31 113.75 161.7 109.53 160.55 105.31 159.39 101.09 158.22 96.87 157.03 92.66 155.84 88.45 154.63 84.25 153.4 80.05 152.17 75.85 150.92 71.66 149.66 67.47 148.39 63.28 147.11 59.1 145.81 54.92 144.5 50.75 143.18 46.43 141.8 45.26 138.57 45.64 134.45 46 132.77 47.62 128.54 47.62 126.52 47.1 123.01 48.6 120.59 49.8 119.21 56.75 109.09 58.36 106.99 59.18 106.31 61.94 98.66 64.31 92.9 65.72 91.2 66.09 89.1 67.28 86.47 67.93 83.64 73.83 70.89 74.12 69.22 75.31 67.23 76.64 61.39 78.87 55.1 78.71 54.16 78.78 53.22 79.21 53.21 79.68 54.38 83.22 55.49 85.75 55.34 86.48 55.88 87.07 57.34 88.2 57.95\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-PA\",\r\n    points:\r\n      \"861.53 185.69 860.42 186.69 859.97 187.34 859.67 188.16 859.09 190.89 857.67 193.59 856.43 195.08 856.57 195.67 857.8 197.38 857.93 197.99 857.61 199.3 856.71 200.12 856.69 200.85 856.86 202.05 857.38 204.07 857.79 204.41 859.16 204.86 860.83 207.27 861.86 207.36 867.15 211.85 864.64 214.16 863.06 215.95 862.39 216.88 861.19 219.19 858.87 220.41 857.71 221.44 857.45 221.86 855.82 221.6 853.76 222.16 853.12 222.59 852.7 223.24 851.83 225.27 847.96 226.14 844.09 227 840.23 227.84 836.35 228.68 832.48 229.51 828.61 230.33 824.73 231.14 820.85 231.94 816.96 232.73 813.08 233.51 809.19 234.28 805.31 235.04 801.42 235.79 797.53 236.53 793.63 237.26 789.74 237.98 787.54 238.39 785.34 238.79 783.14 239.18 780.94 239.58 778.74 239.97 776.54 240.36 774.33 240.74 772.13 241.12 771.69 238.59 771.25 236.05 770.82 233.52 770.38 230.99 769.94 228.46 769.51 225.92 769.07 223.39 768.65 220.87 768.23 218.55 767.84 216.26 767.44 213.96 767.05 211.66 766.65 209.36 766.26 207.06 765.86 204.76 765.47 202.46 765.07 200.17 764.68 197.87 764.28 195.57 763.88 193.27 763.57 191.43 766.41 189.78 767.63 188.79 768.87 187.81 769.5 187.26 770.23 186.73 774.82 182.98 774.85 183.1 775.38 186.05 775.91 189 778.16 188.59 780.42 188.18 782.67 187.77 784.92 187.35 787.17 186.93 789.42 186.51 791.67 186.08 793.92 185.65 796.17 185.21 798.41 184.77 800.66 184.33 802.91 183.89 805.15 183.44 807.39 182.99 809.64 182.54 811.88 182.08 814.12 181.62 816.37 181.15 818.61 180.68 820.85 180.21 823.09 179.74 825.33 179.26 827.56 178.78 829.8 178.29 832.04 177.8 834.27 177.31 836.51 176.82 838.74 176.32 840.98 175.81 843.21 175.31 845.44 174.8 847.67 174.29 849.19 175.12 850.03 176.17 852.12 176.57 852.66 176.94 852.83 177.63 853.67 178.22 853.72 179.4 853.97 180.4 854.51 181.61 855.26 182.7 856.16 183.52 857.08 184.07 860.25 184.47 860.99 184.96\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-RI\",\r\n    points:\r\n      \"915.67 163.64 915.22 164.35 913.54034 164.907478 913.8 170 912.97 171.96 909.27 174.08 908.06 174.3 907.93 173.02 908.2 172.39 907.92 171.03 907.74 170.14 907.32 168.66 906.85 166.97 906.34 165.14 905.89 163.52 905.56 162.35 905.11 160.74 904.79 159.59 905.99 159.24 907.63 158.76 909.21 158.3 910.19 158.01 911.39 157.66 911.71 158.61 912.2 160.08 912.93 160.13 913.24 161.35 913.44 162.16 914.16 162.5 914.89 162.85\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-SC\",\r\n    points:\r\n      \"829.93 362.71 829.7 362.84 825.51 367.03 824.34 368.74 816.28 384.57 814.75 385.45 814.6 387.56 794.29 401.58 794.69 403.43 795.54 404.76 795.71 408.65 794.66 409.09 794.21 410.2 794.54 411.03 790.44 409.89 789.05 408.49 788.75 406.44 787.64 404.23 784.78 400.69 782.98 399.84 781.49 397.36 779.71 392.95 777.6 390.28 775.15 389.36 773.41 388.09 772.38 386.47 771.41 385.46 770.5 385.07 769.91 384.24 769.65 382.99 768.11 381.52 763.89 378.99 762.71 377.24 760.67 375.56 755.71 372.25 750.38 365.18 749.62 363.7 748.63 363.19 747.15 363.17 745.64 362.61 743.3 360.97 743.28 360.95 739.5 359.04 739.9 356.79 742.17 353.61 742.84 351.99 742.96 351.96 743.29 351.9 746.05 350.55 748.8 349.2 749.42 349.16 750.95 347.95 754.17 346.34 755.35 345.42 756.04 345.53 758.93 345.22 761.81 344.9 764.69 344.58 767.58 344.26 770.46 343.93 773.34 343.59 776.23 343.25 779.11 342.91 779.7 343.04 779.93 343.33 780 344.27 780.19 344.76 782.03 343.37 783.17 344.44 785.13 346.26 785.4 347.47 785.79 349.18 788.36 348.83 790.93 348.48 793.5 348.12 796.08 347.76 798.65 347.4 801.22 347.03 803.79 346.66 806.36 346.29 809.26 348.34 812.16 350.39 815.08 352.44 818 354.48 820.92 356.51 823.85 358.54 826.79 360.57\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-SD\",\r\n    points:\r\n      \"499 124.98 498.45 127.2 498.07 128.17 497.31 129.16 494.92 131.3 494.33 132.04 494.41 132.71 494.88 133.58 496.08 135.59 496.73 136.41 499.35 137.77 500.54 139.44 500.51 144.47 500.49 149.49 500.46 154.51 500.44 159.52 500.41 164.54 500.39 169.55 500.36 174.56 500.34 179.57 497.98 179.64 498.26 181.04 498.89 182.41 499 183.2 498.87 183.85 498.42 184.42 498.52 185.33 498.65 185.57 499.71 186.16 500.07 186.95 500.17 187.85 500.15 188.54 499.5 189.78 499.3 191.43 498.48 193.89 497.59 195.38 497.41 196.15 497.49 196.76 498.85 198.35 498.92 198.98 499.37 199.8 499.78 201.64 498.51 201.33 497.28 200.34 496.59 198.8 494.48 197.36 490.96 196.02 488.6 194.81 487.39 193.74 484.49 193.24 479.87 193.3 476.86 193.8 475.46 194.75 472.56 193.65 467.76 190.21 461.29 190.01 455.63 189.83 449.97 189.62 444.32 189.39 438.66 189.13 433 188.86 427.35 188.57 421.69 188.25 416.04 187.91 410.39 187.55 404.74 187.17 399.09 186.76 393.44 186.34 387.8 185.89 382.16 185.43 376.51 184.94 376.99 179.38 377.46 173.83 377.94 168.27 378.41 162.71 378.89 157.15 379.37 151.59 379.85 146.02 380.32 140.45 380.45 140.46 380.57 140.47 380.7 140.49 380.82 140.5 380.83 140.43 380.84 140.36 380.85 140.29 380.86 140.22 381.29 135.04 381.72 129.85 382.16 124.67 382.59 119.48 386.22 119.79 389.85 120.1 393.48 120.4 397.11 120.69 400.75 120.97 404.38 121.23 408.01 121.5 411.65 121.75 415.28 121.99 418.92 122.22 422.55 122.44 426.19 122.66 429.83 122.86 433.46 123.06 437.1 123.24 440.74 123.42 444.38 123.59 448.02 123.75 451.66 123.89 455.3 124.03 458.94 124.16 462.58 124.28 466.22 124.39 469.86 124.5 473.51 124.59 477.15 124.67 480.79 124.75 484.43 124.81 488.08 124.87 491.72 124.91 495.36 124.95\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-TN\",\r\n    points:\r\n      \"727.759291 318.135634 731.827849 317.583047 740.530323 316.385776 746.698783 315.495497 751.756717 314.758715 754.745038 314.308459 758.50063 313.74564 759.267902 313.141887 761.155793 312.926993 763.71 312.62 763.164833 314.472189 763.285982 315.648994 763.094164 317.439784 763.255694 318.575657 761.933161 318.841717 761.216368 319.261273 760.297661 320.172018 758.359291 324.705276 757.531445 325.206697 755.895945 324.377817 753.937384 325.135065 752.735998 326.117442 751.05002 328.430119 750.373609 329.197601 749.828443 329.514827 749.394329 329.555759 749.131841 329.258999 748.818875 328.276623 748.5261 327.959397 747.92036 328.061728 746.981462 328.593849 746.082946 329.412496 745.214718 330.75303 743.851801 330.855361 743.629696 331.172587 743.498453 332.57452 743.104721 333.659227 742.478789 334.529039 740.207262 335.46025 737.521811 337.967356 733.705645 340.760989 729.939957 341.845696 728.375127 342.510847 727.365559 343.227163 725.255563 345.826367 724.558961 348.865594 723.428245 349.58191 721.530257 349.84797 721.035569 350.165196 720.702412 351.331768 720.631742 356.233417 714.665196 356.929267 708.688555 357.60465 702.722009 358.259568 696.745368 358.894019 693.79743 359.190779 690.839396 359.497771 687.891458 359.794531 684.933425 360.081057 681.985487 360.367584 679.027453 360.643877 676.069419 360.920171 673.121481 361.186231 670.163448 361.452291 667.205414 361.708118 664.24738 361.963945 661.299442 362.20954 658.341409 362.455134 655.383375 362.690495 652.425341 362.925856 649.467308 363.150984 649.235107 363.181683 649.487499 363.447743 649.830752 363.713803 644.833392 364.13336 639.926892 364.53245 635.030488 364.921308 630.134084 365.289699 625.227585 365.647857 620.331181 365.995782 615.424682 366.32324 610.720096 366.62 610.71 366.548368 611.356123 365.545526 613.355068 363.8673 614.132435 361.77975 613.698321 359.282877 614.314157 356.959966 616.000135 354.811018 616.605876 352.754167 616.171762 350.789414 616.959225 349.100955 618.968265 347.709255 619.230752 347.177135 619.1197 346.798511 619.059126 346.368721 619.069221 346.184525 619.139891 345.795668 619.584101 345.539841 620.199937 345.314713 620.452329 344.977021 620.411947 344.465367 619.977832 343.585321 620.028311 343.165765 620.119172 342.500614 621.017687 340.740523 621.05807 339.297658 620.24032 338.151552 620.573477 337.506868 621.027783 337.302206 621.633524 337.169176 621.815246 336.862183 621.784959 336.514258 621.219601 335.767243 621.310462 335.081626 622.158499 334.539272 622.340221 333.301069 621.926298 331.633076 623.188258 331.500045 623.228641 331.602376 623.491128 331.796805 623.834381 331.571677 623.854573 331.520512 627.448634 331.254451 630.568199 331.008857 633.687763 330.773496 636.807328 330.517669 639.926892 330.261842 643.046457 330.006015 646.166021 329.739955 648.992811 329.49436 649.043289 329.453428 648.861567 327.427277 647.94286 325.165765 648.033722 325.165765 650.486971 325.196464 652.082088 325.206697 652.677733 325.861615 658.654375 325.186231 664.641112 324.490381 670.617753 323.763832 676.594395 323.016816 682.863811 322.566561 689.123131 322.085605 695.392547 321.584184 701.651867 321.052064 707.911188 320.499477 714.180604 319.926424 720.429828 319.322672 726.689149 318.698454 726.830488 318.626822 726.961732 318.55519 727.092976 318.493792 727.234315 318.42216 727.365559 318.350529 727.496803 318.278897 727.628047 318.207265\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-TX\",\r\n    points:\r\n      \"534.98 397.57 535.97 398.64 536.76 398.94 536.99 399.37 537.37 399.48 537.84 399.38 538.54 398.87 539.59 398.99 540.46 398.8 543.19 399.02 544.16 399.51 544.25 402.53 544.34 405.56 544.43 408.59 544.52 411.62 544.58 414.45 544.64 417.28 544.7 420.11 544.76 422.94 544.82 425.77 544.88 428.6 544.94 431.43 544 434.26 546.7 436.93 547.88 438.78 548.26 439.73 548.45 443 548.73 443.78 550.09 444.98 550.14 445.79 551.59 448.12 551.58 449.23 552.97 451.72 553.74 452.36 553.91 454.07 554.35 455.36 553.76 456.3 554.05 457.57 553.71 458.77 553.55 460.36 552.73 462.84 551.98 464.06 550.97 466.38 551.11 468.29 550.55 470.39 550.5 471.19 551.11 472.56 551.41 476.37 551.11 477.18 549.86 479.45 548.93 479.42 546.97 483.17 548.19 485.22 548.13 485.97 544.03 486.49 535.71 489.4 534.15 488.98 531.66 489.75 530.76 489.48 531.79 487.05 531.42 484.92 529.65 484.89 528.54 486.6 527.75 486.54 526.71 485.82 525.92 486.06 526.55 489.91 527.69 491.48 528.65 493.49 526.11 496.02 523.75 498.11 523.51 500.11 521.13 502.73 518.88 504.22 513.58 507.71 512.06 508.46 509.66 510.08 501.26 509.74 499.31 509.69 499.29 510.27 497.8 511.09 496.27 509.87 495.61 509.05 495.3 508.34 494.65 508.17 494.02 508.49 496.28 513.47 497.26 513.69 498.34 514.19 496.98 515.34 495.52 516.21 493.23 516.78 491.31 514.95 490.87 517.22 490.6 519.49 489.94 520.07 488.89 520.89 488.33 520.26 488.07 519.38 487.4 520.16 486.42 520.74 486.04 522.31 485.24 524.73 483.24 527.11 481.62 527.65 479.16 527.26 478.55 527.49 478 527.98 480.81 531.79 478.88 537.44 477.66 539.48 476.83 539.73 475.94 539.77 472.77 537.88 472.52 540.31 476.84 544.22 475.99 545.67 475.18 547.6 475.73 548.96 476.34 552.32 476.88 553.87 477.43 558.55 478.07 560.59 481.82 568.11 483.12 568.19 483.32 569 483.18 570.55 480.39 570.96 479.21 571.63 478.97 572.23 478.79 572.55 478.43 572.51 477.11 572.06 474.12 569.89 469.75 568.49 463.99 567.86 460.07 566.7 458 565.03 455.82 564.01 453.53 563.64 451.65 562.71 450.18 561.21 448 560.21 445.11 559.71 443.26 558.56 442.04 555.86 442.04 555.82 441.02 551.34 439.65 548.51 436.92 544.96 436.67 544.5 436.67 543.93 437.1 541.94 436.85 540.49 435.99 539.28 435.83 538.03 436.37 536.74 436.46 535.17 436.11 533.32 434.37 531.27 431.26 529.02 428.67 525.81 426.61 521.64 424.53 518.72 422.42 517.05 421.02 515.06 420.33 512.76 420.16 511.44 420.5 511.09 419.28 508.51 416.52 503.7 414.98 500.21 414.65 498.04 412.89 495.38 409.71 492.23 408 490.2 407.63 488.84 407.62 488.84 402.65 484.65 401.29 482.13 400.16 481.29 398.81 481.29 398.13 481.01 398.13 480.46 397.69 480.41 396.82 480.86 394.06 480.79 389.41 480.19 386.09 479.3 384.09 478.13 382.63 478.17 381.71 479.42 379.88 480.14 377.14 480.32 374.63 482.58 372.34 486.92 371.26 489.74 371.4 491.04 370.81 491.93 369.49 492.42 368.09 493.63 366.61 495.55 364.99 496.41 363.23 496.2 360.1 494.37 355.61 490.92 352.06 488.71 349.43 487.76 347.18 486.14 345.31 483.85 343.54 482.28 341.87 481.42 340.07 478.91 338.13 474.74 337.27 471.58 337.58 468.37 335.26 461.08 333.97 457.9 332.93 456.39 330.79 454.5 327.56 452.22 323.38 447.88 318.27 441.47 314.61 437.54 312.38 436.09 310.56 433.77 309.16 430.58 307.69 428.49 307.52 428.38 305.36 426.98 303.9 422.72 304.02 422.73 308.27 423.22 312.53 423.71 316.79 424.18 321.05 424.64 325.31 425.09 329.57 425.53 333.83 425.96 338.09 426.38 342.35 426.79 346.61 427.19 350.88 427.58 355.15 427.96 359.42 428.33 363.69 428.69 367.96 429.04 372.23 429.37 372.75 423.11 373.26 416.85 373.78 410.59 374.29 404.34 374.81 398.09 375.32 391.84 375.83 385.59 376.34 379.35 376.85 373.11 377.36 366.87 377.87 360.63 378.38 354.39 378.89 348.16 379.4 341.93 379.91 335.7 380.42 329.47 381.17 329.51 384.52 329.77 387.87 330.02 391.22 330.26 394.58 330.49 397.94 330.72 401.3 330.94 404.66 331.15 408.02 331.36 411.38 331.56 414.74 331.75 418.1 331.94 421.46 332.12 424.82 332.29 428.18 332.46 431.54 332.62 434.9 332.77 434.79 335.43 434.68 338.09 434.57 340.75 434.46 343.41 434.35 346.07 434.24 348.73 434.13 351.39 434.01 354.05 433.9 356.71 433.79 359.37 433.68 362.03 433.57 364.69 433.46 367.35 433.35 370.01 433.24 372.67 433.13 375.33 434.2 375.61 435.52 376.4 438.75 379.38 439.71 380.03 441.49 379.74 443.39 380.16 443.9 380.12 444.32 378.92 444.51 378.68 444.78 378.73 446.4 379.88 446.71 380.32 447.63 381.91 447.81 383.76 448.34 384.05 449.35 384.3 451.82 384.49 454.93 385.79 456.2 386.01 458.46 385.75 460.54 387.42 461.28 387.68 461.9 387.47 463.13 386.31 465.76 386.51 467.9 386.35 468.04 387.71 468.39 388.69 470.14 389.77 470.55 390.28 470.6 391.93 471.05 392.36 471.77 392.54 472.52 392.45 473.41 391.95 475.36 390.36 475.95 389.97 476.31 389.94 476.66 390.03 476.95 390.39 477.57 391.64 479.23 392.34 480.17 393.41 480.76 393.58 481.41 393.39 482.45 392.76 483.26 392.8 484.19 392.16 484.56 392.31 484.71 392.77 484.42 394.15 484.57 394.68 484.94 395.3 485.44 395.73 485.93 395.8 486.31 395.46 487.03 393.73 486.99 393.1 487.78 392.89 488.14 392.56 488.61 391.31 489.42 390.97 489.85 391.04 490.24 391.4 491.02 392.55 492.9 393.21 493.39 393.25 493.88 393.01 494.73 392.07 495.17 391.96 495.52 392.09 495.72 392.23 495.78 393.35 497.71 394.63 499.13 395.02 500.51 396.31 500.91 396.46 501.59 395.42 502.92 395.06 504.19 394 507.87 392.64 509.33 393.07 510.8 393.04 511.18 392.44 513.79 391.57 514.32 391.24 515.04 391.66 515.3 392.28 515.64 392.54 517.43 392.84 518.42 392.8 520.23 391.98 520.93 390.95 521.34 390.89 522.64 391.38 526.08 393.42 527.83 395.08 529.77 395.87 530.83 396.58\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-UT\",\r\n    points:\r\n      \"258.91 192.38 258.46 195.12 258 197.86 257.54 200.61 257.08 203.35 256.63 206.09 256.17 208.84 255.71 211.58 255.25 214.32 259.41 215.01 263.58 215.69 267.75 216.36 271.92 217.02 276.09 217.66 280.26 218.29 284.43 218.91 288.61 219.52 287.81 225.03 287.02 230.53 286.22 236.03 285.43 241.53 284.63 247.03 283.84 252.53 283.04 258.03 282.25 263.53 281.45 269.02 280.66 274.52 279.86 280.02 279.07 285.52 278.27 291.02 277.48 296.52 276.68 302.02 275.89 307.52 270.38 306.71 264.88 305.88 259.38 305.03 253.88 304.16 248.39 303.28 242.9 302.37 237.41 301.45 231.92 300.51 226.44 299.55 220.97 298.57 215.49 297.57 210.02 296.55 204.55 295.51 199.09 294.46 193.63 293.39 188.17 292.29 188.86 288.89 189.54 285.49 190.23 282.08 190.91 278.68 191.59 275.28 192.27 271.88 192.96 268.47 193.64 265.07 194.32 261.67 195.01 258.27 195.69 254.87 196.37 251.46 197.06 248.06 197.74 244.66 198.42 241.26 199.11 237.85 199.79 234.45 200.47 231.05 201.16 227.64 201.84 224.24 202.52 220.84 203.21 217.43 203.89 214.03 204.57 210.62 205.26 207.22 205.94 203.81 206.63 200.41 207.31 197 207.99 193.59 208.68 190.19 209.36 186.78 210.05 183.37 213.09 183.98 216.14 184.59 219.19 185.18 222.24 185.77 225.29 186.36 228.34 186.94 231.39 187.51 234.44 188.07 237.5 188.63 240.55 189.19 243.61 189.73 246.67 190.28 249.73 190.81 252.79 191.34 255.85 191.86\",\r\n  },\r\n  {\r\n    tag: \"path\",\r\n    id: \"US-VA\",\r\n    points:\r\n      \"M820.91,240.46 L822.05,241.06 L824.52,241.55 L825.66,242.33 L825.46,243.41 L825.55,244.13 L826.12,244.69 L829.44,245.35 L831.71,246.79 L832.98,247.1 L833.36,247.19 L834.28,247.46 L834.78,247.95 L835.04,250.47 L834.51,251.86 L833.47,253.06 L832.19,255.07 L832.11,256.69 L832.2,259.68 L833.1,260.51 L833.86,260.62 L835.81,259.53 L836.95,259.59 L840.09,262.55 L844.87,262.96 L846.69,263.46 L849.07857,265.309998 L849.07857,268.361694 L853.275572,270.888949 L855.002364,275.890094 L854.48,286.84 L853.23,286.22 L852.25,285.49 L850.26,284.32 L850.16,286.49 L852.82,287.88 L853.41,289.21 L854.98,289.03 L857.39,287.07 L859.24,287.16 L861.85,286.99 L862.67,287.96 L863.57,289.95 L864.99,292.1 L866.09,294.28 L865.54,294.41 L864.18,294.7 L859.82,295.64 L853.47,296.97 L847.11,298.27 L840.75,299.55 L834.38,300.8 L828.01,302.03 L821.63,303.23 L815.25,304.41 L808.86,305.56 L802.47,306.69 L796.07,307.79 L789.67,308.86 L783.27,309.91 L776.86,310.93 L770.45,311.93 L764.04,312.9 L763.68,312.61 L761.15,312.91 L759.28,313.13 L758.52,313.71 L754.8,314.27 L751.83,314.71 L746.82,315.44 L740.71,316.3 L732.1,317.48 L728.07,318.01 L729.73,316.72 L732.29,315.73 L736.76,313.27 L738.38,311.17 L740.83,309.45 L741.7,307.69 L743.24,305.92 L743.64,304.11 L743.84,303.81 L746.51,301.82 L749.26,299.43 L755.06,293.08 L755.3,293.76 L755.18,294.56 L755.88,295.36 L756.56,296.69 L757.35,297.45 L758.27,298 L759.72,298.4 L761.5,299.22 L762.81,299.32 L763.23,299.22 L764.46,297.96 L765.53,297.22 L766.56,295.9 L768.97,297.09 L769.83,296.95 L771.84,295.93 L773.8,295.42 L774.26,295.13 L774.89,294.37 L774.69,293.08 L774.8,292.72 L775.1,292.51 L775.49,292.41 L776.46,292.73 L777.34,292.59 L780.8,290.47 L781.1,290.53 L781.69,291.13 L783.17,289.97 L783.99,288.99 L784.2,287.69 L784.79,286.35 L784.53,285.84 L783.89,285.24 L784.29,283.5 L785.01,281.72 L787.9,276.2 L788.57,273.04 L789.78,270.87 L790.02,269.27 L790.93,267.57 L791.18,264.36 L791.57,263.65 L792.27,263.42 L793.07,263.67 L793.7,264.14 L794.21,265 L796.23,265.46 L797.82,265.27 L798.81,264.48 L799.25,263.28 L799.73,261.1 L800.33,259.75 L800.58,258.14 L800.93,256.99 L801.65,256.17 L803.76,255.81 L804.66,254.68 L805.29,253.47 L805.73,253.03 L806.33,252.97 L807.9,250.92 L809.7,246.91 L809.8,244.58 L810.13,242.86 L810.06,241.17 L810.37,240.18 L812.91,241.52 L814.38,242.3 L817.72,244.05 L819.94,245.21 L820.33,243.28 L820.91,240.46 Z M862.65,263.11 L863.1,261.98 L865.6,261.05 L867.15,260.46 L865.32,269.86 L865.84,271.39 L865.19,272.07 L864.12,272.75 L863.16,273.96 L862.61,275.17 L862.51,278.12 L861.82,281.57 L860.66,280.46 L860.19,279.39 L859.92,276.38 L860.35,271.26 L861.33,267.91 L862.27,266.22 L862.65,263.11 Z\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-VT\",\r\n    points:\r\n      \"889.99 147 888.42 147.35 886.84 147.7 885.26 148.06 883.68 148.4 882.1 148.75 880.53 149.1 878.95 149.44 877.37 149.78 876.61 148.57 876.54 147.4 876.18 145.88 875.71 143.88 875.2 141.69 874.5 138.71 874.04 136.71 873.62 134.92 873.04 132.46 871.77 131.33 871.33 131.2 871.07 131.41 870.63 132.48 870.42 132.53 870.19 132.34 870.02 131.5 869.87 128.45 869.65 127.54 869.13 126.02 867.58 122.67 867.36 121.89 867.31 120.6 867.45 119.27 867.9 117.84 867.94 117.27 867.33 115.14 867.06 113.1 865.33 110.36 864.71 106.41 863.98 104.63 863.87 102.85 863.39 101.44 866 100.76 872.39 99.1 878.78 97.4 885.15 95.68 891.52 93.93 891.39 94.42 892.22 96.04 891.34 99.44 891.63 100.38 893.11 102.76 893.23 103.39 893.07 103.76 893.04 104.95 892.79 105.77 892.28 106.64 890.53 108.88 889.99 109.47 888.06 110.58 887.77 111.33 888.36 115.43 888.28 117.84 888.42 118.91 887.97 120.91 887.76 123.12 887.03 125.07 886.92 127.24 886.74 128.11 886.72 129.44 887.5 133.78 887.62 136.23 888.13 140.39 888.03 141.49 887.81 142.13 887.79 143.98 887.91 144.64 888.27 145.16 889.52 146.3\",\r\n  },\r\n  {\r\n    tag: \"path\",\r\n    id: \"US-WI\",\r\n    points:\r\n      \"M594.21,107.75 L594.14,107.93 L594.5,108.72 L595.28,108.46 L595.66,108.93 L596.14,109.11 L597.05,109.45 L597.54,110.36 L598.03,111.27 L598.52,112.18 L599.01,113.09 L600.98,113.5 L602.95,113.91 L604.92,114.32 L606.9,114.72 L608.88,115.12 L610.86,115.52 L612.84,115.92 L614.82,116.31 L615.96,116.86 L617.1,117.41 L618.24,117.95 L619.39,118.49 L621.11,118.48 L622.66,118.74 L624.79,118.58 L626.98,118.87 L630.23,119.65 L631.05,120.48 L631.22,121.07 L631.04,122.49 L634.17,123.47 L635.55,124.29 L636.1,124.96 L636.08,125.61 L636.51,126.94 L636.26,127.7 L636.37,128.98 L635.8,130.39 L635.63,131.14 L635.67,131.75 L635.85,132.13 L636.23,132.25 L637.37,132.07 L638.47,131.56 L639,131.77 L639.12,131.97 L639.07,132.35 L638.36,134.72 L638.48,135.64 L638.95,136.5 L639.67,137.32 L640.45,137.55 L640.47,138.13 L640.27,139.28 L639.46,140.25 L637.23,141.58 L636.93,142.37 L636.94,143 L635.67,145.73 L635.08,147.38 L634.74,149.08 L634.98,150.11 L635.81,150.47 L636.44,150.25 L636.86,149.45 L637.55,148.7 L638.51,148 L639.17,147.03 L639.99,144.75 L641.02,143.39 L641.62,143.26 L641.79,143.28 L642.93,142.6 L643.91,142.7 L644.57,143.5 L645.22,144.03 L645.4,144.57 L645.22,145.83 L644.8,147.18 L644.13,148.62 L643.6,150.74 L643.2,153.53 L643.25,155.61 L643.76,156.97 L643.52,158.25 L642.52,159.45 L641.77,161 L641.27,162.89 L641.03,164.46 L641.05,165.72 L641.23,166.65 L641.76,167.87 L641.79,168.51 L640.84,171.39 L640.53,172.78 L640.55,173.85 L640.35,174.92 L639.62,177.14 L639.44,178.35 L639.48,179.44 L639.85,181.21 L639.79,181.82 L639.88,182.27 L640.14,182.56 L640.19,183.12 L640.03,183.96 L640.18,184.59 L640.64,185.01 L640.99,185.85 L641.23,187.11 L641.64,188.15 L642.23,188.96 L642.43,190.19 L642.25,191.84 L642.36,194.9 L642.45,195.92 L640.35,196.09 L632.95,196.67 L625.55,197.22 L618.14,197.73 L610.73,198.2 L603.32,198.64 L595.76,199.04 L595.64,198.88 L595.02,196.91 L593.28,195.53 L590.42,194.72 L588.54,193.3 L587.64,191.27 L587.01,188.97 L586.66,186.4 L586.77,184.22 L587.34,182.44 L587.11,181.27 L586.08,180.7 L585.38,179.93 L585.01,178.94 L584.82,177.56 L583.94,171.01 L583.11,167.95 L582.04,166.79 L579.84,165.48 L576.52,164.02 L574.45,162.6 L573.21,160.54 L570.81,158.16 L569.27,157.21 L567.79,156.89 L566.59,156.14 L565.68,154.96 L564.46,154.24 L562.92,153.98 L561.18,153.05 L559.1,151.32 L559.05,151.18 L558.58,149.9 L558.79,149.16 L559.04,146.65 L558.98,145.86 L558.46,143.6 L558.97,142.7 L558.76,139.89 L558.92,138.96 L559.91,136.62 L559.92,135.44 L559.49,134.1 L558.66,133.02 L556.5,131.94 L556.39,130.51 L556.7,129.43 L558.01,127.38 L558.71,125.58 L559.37,124.79 L563.48,121.97 L564.37,121.75 L564.99,120.97 L565.49,120.62 L565.36,117.39 L565.23,114.16 L565.1,110.93 L564.97,107.7 L566.01,107.43 L566.43,106.6 L567.44,105.3 L567.72,105.3 L567.72,105.31 L568.27,105.86 L569.63,106.64 L570.66,106.7 L571.97,106.47 L577.09,104.79 L579.23,103.68 L581.29,101.89 L581.51,101.83 L582.42,102.09 L582.71,102.22 L585.39,100.14 L586.29,99.84 L587.01,99.85 L587.94,100.56 L588.17,101.01 L587.92,101.92 L587.19,103.28 L586.86,104.41 L586.93,105.3 L586.64,106.29 L585.83,107.65 L586.17,107.99 L588.48,106.91 L588.8,106.52 L588.83,106.3 L588.67,106.04 L588.93,105.91 L590.86,107.09 L592.14,107.73 L593.2,108.01 L594.21,107.75 Z M651.05,135.91 L650.8,136.48 L650.54,136.76 L650.26,136.75 L649.89,137.41 L649.43,138.74 L649.3,139.5 L649.51,139.69 L649.42,140.13 L648.15,142.21 L647.61,142.45 L646.97,142.24 L646.48,141.71 L646.14,140.87 L646,140.21 L646.06,139.73 L647.18,137.89 L647.64,136.71 L647.84,135.42 L648.35,134.56 L649.18,134.13 L649.8,133.28 L650.21,132.01 L650.77,131.42 L651.48,131.51 L652.705665,132.189712 L651.05,135.91 Z\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-WV\",\r\n    points:\r\n      \"789.74 237.98 790.21 240.79 790.68 243.59 791.15 246.4 791.62 249.21 793.49 247.18 794.51 246.39 797.54 242.11 798.02 242 799.39 242.27 801.55 239.22 801.69 238.23 801.94 237.87 802.28 237.84 802.53 238.05 802.51 238.6 802.76 238.81 803.96 239.22 805.55 239.26 805.76 239.25 807.1 238.98 807.6 238.37 807.71 237.32 808.2 236.63 809.52 236.11 811.75 234.61 813.19 234.5 814.58 235.28 815.88 235.53 817.1 235.24 817.62 235.39 817.44 235.97 817.88 236.5 818.95 236.99 819.39 237.55 819.2 238.2 819.39 238.61 819.94 238.78 820.36 239.36 820.67 240.33 820.91 240.46 820.34 243.3 819.95 245.22 817.73 244.06 814.38 242.3 812.92 241.53 810.38 240.18 810.07 241.17 810.14 242.86 809.81 244.58 809.71 246.91 807.91 250.92 806.34 252.97 805.75 253.04 805.31 253.48 804.68 254.69 803.78 255.81 801.66 256.17 800.95 256.99 800.59 258.14 800.35 259.74 799.75 261.09 799.26 263.27 798.82 264.47 797.83 265.25 796.24 265.45 794.22 264.99 793.71 264.13 793.08 263.66 792.28 263.4 791.58 263.64 791.19 264.34 790.95 267.55 790.04 269.25 789.81 270.85 788.59 273.02 787.93 276.18 785.04 281.7 784.31 283.48 783.91 285.22 784.55 285.82 784.82 286.33 784.22 287.67 784.02 288.97 783.19 289.95 781.72 291.11 781.13 290.51 780.83 290.44 777.38 292.57 776.5 292.7 775.52 292.38 775.14 292.48 774.83 292.69 774.72 293.05 774.92 294.34 774.28 295.11 773.82 295.4 771.86 295.91 769.86 296.93 769 297.07 766.59 295.88 765.56 297.2 764.49 297.94 763.26 299.2 762.84 299.31 761.54 299.21 759.76 298.39 758.31 297.99 757.39 297.44 756.6 296.67 755.92 295.35 755.22 294.55 755.35 293.75 755.1 293.07 752.58 292.76 749.1 290.68 746.65 287.87 745.8 286.52 744.93 285.66 744.6 284.69 742.36 282.42 741.7 281.39 741.56 280.69 741.96 279.27 741.98 278.6 741.3 275.37 740.81 274.82 742.91 275.25 744.76 274.55 745.8 273.36 746.03 271.7 746.55 270.68 747.37 270.29 747.65 269.53 747.26 267.85 746.81 266.72 747.24 264.93 748.4 262.1 749.46 260.85 750.41 261.19 751.08 261.92 751.45 263.04 751.65 263.16 751.89 263.1 752.42 262.12 752.96 261.68 753.21 261.73 753.47 261.67 753.42 261.1 752.71 259.6 752.6 258.68 753.1 258.31 753.52 257.17 753.85 255.25 754.44 254.2 755.3 254.02 756.11 253.12 756.89 251.52 757.72 250.96 758.62 251.44 759.64 251.32 760.76 250.6 762.61 248.74 765.17 245.71 766.34 243.42 766.11 241.85 766.63 237.85 767.88 231.41 768.33 227.31 767.99 225.53 767.42 224.13 766.63 223.11 766.84 222.16 768.65 220.87 769.07 223.39 769.51 225.92 769.94 228.46 770.38 230.99 770.82 233.52 771.25 236.05 771.69 238.59 772.13 241.12 774.33 240.74 776.54 240.36 778.74 239.97 780.94 239.58 783.14 239.18 785.34 238.79 787.54 238.39\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-WY\",\r\n    points:\r\n      \"376.51 184.94 376.04 190.49 375.56 196.04 375.08 201.59 374.61 207.14 374.13 212.68 373.66 218.23 373.18 223.77 372.7 229.32 367.43 228.84 362.17 228.35 356.9 227.83 351.63 227.3 346.37 226.76 341.11 226.19 335.85 225.6 330.59 225 325.33 224.38 320.08 223.74 314.83 223.08 309.58 222.41 304.33 221.71 299.09 221 293.85 220.27 288.61 219.52 284.43 218.91 280.26 218.29 276.09 217.66 271.92 217.02 267.75 216.36 263.58 215.69 259.41 215.01 255.25 214.32 255.71 211.58 256.17 208.84 256.63 206.09 257.08 203.35 257.54 200.61 258 197.86 258.46 195.12 258.91 192.38 259.49 188.94 260.06 185.52 260.63 182.09 261.2 178.65 261.77 175.22 262.35 171.79 262.92 168.36 263.49 164.93 264.07 161.49 264.64 158.05 265.21 154.62 265.79 151.18 266.36 147.74 266.93 144.31 267.51 140.87 268.08 137.43 268.54 134.66 269.01 131.89 269.48 129.12 269.94 126.35 273.37 126.92 276.8 127.48 280.24 128.04 283.67 128.58 287.11 129.12 290.55 129.64 293.99 130.16 297.43 130.68 300.87 131.18 304.31 131.67 307.76 132.16 311.2 132.64 314.65 133.11 318.1 133.57 321.54 134.02 324.99 134.47 328.44 134.9 331.9 135.33 335.35 135.75 338.8 136.16 342.26 136.57 345.72 136.96 349.17 137.35 352.63 137.73 356.09 138.09 359.55 138.46 363.01 138.81 366.47 139.15 369.93 139.49 373.39 139.82 376.86 140.14 380.32 140.45 379.85 146.02 379.37 151.59 378.89 157.15 378.41 162.71 377.94 168.27 377.46 173.83 376.99 179.38\",\r\n  },\r\n  {\r\n    tag: \"path\",\r\n    id: \"US-AK\",\r\n    points:\r\n      \"M51.8416968,436.345534 C56.0630828,429.083046 44.7451946,436.90666 76.1015191,425.529537 C79.3399188,424.354538 83.8536398,425.48172 84.9040018,425.619519 L85.7347883,427.098859 C87.6892984,427.355274 91.7950539,427.884808 98.0520546,428.687461 L100.755323,434.760145 L109.914315,433.748924 L110.802914,435.69531 L116.470677,436.735454 C117.640587,438.330698 118.662654,439.298714 119.536879,439.639501 C119.910758,439.785246 128.142967,442.412921 144.233506,447.522528 C143.225709,473.215244 142.635808,492.488435 142.463802,505.342101 C142.339547,514.627492 142.485149,528.556064 142.900608,547.127819 C149.848695,548.516887 154.603235,550.322945 157.164227,552.545994 C159.697188,554.74471 157.442864,560.230777 160.198311,562.142955 C162.829346,563.968795 166.614505,560.726564 169.766273,561.291343 C171.116149,561.533234 171.370969,563.599877 172.518789,564.350716 C180.529233,569.5907 185.017985,574.270999 190.460994,581.94318 C191.687818,583.672448 191.645523,586.14971 193.012236,587.770557 C195.795133,591.070921 200.050959,592.969814 202.659423,596.409857 C205.078042,599.599532 205.713773,603.720857 204.135782,607.253705 C203.683339,608.266648 203.120662,609.384511 202.153029,609.926371 C199.696144,611.302191 196.977607,612.274543 194.213451,612.810066 C187.587301,614.093805 193.025009,608.543955 192.64502,605.952186 C192.406574,604.32583 190.076701,603.706354 189.473899,602.177246 C188.811693,600.497448 190.530668,597.779229 189.028529,596.778353 C187.513257,595.768726 184.785008,595.651607 180.843783,596.426996 L179.803765,589.330847 L177.263014,586.12683 L174.637508,585.831669 L171.68372,580.010719 C168.469619,580.530688 166.188881,580.436778 164.841508,579.728992 C163.715723,579.137607 165.059667,576.760742 164.042839,575.9969 C159.354015,572.474647 153.405254,570.925824 148.616547,567.540776 C143.598871,563.993874 152.941623,564.326137 145.049304,561.744465 C141.695653,560.647445 136.514657,559.566238 129.506317,558.500844 L120.740234,552.695963 L113.686043,551.105218 C118.338493,544.792296 115.336884,542.873047 104.681217,545.34747 C103.680931,545.579753 104.121044,547.33778 104.037786,548.361852 L106.884514,550.995954 C106.799523,552.041329 104.505475,550.750182 103.781912,551.509064 C99.9438719,555.534444 106.128929,556.720448 98.2843751,556.4152 C96.0730934,556.329155 93.9141086,554.598668 91.7686964,555.141533 C90.7124378,555.408804 91.4832707,557.380917 90.8800975,558.288745 C90.0835769,559.487577 88.8229489,560.305868 87.721824,561.232427 C87.0864855,561.767043 86.5007629,562.523449 85.6823288,562.662491 C84.7183086,562.826266 83.7226821,562.417763 82.8099059,562.066899 C82.4812722,561.940574 82.0676633,561.61207 81.5690792,561.081387 L86.2537056,550.750374 L84.0149933,545.962569 C75.6700204,555.873371 71.4630513,560.970107 71.3940858,561.25278 C70.2782698,565.826232 77.4910787,562.865896 70.126494,568.488796 C67.4650332,570.520836 63.0880588,572.983902 56.9955708,575.877995 L54.3361975,579.335858 L46.2017699,582.216339 L39.8670229,588.674657 L30.2187652,588.420781 L16.5868007,592.979846 L11.8204843,592.998057 C8.37098441,595.438523 5.64309266,596.896438 3.6368091,597.371803 C2.58361511,597.621344 1.73107318,596.306 0.929258769,595.578599 C0.507138643,595.195654 -0.184928764,594.635447 0.0460128138,594.114256 C1.15687226,591.60726 10.1467102,587.772689 27.0155266,582.610544 L30.1620234,587.210315 C38.6989658,579.6666 43.9588293,574.035969 45.9416139,570.318421 C46.259341,569.72271 52.3659855,564.02005 48.4489618,562.767469 C44.0891023,561.37328 37.3892803,559.872516 28.3494956,558.265178 L28.4404967,546.722902 L18.6948144,540.091048 L15.9251692,526.610954 L13.4756337,525.03842 L15.3866568,520.226549 L14.119065,515.781032 L18.0406771,515.024759 L23.8240645,508.144384 L25.8025355,511.423354 C27.0940046,507.941227 28.5161198,505.960562 30.0688811,505.481358 C34.1739843,504.214468 40.7388422,512.809966 44.1258743,503.389287 C45.3780936,499.906369 48.1903629,494.69679 45.32923,492.350479 C41.4580664,489.175878 35.2809631,492.700116 30.31619,492.064466 C29.4448774,491.952911 29.2611505,490.555586 28.4619087,490.190922 C17.288618,485.092973 24.9307985,492.277671 21.8595114,484.796314 C20.3704741,481.169164 20.4411338,479.135295 22.0714904,478.694708 L18.4903296,475.463942 L17.8736633,472.465628 L24.8411356,472.341368 L33.5194286,469.329128 L50.29789,476.644414 C52.0150082,475.01592 52.7087578,473.626562 52.3791386,472.47634 C50.0115148,464.214401 42.0790199,467.956183 40.1250378,461.705334 C37.8417169,454.40092 42.9867888,455.65697 38.0630599,450.436216 C37.1064311,449.421879 35.2044541,449.491391 34.460487,448.312009 C34.1185494,447.769948 35.8389925,447.761763 35.9818113,447.136893 C36.6112622,444.382875 32.2788082,441.649963 39.1732733,440.78998 C40.9886723,440.563535 42.5278236,442.251823 44.2050988,442.982745 L51.8416968,436.345534 Z\",\r\n  },\r\n  {\r\n    tag: \"path\",\r\n    id: \"US-HI\",\r\n    points:\r\n      \"M221.20512,556.053119 L228.021724,561.4278 C229.580123,560.837321 230.589224,560.71974 231.049026,561.075055 C236.800819,565.519798 239.293541,568.624353 240.236125,566.188593 C243.343862,558.157794 239.864821,554.336483 229.799003,554.724659 C227.563742,552.221135 226.003139,550.940752 225.117195,550.883507 C220.516734,550.586253 219.405027,551.995113 221.782073,555.110089 L221.20512,556.053119 Z M255.640699,576.595114 L255.89346,586.753588 C253.866662,588.723843 253.047071,590.279657 253.434688,591.421031 C254.491168,594.531943 258.344604,594.950515 264.994997,592.676749 L279.245908,597.344611 L275.236424,609.745794 L280.802056,616.727407 L279.2438,622.302984 L282.925326,621.970493 C284.26085,623.717748 285.220938,625.043307 285.80559,625.947167 C286.659209,627.266845 288.050759,628.416588 289.980239,629.396397 L288.118328,646.257876 L292.682556,647.239346 L298.136813,644.557067 C302.420457,645.466373 305.390123,645.38277 307.045809,644.306257 C308.323973,643.475206 307.950661,642.205478 305.925871,640.497073 C302.418688,634.081901 299.535239,629.407944 297.275523,626.475201 C293.874333,622.061011 296.250683,619.399443 292.251476,615.766116 C287.283225,611.252404 283.158199,607.786123 283.027224,607.546849 C282.049845,605.761299 281.381888,602.699611 281.023353,598.361786 C281.596393,591.169005 280.733037,587.044147 278.433286,585.987212 C276.91252,585.288289 278.703839,581.016614 277.24047,580.150248 C275.130256,578.900928 271.633191,578.540802 266.749276,579.06987 L266.193201,574.46097 L262.671757,576.259825 L259.510631,573.843611 C259.131097,573.742179 257.90192,572.917783 255.823099,571.370422 L245.066998,567 L245,571.133355 L252.23004,577.417372 L255.640699,576.595114 Z\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-NE\",\r\n    points:\r\n      \"499.78 201.64 500.27 201.76 501.37 203.73 501.81 207.24 502.81 210.08 504.36 212.23 505.14 213.81 505.15 214.81 505.52 215.88 506.26 217.02 506.56 218.96 506.41 221.7 506.72 223.15 507.51 223.33 507.86 223.72 507.75 224.31 508.01 224.76 508.65 225.04 508.83 225.83 508.55 227.12 508.78 227.93 509.52 228.26 509.66 228.9 509.2 229.84 509.27 230.58 509.88 231.12 510.29 233.51 510.51 237.75 510.44 240.24 510.09 240.96 510.65 242.49 511.69 244.14 512.12 244.83 513.06 247.15 513.46 249.46 514.39 250.95 515.86 251.63 516.85 253.1 517.36 255.37 518.6 257.26 518.87 257.46 515.79 257.49 512.21 257.5 508.63 257.51 505.04 257.5 501.46 257.49 497.88 257.48 494.29 257.45 490.71 257.41 487.13 257.37 483.54 257.32 479.96 257.26 476.38 257.19 472.79 257.11 469.21 257.03 465.63 256.94 462.05 256.84 458.47 256.73 454.89 256.61 451.31 256.48 447.73 256.35 444.14 256.21 440.56 256.06 436.98 255.9 433.41 255.73 429.83 255.55 426.25 255.37 422.67 255.18 419.09 254.98 415.51 254.77 411.94 254.55 408.36 254.33 404.79 254.09 404.97 251.32 405.15 248.55 405.33 245.78 405.52 243.01 405.7 240.24 405.88 237.46 406.07 234.69 406.25 231.92 402.05 231.63 397.86 231.34 393.66 231.03 389.47 230.71 385.28 230.38 381.09 230.03 376.89 229.68 372.7 229.32 373.18 223.77 373.66 218.23 374.13 212.68 374.61 207.14 375.08 201.59 375.56 196.04 376.04 190.49 376.51 184.94 382.16 185.43 387.8 185.89 393.44 186.34 399.09 186.76 404.74 187.17 410.39 187.55 416.04 187.91 421.69 188.25 427.35 188.57 433 188.86 438.66 189.13 444.32 189.39 449.97 189.62 455.63 189.83 461.29 190.01 467.76 190.21 472.56 193.65 475.46 194.75 476.86 193.8 479.87 193.3 484.49 193.24 487.39 193.74 488.6 194.81 490.96 196.02 494.48 197.36 496.59 198.8 497.28 200.34 498.51 201.33\",\r\n  },\r\n  {\r\n    tag: \"polygon\",\r\n    id: \"US-ID\",\r\n    points:\r\n      \"268.29 137.17 267.72 140.61 267.14 144.05 266.57 147.48 266 150.92 265.42 154.36 264.85 157.79 264.28 161.23 263.7 164.67 263.13 168.1 262.56 171.53 261.98 174.96 261.41 178.39 260.84 181.83 260.27 185.26 259.7 188.68 259.12 192.12 256.06 191.6 253 191.08 249.94 190.55 246.88 190.02 243.82 189.47 240.76 188.93 237.71 188.37 234.65 187.81 231.6 187.25 228.55 186.68 225.5 186.1 222.45 185.51 219.4 184.92 216.35 184.33 213.3 183.72 210.26 183.11 204.21 181.88 198.16 180.63 192.12 179.35 186.09 178.05 180.06 176.72 174.03 175.37 168.02 173.99 162 172.59 163.14 167.75 164.27 162.91 165.4 158.07 166.53 153.23 167.67 148.38 168.8 143.54 169.94 138.69 171.18 133.36 171.21 133.25 172.96 130.2 173.55 128.66 173.5 127.69 173.88 126.87 174.68 126.17 174.87 125.25 174.47 124.11 173.44 123.17 171.78 122.44 171.16 121.07 171.57 119.04 173.59 116.26 177.21 112.71 179.35 110.09 180 108.42 182.51 104.78 186.86 99.18 188.89 95.41 188.62 93.49 187.55 91.46 185.66 89.33 184.51 87.09 184.31 86.04 184.08 84.75 184.16 83.19 184.75 82.42 184.79 80.85 184.27 78.48 184.18 76.92 184.4 76.44 184.56 76.26 185.37 72.75 186.18 69.25 187 65.74 187.81 62.23 188.62 58.72 189.44 55.21 190.25 51.69 191.07 48.17 191.89 44.66 192.7 41.14 193.52 37.62 194.34 34.09 195.15 30.57 195.97 27.04 196.79 23.51 197.59 20 202.26 21.09 204.2778 22.3840067 212.016521 20.4105664 210.74 28.74 209.52 34.19 208.29 39.64 207.07 45.08 208.17 47.64 209.04 49.26 209.47 50.89 210.28 52.68 210.39 53.27 210.43 55.01 209.87 56.13 210.22 57.47 209.98 58.05 209.45 58.25 209.33 58.33 209.32 58.45 209.44 58.69 210.81 60.2 212.07 62.16 213.87 63.72 214.37 64.51 216.37 68.32 217.33 70.67 218.49 72.48 218.86 74.35 220.07 76.17 220.29 77.01 220.37 77.2 220.56 77.26 221.58 77.1 221.81 77.25 222.15 77.94 222.06 78.86 222.33 79.31 222.87 79.65 223.52 79.85 225.7 79.84 226.15 79.93 226.33 80.16 226.33 80.66 226.14 81.45 225.71 82.52 224.85 83.51 224.74 84.56 223.75 86.87 222.95 88.37 222.59 89.93 221.81 90.71 221.92 91.84 221.36 93.43 221.48 93.89 222.07 94.8 221.96 96.86 221.75 97.2 220.25 97.7 219.68 98.13 219.36 98.82 219.51 101.05 218.7 102.09 218.42 103.08 218.5 103.36 219.63 104.15 220.9 105.65 221.33 106 221.67 106.03 222.39 105.76 223.26 105.1 224.87 104.58 226.92 103.18 227.1 102.71 227.29 102.47 227.51 102.53 228 102.87 228.87 104.14 229.68 104.91 229.81 105.07 229.84 105.38 229.59 106.42 229.94 107.35 229.83 108.73 230.09 110.19 230.15 111.9 231.14 114.28 231.61 115.93 232.31 116.78 232.66 117.68 232.85 118.71 232.84 119.51 232.08 120.82 232.1 121.43 232.42 122.16 233.6 123.9 233.86 124.07 235.24 124.17 235.93 124.56 236.52 125.42 237.05 126.67 237.32 127.86 237.2 129.2 237.68 130.8 237.54 132.11 237.9 132.76 238.69 133.71 239.49 134.34 239.84 134.44 240.13 134.29 240.34 133.59 240.81 133.11 242.07 132.56 243.13 132.77 247.03 134.15 247.32 134.16 247.54 133.98 248.44 132.93 249.07 132.57 249.94 132.58 252.36 133.31 255.26 133.65 256.69 134.25 258.94 134.19 261.39 134.95 261.75 134.81 261.87 134.59 261.72 134.11 261.83 133.23 262.51 132.28 262.84 131.43 263.43 131.02 264.16 130.86 264.7 130.99 265.15 131.55 265.62 132.44 266.33 134.76 266.77 135.62 267.35 136.41\",\r\n  },\r\n];\r\n","export const MapLabels = {\r\n  \"US-AL\": \"Alabama LLC\",\r\n  \"US-AK\": \"Alaska LLC\",\r\n  \"US-AZ\": \"Arizona LLC\",\r\n  \"US-AR\": \"Arkansas LLC\",\r\n  \"US-CA\": \"California LLC\",\r\n  \"US-CO\": \"Colorado LLC\",\r\n  \"US-CT\": \"Connecticut LLC\",\r\n  \"US-DE\": \"Delaware LLC\",\r\n  \"US-FL\": \"Florida LLC\",\r\n  \"US-GA\": \"Georgia LLC\",\r\n  \"US-HI\": \"Hawaii LLC\",\r\n  \"US-ID\": \"Idaho LLC\",\r\n  \"US-IL\": \"Illinois LLC\",\r\n  \"US-IN\": \"Indiana LLC\",\r\n  \"US-IA\": \"Iowa LLC\",\r\n  \"US-KS\": \"Kansas LLC\",\r\n  \"US-KY\": \"Kentucky[E] LLC\",\r\n  \"US-LA\": \"Louisiana LLC\",\r\n  \"US-ME\": \"Maine LLC\",\r\n  \"US-MD\": \"Maryland LLC\",\r\n  \"US-MA\": \"Massachusetts[E] LLC\",\r\n  \"US-MI\": \"Michigan LLC\",\r\n  \"US-MN\": \"Minnesota LLC\",\r\n  \"US-MS\": \"Mississippi LLC\",\r\n  \"US-MO\": \"Missouri LLC\",\r\n  \"US-MT\": \"Montana LLC\",\r\n  \"US-NE\": \"Nebraska LLC\",\r\n  \"US-NV\": \"Nevada LLC\",\r\n  \"US-NH\": \"New Hampshire LLC\",\r\n  \"US-NJ\": \"New Jersey LLC\",\r\n  \"US-NM\": \"New Mexico LLC\",\r\n  \"US-NY\": \"New York LLC\",\r\n  \"US-NC\": \"North Carolina LLC\",\r\n  \"US-ND\": \"North Dakota LLC\",\r\n  \"US-OH\": \"Ohio LLC\",\r\n  \"US-OK\": \"Oklahoma LLC\",\r\n  \"US-OR\": \"Oregon LLC\",\r\n  \"US-PA\": \"Pennsylvania LLC\",\r\n  \"US-RI\": \"Rhode Island LLC\",\r\n  \"US-SC\": \"South Carolina LLC\",\r\n  \"US-SD\": \"South Dakota LLC\",\r\n  \"US-TN\": \"Tennessee LLC\",\r\n  \"US-TX\": \"Texas LLC\",\r\n  \"US-UT\": \"Utah LLC\",\r\n  \"US-VT\": \"Vermont LLC\",\r\n  \"US-VA\": \"Virginia LLC\",\r\n  \"US-WA\": \"Washington LLC\",\r\n  \"US-WV\": \"West Virginia LLC\",\r\n  \"US-WI\": \"Wisconsin LLC\",\r\n  \"US-WY\": \"Wyoming LLC\",\r\n};\r\n","export const MapLabelsCorporations = {\r\n  \"US-AL\": \"Alabama Corporation\",\r\n  \"US-AK\": \"Alaska Corporation\",\r\n  \"US-AZ\": \"Arizona Corporation\",\r\n  \"US-AR\": \"Arkansas Corporation\",\r\n  \"US-CA\": \"California Corporation\",\r\n  \"US-CO\": \"Colorado Corporation\",\r\n  \"US-CT\": \"Connecticut Corporation\",\r\n  \"US-DE\": \"Delaware Corporation\",\r\n  \"US-FL\": \"Florida Corporation\",\r\n  \"US-GA\": \"Georgia Corporation\",\r\n  \"US-HI\": \"Hawaii Corporation\",\r\n  \"US-ID\": \"Idaho Corporation\",\r\n  \"US-IL\": \"Illinois Corporation\",\r\n  \"US-IN\": \"Indiana Corporation\",\r\n  \"US-IA\": \"Iowa Corporation\",\r\n  \"US-KS\": \"Kansas Corporation\",\r\n  \"US-KY\": \"Kentucky Corporation\",\r\n  \"US-LA\": \"Louisiana Corporation\",\r\n  \"US-ME\": \"Maine Corporation\",\r\n  \"US-MD\": \"Maryland Corporation\",\r\n  \"US-MA\": \"Massachusetts Corporation\",\r\n  \"US-MI\": \"Michigan Corporation\",\r\n  \"US-MN\": \"Minnesota Corporation\",\r\n  \"US-MS\": \"Mississippi Corporation\",\r\n  \"US-MO\": \"Missouri Corporation\",\r\n  \"US-MT\": \"Montana Corporation\",\r\n  \"US-NE\": \"Nebraska Corporation\",\r\n  \"US-NV\": \"Nevada Corporation\",\r\n  \"US-NH\": \"New Hampshire Corporation\",\r\n  \"US-NJ\": \"New Jersey Corporation\",\r\n  \"US-NM\": \"New Mexico Corporation\",\r\n  \"US-NY\": \"New York Corporation\",\r\n  \"US-NC\": \"North Carolina Corporation\",\r\n  \"US-ND\": \"North Dakota Corporation\",\r\n  \"US-OH\": \"Ohio Corporation\",\r\n  \"US-OK\": \"Oklahoma Corporation\",\r\n  \"US-OR\": \"Oregon Corporation\",\r\n  \"US-PA\": \"Pennsylvania Corporation\",\r\n  \"US-RI\": \"Rhode Island Corporation\",\r\n  \"US-SC\": \"South Carolina Corporation\",\r\n  \"US-SD\": \"South Dakota Corporation\",\r\n  \"US-TN\": \"Tennessee Corporation\",\r\n  \"US-TX\": \"Texas Corporation\",\r\n  \"US-UT\": \"Utah Corporation\",\r\n  \"US-VT\": \"Vermont Corporation\",\r\n  \"US-VA\": \"Virginia Corporation\",\r\n  \"US-WA\": \"Washington Corporation\",\r\n  \"US-WV\": \"West Virginia Corporation\",\r\n  \"US-WI\": \"Wisconsin Corporation\",\r\n  \"US-WY\": \"Wyoming Corporation\",\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { navigate } from \"gatsby\";\r\nimport { MapData } from \"./map-data\";\r\nimport { MapLabels } from \"./map-labels\";\r\nimport { MapLabelsCorporations } from \"./map-labels-corporations\";\r\nimport ArrowIcon from \"../../images/arrow-circle.inline.svg\";\r\nimport { color } from \"../../atomic/atoms/styles/colors\";\r\nimport Curve from \"../../atomic/atoms/icons/curve\";\r\nimport CurveSVG from \"../../images/curves/top-left-bottom-right.inline.svg\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  & > svg {\r\n    cursor: pointer;\r\n    polygon:hover,\r\n    path:hover {\r\n      fill: #5089fd;\r\n      stroke: #5089fd;\r\n      stroke-width: 2.339;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledReactTooltip = styled(ReactTooltip)`\r\n  &.show {\r\n    opacity: 1;\r\n    box-shadow: 0 24px 32px 0 rgba(236, 236, 236, 0.5);\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst TooltipContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 12px;\r\n  font-family: \"Avenir-Roman\", sans-serif;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  color: #4e4e4e;\r\n  opacity: 1;\r\n  pointer-events: all;\r\n\r\n  > p {\r\n    margin-right: 32px;\r\n  }\r\n`;\r\n\r\nconst StyledArrowIcon = styled(ArrowIcon)`\r\n  cursor: pointer;\r\n  transform: rotate(90deg);\r\n`;\r\n\r\nconst StatesMap = ({ corporations }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Curve top=\"55\" right=\"-5\" color={color.blue1}>\r\n        <CurveSVG />\r\n      </Curve>\r\n      <svg width=\"962px\" height=\"648px\" viewBox=\"0 0 962 648\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Map</title>\r\n        <g id=\"Map\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\">\r\n          <g id=\"Group-2\" fill=\"#FDFDFF\" stroke=\"#BBBBBC\">\r\n            {MapData.map((element) => {\r\n              let attrs = {\r\n                id: element.id,\r\n                \"data-for\": \"mapTooltip\",\r\n                //\"data-event\": \"click\",\r\n                \"data-event\": \"mouseenter\",\r\n                \"data-tip\": corporations ? MapLabelsCorporations[element.id] : MapLabels[element.id],\r\n                onClick: () => {\r\n                  navigate(`/corporation-state-information/${corporations ? MapLabelsCorporations[element.id].replace(/\\s+/g, \"-\").toLowerCase() : MapLabels[element.id].replace(/\\s+/g, \"-\").toLowerCase()}`);\r\n                },\r\n              };\r\n              if (element.tag === \"polygon\") attrs.points = element.points;\r\n              else if (element.tag === \"path\") attrs.d = element.points;\r\n              return React.createElement(element.tag, attrs);\r\n            })}\r\n          </g>\r\n        </g>\r\n      </svg>\r\n      <StyledReactTooltip\r\n        id=\"mapTooltip\"\r\n        getContent={(dataTip) => (\r\n          <TooltipContent>\r\n            <p>{dataTip}</p>\r\n            <StyledArrowIcon />\r\n          </TooltipContent>\r\n        )}\r\n        effect=\"solid\"\r\n        place=\"right\"\r\n        type=\"light\"\r\n        //globalEventOff=\"click\"\r\n        globalEventOff=\"mouseout\"\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default StatesMap;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\nimport ArrowSVG from \"../../../images/arrow.inline.svg\";\r\n\r\nconst Wrapper = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  max-width: ${(props) => (props.maxWidth ? `${props.maxWidth}px` : \"\")} !important;\r\n  padding-bottom: ${(props) => (props.bottomPadding ? `${props.bottomPadding}px` : \"\")} !important;\r\n  margin-top: ${(props) => (props.topMargin ? `${props.topMargin}px` : \"\")};\r\n  margin-bottom: ${(props) => props.bottomMargin}px !important;\r\n\r\n  span {\r\n    transition: color 0.3s ease;\r\n    font-weight: 600;\r\n  }\r\n\r\n  &:hover {\r\n    color: #fd8550;\r\n\r\n    svg {\r\n      path {\r\n        fill: #fd8550;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Arrow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 10px;\r\n\r\n  svg {\r\n    path {\r\n      transition: fill 0.3s ease;\r\n      fill: #5088fd;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArrowLink = ({ className, content, maxWidth, bottomPadding, bottomMargin, topMargin }) => (\r\n  <Wrapper to={content.url} className={className} maxWidth={maxWidth} bottomPadding={bottomPadding} bottomMargin={bottomMargin} topMargin={topMargin}>\r\n    <Arrow>\r\n      <ArrowSVG />\r\n    </Arrow>\r\n    <span>{content.text}</span>\r\n  </Wrapper>\r\n);\r\n\r\nexport default ArrowLink;\r\n\r\nArrowLink.propTypes = {\r\n  maxWidth: PropTypes.number,\r\n  bottomPadding: PropTypes.number,\r\n  bottomMargin: PropTypes.number,\r\n};\r\n\r\nArrowLink.defaultProps = {\r\n  bottomMargin: 32,\r\n};\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n  cx: \"0%\",\n  cy: \"100%\",\n  fx: \"0%\",\n  fy: \"100%\",\n  r: \"110.957%\",\n  gradientTransform: \"scale(.94296 1) rotate(-44.136 0 1)\",\n  id: \"oval_inline_svg__a\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#FFB8DA\",\n  offset: \"0%\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  stopColor: \"#FCEFEF\",\n  offset: \"100%\"\n})));\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M948.2 0v777l-824-.007C149.072 343.7 508.48 0 948.2 0z\",\n  transform: \"matrix(1 0 0 -1 -124 777)\",\n  fill: \"url(#oval_inline_svg__a)\",\n  fillRule: \"evenodd\"\n});\n\nfunction SvgOvalinline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 824 777\"\n  }, props), _ref, _ref2);\n}\n\nexport default SvgOvalinline;"],"sourceRoot":""}