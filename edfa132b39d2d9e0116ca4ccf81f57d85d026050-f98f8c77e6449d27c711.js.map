{"version":3,"sources":["webpack:///./src/atomic/states-llc/list-with-dot.js","webpack:///./src/atomic/organisms/accordion/accordion-with-checkmark.js","webpack:///./src/atomic/organisms/accordion/accordion.js","webpack:///./src/atomic/partials/heading-center.js","webpack:///./src/images/ovals/top-right-transparent-green2.inline.svg","webpack:///./src/components/arrow-link.js"],"names":["Wrapper","styled","ul","color","grey1","circleColor","blue3","blue1","orange3","orange1","green3","green1","purple3","purple1","babyblue3","babyblue1","yellow3","yellow1","dotColor","ListWithDot","className","content","map","item","parse","div","props","tab","bottomMargin","Curve","curveRightBottom","curveRight","TabsWrapper","TabBox","PanelWrapper","ListItems","listColor","dot","Button","button","Content","Icon","Checkmark","cn","args","filter","Boolean","join","Tab","children","useTabState","isActive","onClick","panel","hidden","height","visible","Panel","usePanelState","animate","transition","ease","duration","variants","AccordionWithCounting","curve","red","partialVisibility","once","isVisible","items","question","answer","el","url","to","text","list","listitem","topMargin","mixed","text2","textAfterList","style","marginTop","noAutoWidth","curveLeftBottom","curveLeft","curveColor","maxWidth","Accordion","answer2","e","i","type","link","theme","arrow","width","margin","marginMD","arrowLink","styles","bottomMarginLG","headlineWidth","textWidth","TextCenterLayout","headline","linkText","linkUrl","_extends","Object","assign","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","id","x1","x2","y1","y2","offset","stopColor","stopOpacity","_ref2","fill","fillRule","d","transform","viewBox","a","fontSize","Arrow","ArrowLink","rest","href"],"mappings":"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","file":"edfa132b39d2d9e0116ca4ccf81f57d85d026050-f98f8c77e6449d27c711.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { color } from \"../atoms/styles/colors\";\r\nimport parse from 'html-react-parser';\r\n\r\nconst dotColor = (circleColor) => {\r\n  switch (circleColor) {\r\n    case color.blue3: {\r\n      return color.blue1;\r\n    }\r\n    case color.orange3: {\r\n      return color.orange1;\r\n    }\r\n    case color.green3: {\r\n      return color.green1;\r\n    }\r\n    case color.purple3: {\r\n      return color.purple1;\r\n    }\r\n    case color.babyblue3: {\r\n      return color.babyblue1;\r\n    }\r\n    case color.yellow3: {\r\n      return color.yellow1;\r\n    }\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nconst Wrapper = styled.ul`\r\n    position: relative;\r\n    list-style: none;\r\n    margin-bottom: 24px;\r\n    padding-left: 0 !important;\r\n\r\n    li {\r\n        font-family: Avenir, sans-serif;\r\n        font-size: 16px;\r\n        line-height: 24px;\r\n        color: ${color.grey1};\r\n        padding-left: 26px;\r\n        padding-top: 0 !important;\r\n        position: relative;\r\n\r\n        &::before {\r\n            content: \"\";\r\n            height: 4px;\r\n            width: 4px;\r\n            background-color: ${({ color }) => dotColor(color)};\r\n            border-radius: 50%;\r\n            position: absolute;\r\n            top: 9px;\r\n            left: 6px;\r\n        }\r\n\r\n        &:not(:last-child) {\r\n            margin-bottom: 16px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ListWithDot = ({ className, color, content }) => {\r\n  return (\r\n    <Wrapper className={className} color={color}>\r\n        {content.map((item) => (\r\n            <li>{parse(item)}</li>\r\n        ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ListWithDot;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport { Tabs, useTabState, usePanelState } from \"@bumaga/tabs\";\r\nimport { Paragraph } from \"../../atoms/typography/paragraph\";\r\nimport { motion } from \"framer-motion\";\r\nimport { color } from \"../../atoms/styles/colors\";\r\nimport parse from \"html-react-parser\";\r\nimport ArrowSVG from \"../../../images/arrow-circle.inline.svg\";\r\nimport CurveSVG from \"../../../images/orange-curve.inline.svg\";\r\nimport VisibilitySensor from \"../../../components/VisibilitySensor\";\r\nimport CheckmarkSVG from \"../../../images/circle-status-check.inline.svg\";\r\nimport RedmarkSVG from \"../../../images/circle-status-x.inline.svg\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  margin-top: ${(props) => (props.tab ? \"\" : \"80px\")};\r\n  margin-bottom: ${(props) => (props.bottomMargin ? `${props.bottomMargin}px` : \"\")};\r\n\r\n  @media (min-width: 769px) {\r\n    width: auto;\r\n    padding: ${(props) => (props.tab ? \"\" : \"25px 29px 0\")};\r\n  }\r\n`;\r\n\r\nconst Curve = styled.div`\r\n  display: none;\r\n  height: 25px;\r\n  width: 25px;\r\n  position: absolute;\r\n\r\n  @media (min-width: 769px) {\r\n    display: block;\r\n    top: ${(props) => (!props.curveRightBottom ? \"0\" : \"\")};\r\n    left: ${(props) => (props.curveRight || props.curveRightBottom ? \"\" : \"0\")};\r\n    right: ${(props) => (props.curveRight || props.curveRightBottom ? \"0\" : \"\")};\r\n    bottom: ${(props) => (props.curveRightBottom ? \"-25px\" : \"\")};\r\n    transform: ${(props) => (props.curveRight ? \"rotate(90deg)\" : props.curveRightBottom ? \"rotate(180deg)\" : \"\")};\r\n  }\r\n`;\r\n\r\nconst TabsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 770px;\r\n`;\r\n\r\nconst TabBox = styled.div`\r\n  box-shadow: 0 24px 32px 0 rgba(236, 236, 236, 0.5);\r\n  margin-bottom: 8px;\r\n\r\n  .accordion-panel {\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst PanelWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #fff;\r\n  padding: 15px;\r\n  z-index: 1;\r\n\r\n  @media (min-width: 769px) {\r\n    padding: 16px 40px 40px 80px;\r\n  }\r\n\r\n  h3 {\r\n    margin-bottom: 48px;\r\n  }\r\n\r\n  p,\r\n  li {\r\n    color: ${color.grey1};\r\n    font-family: Avenir, sans-serif;\r\n    max-width: 650px;\r\n    text-align: left;\r\n  }\r\n\r\n  p {\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n\r\n    a {\r\n      color: ${color.orange1};\r\n      font-size: inherit;\r\n      line-height: inherit;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  li {\r\n    font-size: 14px;\r\n    line-height: 19px;\r\n  }\r\n\r\n  // ul {\r\n  //   //list-style: none;\r\n  //   padding-left: 16px;\r\n\r\n  //   li {\r\n  //     padding-top: 16px;\r\n  //   }\r\n  // }\r\n`;\r\n\r\nconst ListItems = styled.ul`\r\n  list-style: none;\r\n  padding-left: 0;\r\n\r\n  li {\r\n    font-family: Avenir, sans-serif;\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n    color: ${(props) => (props.listColor ? `${color[props.listColor.item]}` : `${color.grey1}`)};\r\n    padding-left: 26px;\r\n    padding-top: 0;\r\n    position: relative;\r\n\r\n    &::before {\r\n      content: \"\";\r\n      height: 4px;\r\n      width: 4px;\r\n      background-color: ${(props) => (props.listColor ? `${color[props.listColor.dot]}` : `${color.grey1}`)};\r\n      border-radius: 50%;\r\n      position: absolute;\r\n      top: 9px;\r\n      left: 6px;\r\n    }\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  min-width: 80px;\r\n  width: 100%;\r\n  color: #4e4e4e;\r\n  align-items: center;\r\n  background: #fff;\r\n  display: flex;\r\n  cursor: pointer;\r\n  position: relative;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  border: none;\r\n\r\n  &.active {\r\n    border-radius: 5px 5px 0 0;\r\n    font-weight: 600;\r\n\r\n    svg {\r\n      transform: rotate(0deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  padding: 16px 40px 16px 0;\r\n\r\n  span {\r\n    color: #4e4e4e;\r\n    font-family: Avenir;\r\n    font-size: 16px;\r\n    text-align: left;\r\n    width: 100%;\r\n    line-height: 24px;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 80px;\r\n  width: 80px;\r\n  min-height: 80px;\r\n  min-width: 80px;\r\n  max-height: 80px;\r\n  max-width: 80px;\r\n  opacity: 0.75;\r\n\r\n  svg {\r\n    transform: rotate(180deg);\r\n    transition: transform 0.3s ease;\r\n  }\r\n`;\r\n\r\nconst Checkmark = styled.div`\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  min-width: 30px;\r\n  height: 30px;\r\n  margin-left: 30px;\r\n  margin-right: 30px;\r\n`;\r\n\r\nconst cn = (...args) => args.filter(Boolean).join(\" \");\r\n\r\nconst Tab = ({ children }) => {\r\n  const { isActive, onClick } = useTabState();\r\n\r\n  return (\r\n    <Button className={cn(\"accordion-tab\", isActive && \"active\")} onClick={onClick}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst panel = {\r\n  hidden: { height: 0 },\r\n  visible: { height: \"auto\" },\r\n};\r\n\r\nconst Panel = ({ children }) => {\r\n  const isActive = usePanelState();\r\n\r\n  return (\r\n    <motion.div className=\"accordion-panel\" animate={isActive ? \"visible\" : \"hidden\"} transition={{ ease: \"easeOut\", duration: 0.3 }} variants={panel}>\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst AccordionWithCounting = ({ content, curve, curveRight, curveRightBottom, tab, listColor, bottomMargin, red }) => {\r\n  return (\r\n    <VisibilitySensor partialVisibility once>\r\n      {({ isVisible }) => (\r\n        <Wrapper className={isVisible ? \"slideUp enter\" : \"slideUp\"} tab={tab} bottomMargin={bottomMargin}>\r\n          {curve && (\r\n            <Curve curveRight={curveRight} curveRightBottom={curveRightBottom}>\r\n              <CurveSVG />\r\n            </Curve>\r\n          )}\r\n          <Tabs>\r\n            <TabsWrapper>\r\n              {content.items.map((item) => (\r\n                <TabBox>\r\n                  <Tab>\r\n                    <Content>\r\n                        <Checkmark>\r\n                            {!red ? (\r\n                                \r\n                                <CheckmarkSVG />\r\n                            ) : (\r\n                                <RedmarkSVG />\r\n                            )}\r\n                        </Checkmark>\r\n                        <span>{item.question}</span>\r\n                    </Content>\r\n                    <Icon>\r\n                      <ArrowSVG />\r\n                    </Icon>\r\n                  </Tab>\r\n                  <Panel>\r\n                    <PanelWrapper>\r\n                      {typeof item.answer === \"string\" ? <Paragraph bottomMargin=\"0\">{parse(item.answer)}</Paragraph> : null}\r\n                      {typeof item.answer === \"object\" ? <Paragraph bottomMargin=\"0\">{item.answer.map((el) => (el.url ? <Link to={el.url}>{` ${parse(el.text)} `}</Link> : el.text))}</Paragraph> : null}\r\n                      {/* <p>{item.answer}</p> */}\r\n                      {item.list && (\r\n                        <ListItems listColor={listColor}>\r\n                          {item.list.map((listitem) => (\r\n                            <li>{listitem}</li>\r\n                          ))}\r\n                        </ListItems>\r\n                      )}\r\n\r\n                      {typeof item.text === \"string\" ? (\r\n                        <Paragraph topMargin=\"32\" bottomMargin=\"0\" mixed>\r\n                          {parse(item.text)}\r\n                        </Paragraph>\r\n                      ) : null}\r\n                      {typeof item.text === \"object\" ? (\r\n                        <Paragraph topMargin=\"32\" bottomMargin=\"0\" mixed>\r\n                          {item.text.map((el) => (el.url ? <Link to={el.url}>{` ${parse(el.text)} `}</Link> : el.text))}\r\n                        </Paragraph>\r\n                      ) : null}\r\n\r\n                      {typeof item.text2 === \"string\" ? (\r\n                        <Paragraph topMargin=\"32\" bottomMargin=\"0\" mixed>\r\n                          {parse(item.text2)}\r\n                        </Paragraph>\r\n                      ) : null}\r\n                      {typeof item.text2 === \"object\" ? (\r\n                        <Paragraph topMargin=\"32\" bottomMargin=\"0\" mixed>\r\n                          {item.text2.map((el) => (el.url ? <Link to={el.url}>{` ${parse(el.text)} `}</Link> : el.text))}\r\n                        </Paragraph>\r\n                      ) : null}\r\n\r\n                      {item.textAfterList && <p style={{ marginTop: 26 + \"px\" }}>{item.textAfterList}</p>}\r\n                    </PanelWrapper>\r\n                  </Panel>\r\n                </TabBox>\r\n              ))}\r\n            </TabsWrapper>\r\n          </Tabs>\r\n        </Wrapper>\r\n      )}\r\n    </VisibilitySensor>\r\n  );\r\n};\r\nexport default AccordionWithCounting;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport parse from \"html-react-parser\";\r\nimport { Tabs, useTabState, usePanelState } from \"@bumaga/tabs\";\r\n\r\nimport ListWithDot from \"../../states-llc/list-with-dot\";\r\nimport { color } from \"../../atoms/styles/colors\";\r\nimport ArrowLink from \"../../../components/arrow-link\";\r\nimport { Paragraph } from \"../../atoms/typography/paragraph\";\r\nimport ArrowSVG from \"../../../images/arrow-circle.inline.svg\";\r\nimport CurveSVG from \"../../../images/orange-curve.inline.svg\";\r\nimport VisibilitySensor from \"../../../components/VisibilitySensor\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  margin-top: ${(props) => (props.tab ? \"\" : \"80px\")};\r\n  margin-bottom: ${(props) => (props.bottomMargin ? `${props.bottomMargin}px` : \"\")};\r\n\r\n  @media (min-width: 769px) {\r\n    ${(props) => (props.noAutoWidth ? \"\" : \"width: auto;\")}\r\n    padding: ${(props) => (props.tab ? \"\" : \"25px 29px 0\")};\r\n  }\r\n`;\r\n\r\nconst Curve = styled.div`\r\n  display: none;\r\n  height: 25px;\r\n  width: 25px;\r\n  position: absolute;\r\n\r\n  @media (min-width: 769px) {\r\n    display: block;\r\n    top: ${(props) => (!props.curveRightBottom && !props.curveLeftBottom ? \"0\" : \"\")};\r\n    left: ${(props) => (props.curveLeft || props.curveLeftBottom ? \"0\" : \"\")};\r\n    right: ${(props) => (props.curveRight || props.curveRightBottom ? \"0\" : \"\")};\r\n    bottom: ${(props) => (props.curveRightBottom || props.curveLeftBottom ? \"-25px\" : \"\")};\r\n    transform: ${(props) => (props.curveRight ? \"rotate(90deg)\" : props.curveRightBottom ? \"scale(-1)\" : props.curveLeftBottom ? \"rotate(-90deg)\" : \"\")};\r\n  }\r\n\r\n  svg {\r\n    path {\r\n      fill: ${(props) => (props.curveColor ? props.curveColor : \"\")};\r\n    }\r\n  }\r\n`;\r\n\r\nconst TabsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: ${(props) => props.maxWidth ?? \"770\"}px;\r\n`;\r\n\r\nconst TabBox = styled.div`\r\n  box-shadow: 0 24px 32px 0 rgba(236, 236, 236, 0.5);\r\n  margin-bottom: 8px;\r\n\r\n  .accordion-panel {\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst PanelWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #fff;\r\n  padding: 15px;\r\n  z-index: 1;\r\n\r\n  @media (min-width: 769px) {\r\n    padding: 16px 40px 40px 80px;\r\n  }\r\n\r\n  h3 {\r\n    margin-bottom: 48px;\r\n  }\r\n\r\n  p,\r\n  li {\r\n    color: ${color.grey1};\r\n    font-family: Avenir, sans-serif;\r\n    max-width: 650px;\r\n    text-align: left;\r\n  }\r\n\r\n  p {\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n\r\n    a {\r\n      color: ${color.orange1};\r\n      font-size: inherit;\r\n      line-height: inherit;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  li {\r\n    font-size: 14px;\r\n    line-height: 19px;\r\n\r\n    a {\r\n      font-size: inherit;\r\n      line-height: inherit;\r\n      color: ${color.orange1};\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    //list-style: none;\r\n    padding-left: 16px;\r\n\r\n    li {\r\n      padding-top: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  min-width: 80px;\r\n  width: 100%;\r\n  color: #4e4e4e;\r\n  align-items: center;\r\n  background: #fff;\r\n  display: flex;\r\n  cursor: pointer;\r\n  position: relative;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  border: none;\r\n\r\n  &.active {\r\n    border-radius: 5px 5px 0 0;\r\n    font-weight: 900;\r\n\r\n    svg {\r\n      transform: rotate(0deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  padding: 16px 40px 16px 0;\r\n\r\n  span {\r\n    color: #4e4e4e;\r\n    font-family: Avenir;\r\n    font-size: 16px;\r\n    text-align: left;\r\n    width: 100%;\r\n    line-height: 24px;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 80px;\r\n  width: 80px;\r\n  min-height: 80px;\r\n  min-width: 80px;\r\n  max-height: 80px;\r\n  max-width: 80px;\r\n  opacity: 0.75;\r\n\r\n  svg {\r\n    transform: rotate(180deg);\r\n    transition: transform 0.3s ease;\r\n  }\r\n`;\r\n\r\nconst cn = (...args) => args.filter(Boolean).join(\" \");\r\n\r\nconst Tab = ({ children }) => {\r\n  const { isActive, onClick } = useTabState();\r\n\r\n  return (\r\n    <Button className={cn(\"accordion-tab\", isActive && \"active\")} onClick={onClick}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst panel = {\r\n  hidden: { height: 0 },\r\n  visible: { height: \"auto\" },\r\n};\r\n\r\nconst Panel = ({ children }) => {\r\n  const isActive = usePanelState();\r\n\r\n  return (\r\n    <motion.div className=\"accordion-panel\" animate={isActive ? \"visible\" : \"hidden\"} transition={{ ease: \"easeOut\", duration: 0.3 }} variants={panel}>\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst Accordion = ({ content, curve, curveRight, curveRightBottom, curveLeft, curveLeftBottom, curveColor, tab, maxWidth, noAutoWidth, bottomMargin }) => {\r\n  return (\r\n    // <VisibilitySensor partialVisibility once>\r\n    //   {({ isVisible }) => (\r\n    <Wrapper\r\n      //className={isVisible ? \"slideUp enter\" : \"slideUp\"}\r\n      tab={tab}\r\n      noAutoWidth={noAutoWidth}\r\n      bottomMargin={bottomMargin}\r\n    >\r\n      {curve && (\r\n        <Curve curveRight={curveRight} curveRightBottom={curveRightBottom} curveLeft={curveLeft} curveLeftBottom={curveLeftBottom} curveColor={curveColor}>\r\n          <CurveSVG />\r\n        </Curve>\r\n      )}\r\n      <Tabs>\r\n        <TabsWrapper maxWidth={maxWidth}>\r\n          {content.items.map((item) => (\r\n            <TabBox>\r\n              <Tab>\r\n                <Icon>\r\n                  <ArrowSVG />\r\n                </Icon>\r\n                <Content>\r\n                  <span>{item.question}</span>\r\n                </Content>\r\n              </Tab>\r\n              <Panel>\r\n                <PanelWrapper>\r\n                  {typeof item.answer === \"string\" ? (\r\n                    <Paragraph bottomMargin=\"0\" mixed>\r\n                      {parse(item.answer)}\r\n                    </Paragraph>\r\n                  ) : null}\r\n                  {typeof item.answer === \"object\" ? (\r\n                    <Paragraph bottomMargin=\"0\" mixed>\r\n                      {item.answer.map((el) => (el.url ? <Link to={el.url}>{` ${parse(el.text)} `}</Link> : el.text))}\r\n                    </Paragraph>\r\n                  ) : null}\r\n\r\n                  {item.list && (\r\n                    <ul>\r\n                      {item.list.map((listitem) => (\r\n                        <li>{parse(listitem)}</li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n\r\n                  {typeof item.text === \"string\" ? (\r\n                    <Paragraph topMargin=\"32\" bottomMargin=\"0\" mixed>\r\n                      {parse(item.text)}\r\n                    </Paragraph>\r\n                  ) : null}\r\n                  {typeof item.text === \"object\" ? (\r\n                    <Paragraph topMargin=\"32\" bottomMargin=\"0\" mixed>\r\n                      {item.text.map((el) => (el.url ? <Link to={el.url}>{` ${parse(el.text)} `}</Link> : el.text))}\r\n                    </Paragraph>\r\n                  ) : null}\r\n\r\n                  {item.answer2 &&\r\n                    item.answer2.map((e, i) => (\r\n                      <div>\r\n                        {e.type === \"paragraph\" && <Paragraph mixed={true}>{parse(e.content)}</Paragraph>}\r\n\r\n                        {e.type === \"arrow-links\" &&\r\n                          e.content.map((link) => (\r\n                            <ArrowLink url={link.url} style={link.style}>\r\n                              {link.text}\r\n                            </ArrowLink>\r\n                          ))}\r\n\r\n                        {e.type === \"list-dot-without-bg\" && <ListWithDot color={e.color} content={e.content} />}\r\n\r\n                        {e.type === \"button\" && <Button content={e.content} theme={e.theme} arrow width=\"350px\" margin=\"16px 0 0 0\" marginMD=\"42px 0 42px 0\" />}\r\n                      </div>\r\n                    ))}\r\n\r\n                  {item.arrowLink && (\r\n                    <ArrowLink url={item.arrowLink.url} style={item.arrowLink.styles}>\r\n                      {item.arrowLink.text}\r\n                    </ArrowLink>\r\n                  )}\r\n                </PanelWrapper>\r\n              </Panel>\r\n            </TabBox>\r\n          ))}\r\n        </TabsWrapper>\r\n      </Tabs>\r\n    </Wrapper>\r\n    //   )}\r\n    // </VisibilitySensor>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n\r\nAccordion.propTypes = {\r\n  bottomMargin: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport parse from 'html-react-parser';\r\nimport ArrowLink from \"../molecules/buttons/text\";\r\nimport VisibilitySensor from \"../../components/VisibilitySensor\";\r\nimport ContentCenter from \"./content-center\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  margin-bottom: ${(props) => (props.bottomMargin ? `${props.bottomMargin}px` : \"\")};\r\n\r\n  @media (min-width: 992px) {\r\n    margin-bottom: ${(props) => (props.bottomMarginLG ? `${props.bottomMarginLG}px` : \"\")};\r\n  }\r\n\r\n  h2 {\r\n    max-width: ${(props) => (props.headlineWidth ? props.headlineWidth : \"610\")}px;\r\n    margin: 0 auto 24px;\r\n  }\r\n\r\n  p {\r\n    max-width: ${(props) => (props.textWidth ? props.textWidth : \"750\")}px;\r\n    text-align: center;\r\n    margin: 0 auto 24px;\r\n  }\r\n\r\n  a {\r\n    margin: 0 auto 24px;\r\n  }\r\n`;\r\n\r\nconst TextCenterLayout = ({ className, headline, headlineWidth, text, textWidth, linkText, linkUrl, bottomMargin, bottomMarginLG }) => {\r\n  const content = {\r\n    text: linkText,\r\n    url: linkUrl,\r\n  };\r\n\r\n  return (\r\n    <Wrapper className={className} headlineWidth={headlineWidth} textWidth={textWidth} bottomMargin={bottomMargin} bottomMarginLG={bottomMarginLG}>\r\n      <ContentCenter>\r\n        {headline && (\r\n          <VisibilitySensor partialVisibility once>\r\n            {({ isVisible }) => <h2 className={isVisible ? \"slideUp enter\" : \"slideUp\"}>{parse(headline)}</h2>}\r\n          </VisibilitySensor>\r\n        )}\r\n        {text && (\r\n          <VisibilitySensor partialVisibility once>\r\n            {({ isVisible }) => <p className={isVisible ? \"slideUp enter\" : \"slideUp\"}>{parse(text)}</p>}\r\n          </VisibilitySensor>\r\n        )}\r\n        {linkText && (\r\n          <VisibilitySensor partialVisibility once>\r\n            {({ isVisible }) => <ArrowLink content={content} className={isVisible ? \"slideUp enter\" : \"slideUp\"} />}\r\n          </VisibilitySensor>\r\n        )}\r\n      </ContentCenter>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TextCenterLayout;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"top-right-transparent-green2_inline_svg__a\",\n  x1: \"100%\",\n  x2: \"100%\",\n  y1: \"95.674%\",\n  y2: \"0%\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"0%\",\n  stopColor: \"#FFF\",\n  stopOpacity: 0\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: \"100%\",\n  stopColor: \"#D5F3E8\"\n})));\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"url(#top-right-transparent-green2_inline_svg__a)\",\n  fillRule: \"evenodd\",\n  d: \"M420 0v420H0C0 188.04 188.04 0 420 0z\",\n  transform: \"matrix(1 0 0 -1 0 420)\"\n});\n\nfunction SvgTopRightTransparentGreen2Inline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 420 420\"\n  }, props), _ref, _ref2);\n}\n\nexport default SvgTopRightTransparentGreen2Inline;","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ArrowSVG from \"../images/arrow.inline.svg\"\r\n\r\nconst Wrapper = styled.a`\r\n    display: flex;\r\n    align-items: baseline;\r\n    text-decoration: none;\r\n    margin-bottom: 15px;\r\n\r\n    &:last-child{\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    span {\r\n        transition: color 0.3s ease;\r\n        font-weight: 600;\r\n        font-size: ${props => (props.fontSize ? props.fontSize : \"initial\")};\r\n    }\r\n\r\n    &:hover {\r\n        color: #fd8550;\r\n\r\n        svg {\r\n            path {\r\n                fill: #fd8550;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Arrow = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 12px;\r\n    width: 12px;\r\n    margin-right: 10px;\r\n\r\n    svg {\r\n        path {\r\n        transition: fill 0.3s ease;\r\n        fill: #5088fd;\r\n        }\r\n    }\r\n`\r\n\r\nconst ArrowLink = ({ children, className, url, ...rest }) => (\r\n  <Wrapper href={url ?? '#'} className={className} {...rest}>\r\n    <Arrow>\r\n      <ArrowSVG />\r\n    </Arrow>\r\n    <span>{children}</span>\r\n  </Wrapper>\r\n)\r\nexport default ArrowLink\r\n"],"sourceRoot":""}