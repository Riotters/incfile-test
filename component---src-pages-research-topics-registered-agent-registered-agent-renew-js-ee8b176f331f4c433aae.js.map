{"version":3,"sources":["webpack:///./src/atomic/molecules/blocks/research-topics-path.js","webpack:///./src/atomic/molecules/mixed-blocks/numeric-box.js","webpack:///./src/atomic/organisms/lists/numeric-boxed-list.js","webpack:///./src/atomic/sections/research-topics/registered-agent/registered-agent-renew.js","webpack:///./src/static/research-topics/registered-agent/registered-agent-renew.js","webpack:///./src/pages/research-topics/registered-agent/registered-agent-renew.js","webpack:///./src/atomic/molecules/text-blocks/icon-h4-list-color.js"],"names":["Wrapper","styled","span","ResearchTopicPath","content","map","link","TextWrapper","div","Link","ArrowLink","Flex","li","NumericBox","className","id","item","noBox","number","header","size","bottomMargin","text","mixed","parse","url","button","theme","arrow","width","margin","marginMD","ul","props","color","blue1","white","black","NumericBoxedList","curve","rest","top","left","About","section","AboutSection","height","y","image","links","big","about","related","buttons","HelpCenter","title","description","imageName","imageAlt","ovalColor","categories","service","tools","rocket","dotColor","circleColor","blue3","orange3","orange1","green3","green1","purple3","purple1","babyblue3","babyblue1","yellow3","yellow1","red3","red1","rounded","grey1","IconTextColorBox","curveColor","right","list","el","to"],"mappings":"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","file":"component---src-pages-research-topics-registered-agent-registered-agent-renew-js-ee8b176f331f4c433aae.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ArrowLink from \"../../molecules/buttons/text\";\r\n\r\nconst Wrapper = styled.span`\r\n    display: flex;\r\n\r\n    a {\r\n    word-break: break-word;\r\n        \r\n    &:not(:first-child) {\r\n        margin-left: 16px;\r\n    }\r\n\r\n    &:not(:last-child) {\r\n        display: none;\r\n\r\n        @media (min-width: 576px) {\r\n        display: flex;\r\n        }\r\n    }\r\n    }\r\n`;\r\n\r\nconst ResearchTopicPath = ({ content }) => (\r\n    <Wrapper>\r\n        {content.map((link) => (\r\n          <ArrowLink content={link} />\r\n        ))}\r\n    </Wrapper>\r\n);\r\n\r\nexport default ResearchTopicPath;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport parse from \"html-react-parser\";\r\nimport Whitebox from \"../../atoms/boxes/white-box-li\";\r\nimport Circle from \"../../atoms/icons/circle\";\r\nimport { Heading } from \"../../atoms/typography/heading\";\r\nimport { Paragraph } from \"../../atoms/typography/paragraph\";\r\nimport ArrowLink from \"../../molecules/buttons/text\";\r\nimport Button from \"../../molecules/buttons/button\";\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Link = styled(ArrowLink)`\r\n  margin-top: 24px;\r\n`;\r\n\r\nconst Flex = styled.li`\r\n  display: flex;\r\n`;\r\n\r\nconst NumericBox = ({ className, id, item, noBox }) =>\r\n  !noBox ? (\r\n    <Whitebox className={className}>\r\n      <Circle>{item?.number ?? (id + 1)}</Circle>\r\n      <TextWrapper>\r\n        {item.header && (\r\n          <Heading size=\"5\" bottomMargin=\"36\">\r\n            {item.header}\r\n          </Heading>\r\n        )}\r\n        {item.text && (\r\n          <Paragraph bottomMargin=\"0\" mixed>\r\n            {parse(item.text)}\r\n          </Paragraph>\r\n        )}\r\n        {item.url && <Link content={item.url} bottomMargin=\"0\" />}\r\n        {!item.header && !item.text && !item.url && (\r\n          <Paragraph bottomMargin=\"0\" mixed>\r\n            {parse(item)}\r\n          </Paragraph>\r\n        )}\r\n\r\n        {item.button && <Button content={item.button} theme={item.button.theme} arrow width={item.button.width ?? `350px`} margin=\"16px 0 0 0\" marginMD=\"32px 0 0 0\" />}\r\n      </TextWrapper>\r\n    </Whitebox>\r\n  ) : (\r\n    <Flex className={className}>\r\n      <Circle>{item?.number ?? (id + 1)}</Circle>\r\n      <TextWrapper>\r\n        {item.header && (\r\n          <Heading size=\"5\" bottomMargin=\"36\">\r\n            {item.header}\r\n          </Heading>\r\n        )}\r\n        {item.text && (\r\n          <Paragraph bottomMargin=\"0\" mixed>\r\n            {parse(item.text)}\r\n          </Paragraph>\r\n        )}\r\n        {item.url && <Link content={item.url} bottomMargin=\"0\" />}\r\n        {!item.header && !item.text && !item.url && <Paragraph bottomMargin=\"0\">{item}</Paragraph>}\r\n\r\n        {item.button && <Button content={item.button} theme={item.button.theme} arrow width={item.button.width ?? `350px`} margin=\"16px 0 0 0\" marginMD=\"32px 0 0 0\" />}\r\n      </TextWrapper>\r\n    </Flex>\r\n  );\r\n\r\nexport default NumericBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { color } from \"../../atoms/styles/colors\";\r\nimport Curve from \"../../atoms/icons/curve\";\r\nimport CurveSVG from \"../../../images/curves/bottom-left-top-right.inline.svg\";\r\nimport NumericBox from \"../../molecules/mixed-blocks/numeric-box\";\r\n\r\nconst Wrapper = styled.ul`\r\n  width: 100%;\r\n  list-style: none;\r\n  position: relative;\r\n  margin-bottom: ${(props) => (props.bottomMargin ? `${props.bottomMargin}px` : \"\")};\r\n\r\n  li {\r\n    display: flex;\r\n    margin-bottom: ${(props) => (!props.noBox ? \"8px\" : \"24px\")};\r\n    padding: ${(props) => (!props.noBox ? \"24px 40px 24px 24px\" : \"\")};\r\n\r\n    & > span {\r\n      background-color: ${color.blue1};\r\n      color: ${color.white};\r\n      margin-right: 24px;\r\n    }\r\n\r\n    p {\r\n      //   display: flex;\r\n      //   align-items: center;\r\n      min-height: 32px;\r\n      font-size: 16px;\r\n      line-height: 24px;\r\n      color: ${(props) => (!props.noBox ? color.black : \"\")};\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NumericBoxedList = ({ className, content, noBox, curve, bottomMargin, ...rest }) => {\r\n  return (\r\n    <Wrapper className={className} bottomMargin={bottomMargin} noBox={noBox} {...rest}>\r\n      {curve && (\r\n        <Curve top=\"-25\" left=\"-29\" color={color.blue1}>\r\n          <CurveSVG />\r\n        </Curve>\r\n      )}\r\n      {content.map((item, id) => (\r\n        <NumericBox item={item} id={id} noBox={noBox} />\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default NumericBoxedList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { color } from \"../../../atoms/styles/colors\";\r\nimport { Heading } from \"../../../atoms/typography/heading\";\r\nimport { Paragraph } from \"../../../atoms/typography/paragraph\";\r\nimport ArrowLink from \"../../../molecules/buttons/text\";\r\nimport ImageContent from \"../../../partials/left-image-right-content\";\r\nimport IconSVG from \"../../../../images/icons/no-pass-sign.inline.svg\";\r\nimport IconListColorBox from \"../../../molecules/text-blocks/icon-h4-list-color\";\r\nimport Oval from \"../../../atoms/icons/oval\";\r\nimport OvalSVG from \"../../../../images/ovals/top-left-transparent-blue3.inline.svg\";\r\nimport Path from \"../../../molecules/blocks/research-topics-path\";\r\nimport parse from \"html-react-parser\";\r\nimport Button from \"../../../molecules/buttons/button\";\r\nimport NumericList from \"../../../organisms/lists/numeric-boxed-list\";\r\n\r\nconst About = styled.section`\r\n  position: relative;\r\n  padding-bottom: 104px;\r\n`;\r\n\r\nconst AboutSection = ({ className, content }) => (\r\n  <About className={className}>\r\n    <Oval className=\"oval\" height=\"570\" width=\"570\" y=\"-40\">\r\n      <OvalSVG />\r\n    </Oval>\r\n    <ImageContent image=\"web-address-search\">\r\n      <Path content={content.links} />\r\n      <Heading size={3} bottomMargin=\"32\">\r\n        {content.header}\r\n      </Heading>\r\n      <Paragraph big bottomMargin=\"48\">\r\n        {content.text}\r\n      </Paragraph>\r\n    </ImageContent>\r\n  </About>\r\n);\r\n\r\nexport default AboutSection;\r\n","export const about = {\r\n    links: [\r\n      {\r\n        text: `View All Topics`,\r\n        url: `/help-center/`,\r\n      },\r\n      {\r\n        text: `Registered Agent`,\r\n        url: `/research-topics/registered-agent`,\r\n      },\r\n    ],\r\n    header: `How will I know when it is time to renew my Registered Agent?`,\r\n    text: `The Registered Agent service is renewed annually. An email with renewal instructions will be sent one month prior to the due date. The service may be renewed anytime through the Registered Agent Dashboard.`,\r\n  }\r\n\r\n  export const related = {\r\n    header: \r\n        `Related Articles`,\r\n    text:\r\n        `Other users were also interested in knowing about…`,\r\n    buttons: [\r\n        {\r\n            header: `Can I Be My Own Registered Agent?`,\r\n            url: `/research-topics/registered-agent/own-registered-agent`,\r\n        },\r\n        {\r\n            header: `What is the main function of the Registered Agent?`,\r\n            url: `/research-topics/registered-agent/registered-agent-function`,\r\n        },\r\n        {\r\n            header: `What happens if I require the signature of my Registered Agent?`,\r\n            url: `/research-topics/registered-agent/registered-agent-signature`,\r\n        },\r\n        {\r\n            header: `What is the name and address of my Registered Agent?`,\r\n            url: `/research-topics/registered-agent/registered-agent-address`,\r\n        },\r\n        {\r\n            header: `Who will be responsible for updating the Registered Agent information with the state?`,\r\n            url: `/research-topics/registered-agent/registered-agent-info-updat`,\r\n        },\r\n        {\r\n            header: `How much will it cost to renew my Registered Agent service?`,\r\n            url: `/research-topics/registered-agent/service-cost`,\r\n        },\r\n        {\r\n            header: `How will I know when it is time to renew my Registered Agent?`,\r\n            url: `/research-topics/registered-agent/registered-agent-renew`,\r\n        },\r\n        {\r\n            header: `How will I be notified if service of process is received?`,\r\n            url: `/research-topics/registered-agent/service-process-notify`,\r\n        },\r\n        {\r\n            header: `What will happen to my company if the registered agent resigns?`,\r\n            url: `/research-topics/registered-agent/registered-agent-resigns`,\r\n        },\r\n        {\r\n            header: `Can the registered agent be a company?`,\r\n            url: `/research-topics/registered-agent/registered-agent-company`,\r\n        },\r\n        {\r\n            header: `What does a Registered Agent do?`,\r\n            url: `/research-topics/registered-agent/registered-agent-tasks`,\r\n        },\r\n      ],\r\n}","import React from \"react\";\r\nimport Layout from \"../../../components/layout\";\r\nimport SEO from \"../../../components/seo\";\r\nimport Buttonsbox from \"../../../atomic/atoms/boxes/top-buttons-box\";\r\nimport Button from \"../../../atomic/molecules/buttons/button\";\r\n//Sections\r\nimport Top from \"../../../atomic/partials/top\";\r\nimport About from \"../../../atomic/sections/research-topics/registered-agent/registered-agent-renew\";\r\nimport Related from \"../../../atomic/sections/learning-center-entity/help-center-article/related\";\r\nimport Categories from \"../../../atomic/sections/learning-center-entity/help-center-article/categories\";\r\nimport Service from \"../../../atomic/sections/learning-center-entity/help-center/service\";\r\nimport Tools from \"../../../atomic/sections/learning-center-entity/help-center-article/tools\";\r\nimport Benefits from \"../../../components/partials/sections/benefits\";\r\nimport Articles from \"../../../components/partials/sections/articles\";\r\nimport Rocket from \"../../../atomic/sections/review-entity-types/c-corporation/rocket\";\r\nimport Searchbar from \"../../../atomic/molecules/form/searchbar\";\r\n//Texts\r\nimport { top, rocket, categories, service, tools } from \"../../../static/learning-center-entity/help-center-article\";\r\nimport { about, related } from \"../../../static/research-topics/registered-agent/registered-agent-renew\";\r\n\r\nconst HelpCenter = () => (\r\n  <Layout>\r\n    <SEO title=\"Managing and Operating Your LLC or Corporation | Documents Needed to Manage your Company or Corporation\" description=\"Manage LLC and Corporate Ongoing Filng Requirements. Infile has the needed documents to help you file and stay in good standing.\" />\r\n    <Top imageName=\"mrs-bulb-help-center-article\" imageAlt=\"Mrs Bulb and with checklist\" ovalColor=\"green\">\r\n      <h1>{top.header}</h1>\r\n      <p>{top.text}</p>\r\n      <Searchbar />\r\n    </Top>\r\n    <About content={about} />\r\n    <Related content={related} />\r\n    <Categories content={categories} />\r\n    <Service content={service} />\r\n    <Tools content={tools} />\r\n    <Rocket content={rocket} />\r\n  </Layout>\r\n);\r\n\r\nexport default HelpCenter;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport parse from \"html-react-parser\";\r\nimport Colorbox from \"../../atoms/boxes/color-box\";\r\nimport { Heading } from \"../../atoms/typography/heading\";\r\nimport { Paragraph } from \"../../atoms/typography/paragraph\";\r\nimport { color } from \"../../atoms/styles/colors\";\r\nimport Curve from \"../../atoms/icons/curve\";\r\nimport CurveSVG from \"../../../images/curves/top-left-bottom-right.inline.svg\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst dotColor = (circleColor) => {\r\n  switch (circleColor) {\r\n    case color.blue3: {\r\n      return color.blue1;\r\n    }\r\n    case color.orange3: {\r\n      return color.orange1;\r\n    }\r\n    case color.green3: {\r\n      return color.green1;\r\n    }\r\n    case color.purple3: {\r\n      return color.purple1;\r\n    }\r\n    case color.babyblue3: {\r\n      return color.babyblue1;\r\n    }\r\n    case color.yellow3: {\r\n      return color.yellow1;\r\n    }\r\n    case color.red3: {\r\n      return color.red1;\r\n    }\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  margin-bottom: ${(props) => (props.bottomMargin ? `${props.bottomMargin}px` : \"\")};\r\n\r\n  .box {\r\n    padding: 48px 48px 48px 40px;\r\n    border-radius: ${(props) => (props.rounded ? \"5px 50px 50px 5px\" : \"\")};\r\n\r\n    ul {\r\n      list-style: none;\r\n\r\n      li {\r\n        font-family: Avenir, sans-serif;\r\n        font-size: 16px;\r\n        line-height: 24px;\r\n        color: ${color.grey1};\r\n        padding-left: 26px;\r\n        position: relative;\r\n\r\n        &::before {\r\n          content: \"\";\r\n          height: 4px;\r\n          width: 4px;\r\n          background-color: ${({ color }) => dotColor(color)};\r\n          border-radius: 50%;\r\n          position: absolute;\r\n          top: 9px;\r\n          left: 6px;\r\n        }\r\n\r\n        &:not(:last-child) {\r\n          margin-bottom: 16px;\r\n        }\r\n\r\n        a {\r\n          font-size: inherit;\r\n          color: ${color.blue1};\r\n          font-weight: 600;\r\n          transition: color .3s ease;\r\n\r\n          &:hover {\r\n            color: ${color.orange1};  \r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst IconTextColorBox = ({ className, color, content, bottomMargin, rounded, curve, curveColor, ...rest }) => {\r\n    return (\r\n        <Wrapper className={className} rounded={rounded} bottomMargin={bottomMargin} color={color} {...rest}>\r\n            {curve && (\r\n                <Curve top=\"-15\" right=\"-15\" color={curveColor ? curveColor : dotColor(color)}>\r\n                    <CurveSVG />\r\n                </Curve>\r\n            )}\r\n            <Colorbox className=\"box\" color={color}>\r\n                {content?.header && (\r\n                    <Heading size=\"4\" bottomMargin=\"24\">\r\n                        {parse(content.header)}\r\n                    </Heading>\r\n                )}\r\n\r\n                <ul>{content.list.map((item) => (typeof item === \"string\" ? <li>{parse(item)}</li> : <li>{item.map((el) => (el.url ? <Link to={el.url}>{` ${el.text} `}</Link> : el.text))}</li>))}</ul>\r\n            </Colorbox>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default IconTextColorBox;\r\n"],"sourceRoot":""}